<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.IAdminDao">


    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.Admin">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="no" property="no" />
        <result column="name" property="name" />
        <result column="phone" property="phone" />
        <result column="tel" property="tel" />
        <result column="type" property="type" />
        <result column="state" property="state" />
        <result column="id_number" property="idNumber" />
        <result column="sex" property="sex" />
        <result column="leader_id" property="leaderId" />
        <result column="store_id" property="storeId" />
        <result column="photo_img" property="photoImg" />
        <result column="create_time" property="createTime" />
        <result column="create_user" property="createUser" />
        <result column="create_user_id" property="createUserId" />
        <result column="check_user_id" property="checkUserId" />
        <result column="hire_time" property="hireTime" />
        <result column="leave_time" property="leaveTime" />
        <result column="account_id" property="accountId" />
        <result column="client_type" property="clientType" />
        <result column="biz_scope" property="bizScope" />
        <result column="biz_desc" property="bizDesc" />
    </resultMap>

    <resultMap id="salesmanListByStoreIdMap" type="com.cjyc.common.model.vo.web.admin.TypeSalesmanVo">
        <id column="id" property="adminId" />
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <association property="storeName" column="{userId=id}" select="getStoreNamesByAdminId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, no, name, phone, tel, type, state, id_number, sex, leader_id, store_id, photo_img, create_time, create_user, create_user_id, check_user_id, hire_time, leave_time, account_id, client_type, biz_scope, biz_desc
    </sql>



    <select id="findByUserId" resultType="com.cjyc.common.model.entity.Admin">
        select
        <include refid="Base_Column_List"/>
        from b_admin
        where user_id = #{userId}
    </select>
    <select id="findStoreBizScope" resultType="java.lang.Long">
        select
        store_id
        from b_admin_store_con
        where admin_id = #{adminId}
    </select>

    <!-- 根据承运商id获取Admin -->
    <select id="getByCarrierId" resultType="com.cjyc.common.model.entity.Admin" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from b_admin
        where carrier_id = #{carrierId}
    </select>
    <select id="findListByUserIds" resultType="com.cjyc.common.model.entity.Admin">
        select
        <include refid="Base_Column_List"/>
        from b_admin
        <where>
            and user_id in
            <foreach collection="userIds" index="index" item ="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>

    <select id="deliverySalesman" resultType="com.cjyc.common.model.vo.web.admin.TypeSalesmanVo"
                parameterType="com.cjyc.common.model.dto.web.salesman.TypeSalesmanDto">
        SELECT
            ba.id AS adminId,
            ba.NAME AS name,
            ba.phone AS phone,
            ba.biz_desc AS storeName
        FROM
          b_admin ba
        <where>
            <if test="name != null and name.trim() != ''">
                ba.name like CONCAT('%',#{name},'%')
            </if>
            <if test="phone != null and phone.trim() != ''">
                and  ba.phone = #{phone}
            </if>
            <if test="storeName != null and storeName.trim() != ''">
                and  ba.biz_desc like CONCAT('%',#{storeName},'%')
            </if>
            and ba.state = 2
            and ba.biz_desc LIKE CONCAT( '%', ( SELECT ss.NAME FROM s_store ss WHERE ss.id = #{pickBackStoreId} ), '%' )
        </where>
    </select>
    <select id="findByPhone" resultType="com.cjyc.common.model.entity.Admin">
        select
        <include refid="Base_Column_List"/>
        from b_admin
        where phone = #{phone}
    </select>
    <select id="findList" resultType="com.cjyc.common.model.vo.web.admin.AdminPageVo">
        select
        <include refid="Base_Column_List"/>
        from b_admin
        <where>
            state = 2
            <if test="name != null and name.trim() != ''">
                admin.name like CONCAT('%',#{name},'%')
            </if>
            <if test="phone != null and phone.trim() != ''">
                and  admin.phone = #{phone}
            </if>
            <if test="storeId != null">
                and  admin.store_id = #{storeId}
            </if>
            and user_id in
            <foreach collection="userIds" index="index" item ="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </select>
    <select id="findVoByPhone" resultType="com.cjyc.common.model.vo.web.admin.AdminVo">
        select
        <include refid="Base_Column_List"/>
        from b_admin
        where phone = #{phone}

    </select>
    <select id="findNext" resultType="com.cjyc.common.model.entity.Admin">

    </select>

    <select id="getPageList" resultType="com.cjyc.common.model.vo.web.admin.AdminPageVo">
        SELECT ba.id, ba.user_id, ba.state, ba.`name`, ba.phone as account, GROUP_CONCAT(sr.role_name) roles, ba.biz_desc,
        ba.create_time, ba.create_user
        FROM b_admin ba
            LEFT JOIN (SELECT * FROM s_user_role_dept WHERE dept_type = 1) sur ON sur.user_id = ba.id
            LEFT JOIN s_role sr ON sr.id = sur.role_id
        <where>
            <if test="param.name != null and param.name !=''">
                and ba.`name` LIKE CONCAT('%',#{param.name},'%')
            </if>
            <if test="param.phone != null and param.phone != ''">
                AND ba.phone LIKE CONCAT('%',#{param.phone},'%')
            </if>
            <if test="param.storeId != null and param.storeId != ''">
                AND sur.dept_id = #{param.storeId}
            </if>
            <if test="param.roleId != null and param.roleId > 0">
                AND sur.role_id = #{param.roleId}
            </if>
        </where>
        GROUP BY ba.phone
        ORDER BY create_time DESC
    </select>

    <select id="getMineSalesmanList" resultType="com.cjyc.common.model.vo.web.mineStore.MySalesmanVo">
        SELECT
        ba.id, ba.user_id, ba.state, ba.`name`, ba.phone as account,
        ba.phone, GROUP_CONCAT(sr.role_name) roles,
        ba.biz_desc, ba.create_time, ba.create_user,
        (CASE WHEN ( SELECT contact_admin_id FROM s_store WHERE contact_admin_id = ba.id ) IS NULL
        THEN FALSE ELSE TRUE END ) isContactPerson
        FROM
        (SELECT * FROM s_user_role_dept WHERE dept_type = 1 AND user_type = 1 AND dept_id = #{param.storeId}) sur
        LEFT JOIN b_admin ba ON ba.id = sur.user_id
        LEFT JOIN s_role sr ON sr.id = sur.role_id
        <where>
            ba.state = 2
            <if test="param.name != null and param.name != ''">
                AND ba.`name` LIKE CONCAT('%', #{param.name}, '%')
            </if>
            <if test="param.phone != null and param.phone != ''">
                AND ba.phone LIKE CONCAT('%', #{param.phone}, '%')
            </if>
        </where>
        GROUP BY ba.phone
    </select>
    <select id="findListByStoreId" resultType="com.cjyc.common.model.entity.Admin">
        select m.*
        from b_admin m
        join s_user_role_dept urd on urd.user_id = m.id
        join s_role r on r.id = urd.role_id
        WHERE
        urd.user_type = 1
        and urd.dept_type = 1
        and urd.dept_id = #{storeId}
        and r.role_range = 1
        and r.role_level = 5
    </select>

    <select id="deliverySalesmanNew" resultMap="salesmanListByStoreIdMap">
        SELECT
            ba.id, ba.`name`, ba.phone
        FROM
        (SELECT * FROM s_user_role_dept WHERE dept_type = 1 AND user_type = 1 AND dept_id = #{pickBackStoreId}) sur
        LEFT JOIN b_admin ba ON ba.id = sur.user_id
        LEFT JOIN s_role sr ON sr.id = sur.role_id
        <where>
            <if test="name != null and name.trim() != ''">
                  ba.name like CONCAT('%',#{name},'%')
            </if>
            <if test="phone != null and phone.trim() != ''">
                and  ba.phone = #{phone}
            </if>
            <if test="storeName != null and storeName.trim() != ''">
                and  ba.biz_desc like CONCAT('%',#{storeName},'%')
            </if>
            and ba.state = 2
        </where>
        GROUP BY ba.phone
    </select>

    <select id="getStoreNamesByAdminId" resultType="string">
        SELECT GROUP_CONCAT(st.`name`) FROM s_store st LEFT JOIN s_user_role_dept urd ON urd.dept_id = st.id WHERE urd.user_id = #{userId} GROUP BY urd.user_id
    </select>
</mapper>
