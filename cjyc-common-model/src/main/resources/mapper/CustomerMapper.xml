<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.ICustomerDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.Customer">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="customer_no" property="customerNo" />
        <result column="name" property="name" />
        <result column="alias" property="alias" />
        <result column="contact_man" property="contactMan" />
        <result column="contact_phone" property="contactPhone" />
        <result column="contact_address" property="contactAddress" />
        <result column="customer_nature" property="customerNature" />
        <result column="social_credit_code" property="socialCreditCode" />
        <result column="initial" property="initial" />
        <result column="photo_img" property="photoImg" />
        <result column="sex" property="sex" />
        <result column="id_card" property="idCard" />
        <result column="id_card_front_img" property="idCardFrontImg" />
        <result column="id_card_back_img" property="idCardBackImg" />
        <result column="type" property="type" />
        <result column="source" property="source" />
        <result column="company_id" property="companyId" />
        <result column="state" property="state" />
        <result column="pay_mode" property="payMode" />
        <result column="register_time" property="registerTime" />
        <result column="create_user_id" property="createUserId" />
        <result column="create_time" property="createTime" />
        <result column="check_time" property="checkTime" />
        <result column="check_user_id" property="checkUserId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, customer_no, name, alias, contact_man, contact_phone, contact_address, customer_nature, social_credit_code, initial, photo_img, sex, id_card, id_card_front_img, id_card_back_img, type, source, company_id, state, pay_mode, register_time, create_user_id, create_time, check_time, check_user_id
    </sql>

    <!-- 根据用户userId查询用户 -->
    <select id="getCustomerByUserId" resultType="com.cjyc.common.model.entity.Customer"
                                    parameterType="java.lang.Long">
        select
          <include refid="Base_Column_List"/>
        from c_customer
    </select>

    <!-- 通过手机号，姓名，身份证号查询 -->
    <select id="findCustomer" resultType="com.cjyc.common.model.vo.web.customer.CustomerVo"
                parameterType="com.cjyc.common.model.dto.web.customer.SelectCustomerDto">
        SELECT
            cc.id AS customerId,
            cc.user_id AS userId,
            cc.customer_no AS customerNo,
            cc.contact_phone AS contactPhone,
            cc.contact_man AS contactMan,
            cc.id_card AS idCard,
            cc.source AS source,
            cc.state AS state,
            cc.id_card_front_img AS idCardFrontImg,
            cc.id_card_back_img AS idCardBackImg,
            cc.create_time AS createTime,
            ba.NAME AS createUserName
        FROM
          c_customer cc
        LEFT JOIN b_admin ba ON ba.id = cc.create_user_id
        <where>
            <if test="contactPhone != null and contactPhone.trim() != ''">
                cc.contact_phone like concat('%',#{contactPhone},'%')
            </if>
            <if test="contactMan != null  and contactMan.trim() != ''">
                and  cc.contact_man like concat('%',#{contactMan},'%')
            </if>
            <if test="idCard != null and idCard.trim() != ''">
                and  cc.id_card like concat('%',#{idCard},'%')
            </if>
            <if test="flag != null and flag == 0">
                and  cc.state = 2
            </if>
            <if test="state != null">
                and  cc.state = #{state}
            </if>
                and cc.type = 1 order by cc.create_time desc,cc.check_time desc
        </where>
    </select>

    <!-- 查询所有大客户用户-->
    <select id="getAllKeyCustomter" resultType="com.cjyc.common.model.vo.web.customer.ListKeyCustomerVo">
        SELECT
            id AS id,
            user_id as userId,
            NAME AS NAME,
            alias AS alias,
            contact_man AS contactMan,
            contact_phone AS contactPhone,
            customer_nature AS customerNature,
            register_time AS registerTime
        FROM
            c_customer
        WHERE
            type = 2
    </select>

    <!-- 通过客户编号，客户全称，客户简称等条件查询 -->
    <select id="findKeyCustomter" resultType="com.cjyc.common.model.vo.web.customer.ListKeyCustomerVo"
            parameterType="com.cjyc.common.model.dto.web.customer.SelectKeyCustomerDto">
        SELECT
            cc.id AS customerId,
            cc.user_id AS userId,
            cc.customer_no AS customerNo,
            cc.NAME AS NAME,
            cc.state AS state,
            cc.source AS source,
            cc.contact_man AS contactMan,
            cc.contact_phone AS contactPhone,
            cc.customer_nature AS customerNature,
            cc.create_time AS createTime,
            ba.NAME AS createUserName
        FROM
          c_customer cc
        LEFT JOIN b_admin ba ON ba.id = cc.create_user_id
        <where>
            <if test="customerNo != null and customerNo.trim() != ''">
                cc.customer_no like concat('%',#{customerNo},'%')
            </if>
            <if test="name != null and name.trim() != ''">
                and  cc.name like concat('%',#{name},'%')
            </if>
            <if test="state != null">
                and  cc.state = #{state}
            </if>
            <if test="contactMan != null  and contactMan.trim() != ''">
                and cc.contact_man like concat('%',#{contactMan},'%')
            </if>
            <if test="contactPhone != null  and contactPhone.trim() != ''">
                and  cc.contact_phone like concat('%',#{contactPhone},'%')
            </if>
            <if test="createUserName != null and createUserName.trim() != ''">
                and  ba.name like concat('%',#{createUserName},'%')
            </if>
            <if test="customerNature != null ">
                and cc.customer_nature = #{customerNature}
            </if>
            <if test="flag != null and flag == 0">
                and  cc.state = 2
            </if>
                and cc.type = 2 order by cc.create_time desc,cc.check_time desc
        </where>
    </select>

    <!-- 根据条件查询合伙人 -->
    <select id="getPartnerByTerm" resultType="com.cjyc.common.model.vo.web.customer.CustomerPartnerVo"
            parameterType="com.cjyc.common.model.dto.web.customer.CustomerPartnerDto">
        SELECT
            cc.id AS customerId,
            cc.user_id AS userId,
            cc.customer_no AS customerNo,
            cc.NAME AS NAME,
            cc.state as state,
            cc.contact_man AS contactMan,
            cc.contact_phone AS contactPhone,
            ccp.is_taxpayer AS isTaxpayer,
            ccp.is_invoice AS isInvoice,
            ccp.settle_type AS settleType,
            ccp.settle_period AS settlePeriod,
            sbcb.description AS description,
            cc.social_credit_code AS socialCreditCode,
            cc.source AS source,
            cc.create_time as registerTime,
            ba.NAME AS createUserName
        FROM
            c_customer cc
        LEFT JOIN c_customer_partner ccp ON ccp.customer_id = cc.id
        LEFT JOIN s_bank_card_bind sbcb ON sbcb.user_id = cc.id
        LEFT JOIN b_admin ba ON ba.id = cc.create_user_id
        <where>
            <if test="customerNo != null and customerNo.trim() != ''">
                cc.customer_no like concat('%',#{customerNo},'%')
            </if>
            <if test="name != null and name.trim() != ''">
               and cc.name like concat('%',#{name},'%')
            </if>
            <if test="contactMan != null  and contactMan.trim() != ''">
                and  cc.contact_man like concat('%',#{contactMan},'%')
            </if>
            <if test="contactPhone != null  and contactPhone.trim() != ''">
                and cc.contact_phone like concat('%',#{contactPhone},'%')
            </if>
            <if test="socialCreditCode != null  and socialCreditCode.trim() != ''">
                and  cc.social_credit_code like concat('%',#{socialCreditCode},'%')
            </if>
            <if test="source != null">
                and  cc.source = #{source}
            </if>
            <if test="settleType != null">
                and  ccp.settle_type = #{settleType}
            </if>
            <if test="isInvoice != null">
                and  ccp.is_invoice = #{isInvoice}
            </if>
            <if test="flag != null and flag == 0">
                and  cc.state = 2
            </if>
            and (cc.type = 3 or (cc.type = 1 and cc.state = 1)) order by cc.create_time desc,cc.check_time desc
        </where>
    </select>


    <select id="showPartner" resultType="com.cjyc.common.model.vo.web.customer.ShowPartnerVo"
                parameterType="java.lang.Long">
          SELECT
            cc.id AS customerId,
            cc.NAME AS NAME,
            cc.contact_man AS contactMan,
            cc.contact_phone AS contactPhone,
            cc.social_credit_code AS socialCreditCode,
            cc.contact_address AS contactAddress,
            ccp.is_taxpayer AS isTaxpayer,
            ccp.is_invoice AS isInvoice,
            ccp.settle_type AS settleType,
            ccp.settle_period AS settlePeriod,
            sbcb.card_type AS cardType,
            sbcb.bank_name AS bankName,
            sbcb.card_no AS cardNo,
            sbcb.card_name AS cardName,
            sbcb.description AS description,
            sbcb.bank_licence AS bankLicence,
            sbcb.id_card AS idCard,
            sbcb.bank_code AS bankCode,
            ccp.business_license_front_img AS businessLicenseFrontImg,
            ccp.business_license_back_img AS businessLicenseBackImg,
            ccp.legal_idCard_front_img AS legalIdcardFrontImg,
            ccp.legal_idCard_back_img AS legalIdcardBackImg,
            ccp.linkman_idCard_front_img AS linkmanIdcardFrontImg,
            ccp.linkman_idCard_back_img AS linkmanIdcardBackImg,
            ccp.authorization_front_img AS authorizationFrontImg,
            ccp.authorization_back_img AS authorizationBackImg
        FROM
              c_customer cc
            LEFT JOIN c_customer_partner ccp ON ccp.customer_id = cc.id
            LEFT JOIN s_bank_card_bind sbcb ON sbcb.user_id = cc.id
            where cc.id = #{customerId}
    </select>

    <select id="findByPhone" resultType="com.cjyc.common.model.entity.Customer" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from c_customer
        where contact_phone = #{phone}
    </select>
    <select id="findFuzzyList" resultType="com.cjyc.common.model.vo.web.customer.CustomerFuzzyListVo">
        select
            user_id as useId,
            `name`,
            alias,
            contact_phone as contactPhone,
            contact_man as contactMan,
            contact_address as contactAddress
        from c_customer
        <where>
            <if test="paramsDto.type != null">
               and type = #{paramsDto.type}
            </if>
            <if test="paramsDto.info != null and paramsDto.info !=''">
               and concat(name,alias,contact_phone,contact_man) like concat('%',#{paramsDto.info},'%')
            </if>
        </where>
    </select>

    <!-- 通过手机号/用户名模糊查询客户 -->
    <select id="getAllCustomerByKey" resultType="java.util.Map"
                                    parameterType="java.lang.String">
        select
            user_id as userId,
            name as name,
            contact_man as contactMan,
            contact_phone AS contactPhone
        from c_customer
        <where>
            <if test="keyword != null and keyword.trim() !=''">
                and (name like concat('%',#{keyword},'%') or
                     contact_phone like concat('%',#{keyword},'%') or
                     contact_man like concat('%',#{keyword},'%'))
            </if>
            and state = 2
        </where>
    </select>

    <!-- 根据大客户UserId查询有效期合同 -->
    <select id="getContractByCustomerId" resultType="java.util.Map">
          SELECT
                contract.id as id,
                contract.contract_no AS contractNo,
                contract.settle_period AS settlePeriod
            FROM
                c_customer_contract contract
                LEFT JOIN c_customer customer ON customer.id = contract.customer_id
            WHERE
                customer.id = #{customerId}  and contract.contract_life > #{now} and contract.project_status = 1
    </select>

    <select id="findByUserId" resultType="com.cjyc.common.model.entity.Customer">
        select
        <include refid="Base_Column_List"/>
        from c_customer
        where user_id = #{userId}
    </select>
    <select id="findAllNo" resultType="java.lang.String">
        select customer_no from c_customer
    </select>

    <select id="findCustomerPhoneName" resultType="com.cjyc.common.model.vo.salesman.customer.SalesCustomerVo"
            parameterType="com.cjyc.common.model.dto.salesman.customer.SalesCustomerDto">
        SELECT
            cc.id AS customerId,
            cc.contact_man AS contactMan,
            cc.contact_phone AS contactPhone
        FROM
	      c_customer cc
        <where>
            <if test="phone != null and phone.trim() !=''">
                cc.contact_phone like concat('%',#{phone},'%')
            </if>
            <if test="name != null and name.trim() !=''">
                and cc.contact_man like concat('%',#{name},'%')
            </if>
        </where>
    </select>

    <select id="findSalesKeyCustomter" resultType="com.cjyc.common.model.vo.salesman.customer.SalesCustomerVo"
            parameterType="com.cjyc.common.model.dto.salesman.customer.SalesCustomerDto">
        SELECT
            cc.id AS customerId,
            cc.NAME AS NAME,
            cc.contact_man AS contactMan,
            cc.contact_phone AS contactPhone
        FROM
          c_customer cc
        LEFT JOIN ( SELECT * FROM s_user_role_dept WHERE dept_type = 3 AND user_type = 3 ) surd ON surd.user_id = cc.id
        <where>
            <if test="phone != null and phone.trim() !=''">
                cc.contact_phone like concat('%',#{phone},'%')
            </if>
            <if test="name != null and name.trim() !=''">
                or cc.contact_man like concat('%',#{name},'%')
            </if>
            and cc.type = 2 and surd.state = 2
        </where>
    </select>

    <!--************************************韵车集成改版 st***********************************-->

    <!--根据用户名/手机号模糊匹配用户信息-->
    <select id="findCustomerByKey" resultType="java.util.Map"
            parameterType="java.lang.String">
       select
            cc.user_id as userId,
            cc.name as name,
            cc.contact_man as contactMan,
            cc.contact_phone AS contactPhone
        from c_customer cc
		left join (SELECT * FROM s_user_role_dept WHERE dept_type = 3 AND user_type = 3) surd ON surd.user_id = cc.id
        <where>
            <if test="keyword != null and keyword.trim() !=''">
               (cc.name like concat('%',#{keyword},'%') or
                cc.contact_phone like concat('%',#{keyword},'%') or
                cc.contact_man like concat('%',#{keyword},'%'))
            </if>
            and surd.state = 2
        </where>
    </select>

    <!-- 通过手机号，姓名，身份证号查询 -->
    <select id="findClientCustomer" resultType="com.cjyc.common.model.vo.web.customer.CustomerVo"
            parameterType="com.cjyc.common.model.dto.web.customer.SelectCustomerDto">
        SELECT
            cc.id AS customerId,
            cc.user_id AS userId,
            cc.customer_no AS customerNo,
            cc.contact_phone AS contactPhone,
            cc.contact_man AS contactMan,
            cc.id_card AS idCard,
            cc.source AS source,
            surd.state AS state,
            cc.id_card_front_img AS idCardFrontImg,
            cc.id_card_back_img AS idCardBackImg,
            cc.create_time AS createTime,
            ba.NAME AS createUserName
        FROM
          c_customer cc
        LEFT JOIN b_admin ba ON ba.id = cc.create_user_id
        LEFT JOIN (SELECT * FROM s_user_role_dept WHERE dept_type = 3 AND user_type = 3) surd ON surd.user_id = cc.id
        <where>
            <if test="contactPhone != null and contactPhone.trim() != ''">
                cc.contact_phone like concat('%',#{contactPhone},'%')
            </if>
            <if test="contactMan != null  and contactMan.trim() != ''">
                and  cc.contact_man like concat('%',#{contactMan},'%')
            </if>
            <if test="idCard != null and idCard.trim() != ''">
                and  cc.id_card like concat('%',#{idCard},'%')
            </if>
            <if test="flag != null and flag == 0">
                and  surd.state = 2
            </if>
            <if test="state != null">
                and  surd.state = #{state}
            </if>
            and cc.type = 1 order by cc.create_time desc,cc.check_time desc
        </where>
    </select>

    <!-- 通过客户编号，客户全称，客户简称等条件查询 -->
    <select id="findKeyAccountCustomter" resultType="com.cjyc.common.model.vo.web.customer.ListKeyCustomerVo"
            parameterType="com.cjyc.common.model.dto.web.customer.SelectKeyCustomerDto">
        SELECT
            cc.id AS customerId,
            cc.user_id AS userId,
            cc.customer_no AS customerNo,
            cc.NAME AS NAME,
            surd.state AS state,
            cc.source AS source,
            cc.contact_man AS contactMan,
            cc.contact_phone AS contactPhone,
            cc.customer_nature AS customerNature,
            cc.create_time AS createTime,
            ba.NAME AS createUserName
        FROM
          c_customer cc
        LEFT JOIN b_admin ba ON ba.id = cc.create_user_id
        LEFT JOIN (SELECT * FROM s_user_role_dept WHERE dept_type = 3 AND user_type = 3) surd ON surd.user_id = cc.id
        <where>
            <if test="customerNo != null and customerNo.trim() != ''">
                cc.customer_no like concat('%',#{customerNo},'%')
            </if>
            <if test="name != null and name.trim() != ''">
                and  cc.name like concat('%',#{name},'%')
            </if>
            <if test="state != null">
                and  surd.state = #{state}
            </if>
            <if test="contactMan != null  and contactMan.trim() != ''">
                and cc.contact_man like concat('%',#{contactMan},'%')
            </if>
            <if test="contactPhone != null  and contactPhone.trim() != ''">
                and  cc.contact_phone like concat('%',#{contactPhone},'%')
            </if>
            <if test="createUserName != null and createUserName.trim() != ''">
                and  ba.name like concat('%',#{createUserName},'%')
            </if>
            <if test="customerNature != null ">
                and cc.customer_nature = #{customerNature}
            </if>
            <if test="flag != null and flag == 0">
                and  surd.state = 2
            </if>
            and cc.type = 2 order by cc.create_time desc,cc.check_time desc
        </where>
    </select>

    <!-- 根据条件查询合伙人 -->
    <select id="findCoPartner" resultType="com.cjyc.common.model.vo.web.customer.CustomerPartnerVo"
            parameterType="com.cjyc.common.model.dto.web.customer.CustomerPartnerDto">
        SELECT
            cc.id AS customerId,
            cc.user_id AS userId,
            cc.customer_no AS customerNo,
            cc.NAME AS NAME,
            surd.state AS state,
            cc.contact_man AS contactMan,
            cc.contact_phone AS contactPhone,
            ccp.is_taxpayer AS isTaxpayer,
            ccp.is_invoice AS isInvoice,
            ccp.settle_type AS settleType,
            ccp.settle_period AS settlePeriod,
            sbcb.description AS description,
            cc.social_credit_code AS socialCreditCode,
            cc.source AS source,
            cc.create_time AS registerTime,
            ba.NAME AS createUserName
        FROM
          c_customer cc
        LEFT JOIN c_customer_partner ccp ON ccp.customer_id = cc.id
        LEFT JOIN s_bank_card_bind sbcb ON sbcb.user_id = cc.id
        LEFT JOIN b_admin ba ON ba.id = cc.create_user_id
        LEFT JOIN (SELECT * FROM s_user_role_dept WHERE dept_type = 3 AND user_type = 3) surd ON surd.user_id = cc.id
        <where>
            <if test="customerNo != null and customerNo.trim() != ''">
                cc.customer_no like concat('%',#{customerNo},'%')
            </if>
            <if test="name != null and name.trim() != ''">
                and cc.name like concat('%',#{name},'%')
            </if>
            <if test="contactMan != null  and contactMan.trim() != ''">
                and  cc.contact_man like concat('%',#{contactMan},'%')
            </if>
            <if test="contactPhone != null  and contactPhone.trim() != ''">
                and cc.contact_phone like concat('%',#{contactPhone},'%')
            </if>
            <if test="socialCreditCode != null  and socialCreditCode.trim() != ''">
                and  cc.social_credit_code like concat('%',#{socialCreditCode},'%')
            </if>
            <if test="source != null">
                and  cc.source = #{source}
            </if>
            <if test="settleType != null">
                and  ccp.settle_type = #{settleType}
            </if>
            <if test="isInvoice != null">
                and  ccp.is_invoice = #{isInvoice}
            </if>
            <if test="flag != null and flag == 0">
                and  surd.state = 2
            </if>
            and (cc.type = 3 or (cc.type = 1 and surd.state = 1)) order by cc.create_time desc,cc.check_time desc
        </where>
    </select>
    <select id="findActive" resultType="com.cjyc.common.model.entity.Customer">
        SELECT
         cc.*
        FROM
         c_customer cc
        LEFT JOIN  s_user_role_dept  surd ON surd.user_id = cc.id
        WHERE cc.id = #{id}
        and surd.state = 2
        group by cc.id
    </select>

</mapper>
