<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.IOrderCarDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.OrderCar">
        <id column="id" property="id" />
        <result column="order_id" property="orderId" />
        <result column="order_no" property="orderNo" />
        <result column="no" property="no" />
        <result column="brand" property="brand" />
        <result column="model" property="model" />
        <result column="plate_no" property="plateNo" />
        <result column="vin" property="vin" />
        <result column="is_move" property="isMove" />
        <result column="is_new" property="isNew" />
        <result column="valuation" property="valuation" />
        <result column="now_store_id" property="nowStoreId" />
        <result column="now_area_code" property="nowAreaCode" />
        <result column="state" property="state" />
        <result column="pick_type" property="pickType" />
        <result column="pick_state" property="pickState" />
        <result column="trunk_state" property="trunkState" />
        <result column="back_state" property="backState" />
        <result column="back_type" property="backType" />
        <result column="description" property="description" />
        <result column="pick_fee" property="pickFee" />
        <result column="trunk_fee" property="trunkFee" />
        <result column="back_fee" property="backFee" />
        <result column="add_insurance_fee" property="addInsuranceFee" />
        <result column="add_insurance_amount" property="addInsuranceAmount" />
        <result column="coupon_offset_fee" property="couponOffsetFee" />
        <result column="agency_fee" property="agencyFee" />
        <result column="total_fee" property="totalFee" />
        <result column="wl_pay_state" property="wlPayState" />
        <result column="wl_pay_time" property="wlPayTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, order_id, order_no, no, brand, model, plate_no, vin, is_move, is_new, valuation, now_store_id, now_area_code, state, pick_type, pick_state, trunk_state, back_state, back_type, description, pick_fee, trunk_fee, back_fee, add_insurance_fee, add_insurance_amount, coupon_offset_fee, agency_fee, total_fee, wl_pay_state, wl_pay_time
    </sql>

    <insert id="saveBatch">
        insert into w_order_car
        (order_id, order_no, no, brand, model, plate_no, vin, is_move, is_new, valuation, now_store_id,
        now_area_code, state, description, pick_fee, trunk_fee, back_fee, add_insurance_fee,
        add_insurance_amount, coupon_offset_fee, agency_fee, total_fee)
        values
        <foreach collection="orderCarlist" index="index" item="item" separator=",">
            (
            #{item.orderId},
            #{item.orderNo},
            #{item.no},
            #{item.brand},
            #{item.model},
            #{item.plateNo},
            #{item.vin},
            #{item.isMove},
            #{item.isNew},
            #{item.valuation},
            #{item.nowStoreId},
            #{item.nowAreaCode},
            #{item.state},
            #{item.description},
            #{item.pickFee},
            #{item.trunkFee},
            #{item.backFee},
            #{item.addInsuranceFee},
            #{item.addInsuranceAmount},
            #{item.couponOffsetFee},
            #{item.agencyFee},
            #{item.totalFee}
            )
        </foreach>

    </insert>
    <!--根据ID更新状态-->
    <update id="updateStateById">
        update w_order_car
        set state = #{state}
        where id = #{orderCarId}
    </update>
    <update id="updatePickStateById">
        update w_order_car
        set pick_state = #{state}
        where id = #{orderCarId}
    </update>
    <update id="updateBackStateById">
        update w_order_car
        set back_state = #{state}
        where id = #{orderCarId}
    </update>
    <update id="updateTrunkStateById">
        update w_order_car
        set trunk_state = #{state}
        where id = #{id}
    </update>
    <update id="updateStateBatchByIds">
        update w_order_car
        set state = #{state}
        <where>
            and id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </update>
    <update id="updateTrunkStateBatchByIds">
        update w_order_car
        set trunk_state = #{state}
        <where>
            trunk_state != 3
            and id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <update id="updateStateForLoad">
        update w_order_car
        set state = #{orderCarState}
        <where>
            and state &lt; #{orderCarState}
            <if test="orderCarIdSet != null">
                and id in
                <foreach collection="orderCarIdSet" index="index" item="item" open="(" separator="," close=")">
                    #{item}

                </foreach>
            </if>
        </where>
    </update>
    <update id="updateForReceipt">
        update w_order_car
        set state = 100,
        wl_pay_state = 1
        where state &lt; 100
        and id = #{id}
    </update>
    <update id="updateForReceiptBatch">
        update w_order_car
        set state = 100
        where state &lt; 100
        and id in
        <foreach collection="collection" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="updateForDispatchTrunk">
        update w_order_car
        set
        <if test="pickState != null">
            pick_state = #{pickState},
        </if>
        trunk_state = #{trunkState}
        where id = #{id}
    </update>
    <update id="updateLocationForUnload">
        update w_order_car
        set now_area_code = #{nowAreaCode},
        now_store_id = #{nowStoreId}
        where id = #{orderCarId}
    </update>

    <delete id="deleteBatchByOrderId">
        delete from w_order_car
        where order_id = #{orderId}
    </delete>

    <!-- 通过订单编号查询车辆信息 -->
    <select id="getOrderCarByNo" resultType="com.cjyc.common.model.vo.customer.order.OrderCarCenterVo" parameterType="java.lang.String">
         select brand as brand ,model as model ,plate_no as plateNo,vin as vin from w_order_car where order_no = #{orderNo};
    </select>
    <!--按地级城市统计待调度车辆数量-->
    <select id="countListWaitDispatchCar" resultType="java.util.Map">
        select count(0) as car_num, IFNULL(o.start_city_code,'-1') as cityCode, IFNULL(o.start_city, '无城市') as cityName from w_order o
        join w_order_car c on o.id = c.order_id
        where o.state BETWEEN 25 and 101
        group by o.start_city_code
    </select>

    <select id="countTotalWaitDispatchCar" resultType="java.util.Map">
        select sum(carNum) as totalCount from (
            select count(0) as carNum
            from w_order o
            join w_order_car c on o.id = c.order_id
            where o.state BETWEEN 25 and 101
            group by o.start_city_code
        ) as t
    </select>
    <!--按线路统计待调度车辆（统计列表）-->
    <select id="findLineWaitDispatchCarCountList" resultType="java.util.Map">
        select
            count(0) as carNum,
            o.start_city_code as startCityCode,
            o.start_city as startCity,
            o.end_city_code as endCityCode,
            o.end_city as endCity,
            CONCAT(o.start_city,'-',o.end_city) as line
        from w_order o
        join w_order_car c on o.id = c.order_id
        where o.state BETWEEN 25 and 101
        and o.start_city_code = #{paramsDto.cityCode}
        group by o.start_city_code, o.end_city_code

    </select>
    <select id="findLineWaitDispatchTrunkCarCountList" resultType="java.util.Map">
        select
        count(0) AS carNum,
        countShell.dispatchStartCityCode AS startCityCode,
        countShell.dispatchStartCity AS startCity,
        countShell.dispatchEndCityCode AS endCityCode,
        countShell.dispatchEndCity AS endCity,
        CONCAT(countShell.dispatchStartCity, '-', countShell.dispatchEndCity) AS line
        from (
          <include refid="trunk_wait_dispatch_car_list"/>
        ) as countShell
        where countShell.dispatchStartCityCode = #{paramsDto.cityCode}
        GROUP BY countShell.dispatchStartCityCode, countShell.dispatchEndCityCode
    </select>
    <select id="countTotalWaitDispatchCarByStartCity" resultType="java.util.Map">
        select sum(carNum) as totalCount from (
            select count(0) as carNum
            from w_order o
            join w_order_car c on o.id = c.order_id
            where o.state BETWEEN 25 and 101
            and o.start_city_code = #{paramsDto.cityCode}
            group by o.start_city_code, o.end_city_code
        ) as t
    </select>

    <!-- 通过主键查询车辆信息 -->
    <select id="getOrderCarInfoById" resultType="com.cjyc.common.model.vo.customer.order.OrderCarCenterVo" parameterType="java.lang.Long">
         select valuation as valuation,add_insurance_amount as insuredAmount,add_insurance_fee as addInsuranceFee,is_move as isMove, brand as brand ,model as model ,plate_no as plateNo,vin as vin from w_order_car where id = #{orderCarId};
    </select>

    <!-- 通过筛选条件查询车辆信息 -->
    <select id="getOrderCarInfoByTerm" resultType="com.cjyc.common.model.vo.customer.order.OrderCarCenterVo" parameterType="java.lang.String">
         select brand as brand ,model as model ,plate_no as plateNo,vin as vin from w_order_car
           <where>
               <if test="storeId != null and storeId != ''">
                   and  now_store_id = #{storeId}
               </if>
               <if test="brand != null and brand != ''">
                   and  brand = #{brand}
               </if>
               <if test="model != null and model != ''">
                   and  model = #{model}
               </if>
                   and order_no = #{orderNo}
           </where>
    </select>
    <!--查询待调度车辆列表-->
    <!--提：1待调度，2待提车，3待交车，5已完成，21自送待调度，23自送待交车，25自送已交付，100物流上门
        干：1待调度，2待提车，3待交车，5已完成, 100无干线
        送：1待调度，2待提车，3待交车，5已完成，21自提待调度，23自提待交车，25自提已交付，100物流上门-->
    <select id="findWaitDispatchCarList" resultType="com.cjyc.common.model.vo.web.order.OrderCarWaitDispatchVo">
        select
        <include refid="transport_state"/>
        o.customer_id as customerId,
        o.customer_name as customerName,
        o.customer_phone as customerPhone,
        o.customer_type as customerType,
        o.input_store_id as inputStoreId,
        o.input_store_name as inputStoreName,
        o.start_province as startProvince,
        o.start_province_code as startProvinceCode,
        o.start_city as startCity,
        o.start_city_code as startCityCode,
        o.start_area as startArea,
        o.start_area_code as startAreaCode,
        o.start_address as startAddress,
        o.start_lng as startLng,
        o.start_lat as startLat,
        oc.pick_type as pickType,
        oc.back_type as backType,
        o.start_store_id as startStoreId,
        o.start_store_name as startStoreName,
        o.start_belong_store_id as startBelongStoreId,
        o.end_province as endProvince,
        o.end_province_code as endProvinceCode,
        o.end_city as endCity,
        o.end_city_code as endCityCode,
        o.end_area as endArea,
        o.end_area_code as endAreaCode,
        o.end_address as endAddress,
        o.end_lng as endLng,
        o.end_lat as endLat,
        o.end_store_id as endStoreId,
        o.end_store_name as endStoreName,
        o.end_belong_store_id as endBelongStoreId,
        o.expect_start_date as expectStartDate,
        o.expect_end_date as expectEndDate,
        o.car_num as carNum,
        o.line_id as lineId,
        o.pick_contact_name as pickContactName,
        o.pick_contact_phone as pickContactPhone,
        o.back_contact_name as backContactName,
        o.back_contact_phone as backContactPhone,
        o.source as source,
        o.create_time as createTime,
        o.create_user_name as createUserName,
        o.create_user_id as createUserId,
        o.allot_to_user_name as allotToUserName,
        o.allot_to_user_id as allotToUserId,
        o.check_time as checkTime,
        o.check_user_name as checkUserName,
        o.check_user_id as checkUserId,
        concat(o.start_province, o.start_city, o.start_area, o.start_address) as startFullAddress,
        concat(o.end_province, o.end_city, o.end_area, o.end_address) as endFullAddress,
        concat(s1.province, s1.city, s1.area, s1.detail_addr) as startStoreFullAddress,
        concat(s2.province, s2.city, s2.area, s2.detail_addr) as endStoreFullAddress,
        ct1.parent_name as nowCityName,
        ct2.parent_code as regionCode,
        ct2.parent_name as region,
        s1.area_code as startStoreAreaCode,
        s1.detail_addr as startStoreAddress,
        s2.area_code as endStoreAreaCode,
        s2.detail_addr as endStoreAddress,
        m.phone as checkUserPhone,
        oc.*
        from w_order o
        join w_order_car oc on oc.order_id = o.id
        LEFT JOIN s_store s1 on s1.id = o.start_store_id
        LEFT JOIN s_store s2 on s2.id = o.end_store_id
        LEFT JOIN s_store s3 on s3.id = o.input_store_id
        LEFT JOIN s_city ct1 on oc.now_area_code = ct1.code
        LEFT JOIN s_city ct2 on s3.city_code = ct2.code
        left join b_admin m on m.id = o.check_user_id
        left join w_waybill_car wc on wc.order_car_id = oc.id
        <where>
            and o.state between 25 and 100
            <choose>
                <when test="paramsDto.dispatchType == 1">
                    and oc.pick_state &lt;= 1 and oc.state &lt; 5 and oc.pick_type &lt; 4
                </when>
                <when test="paramsDto.dispatchType == 2">
                    and oc.trunk_state &lt;= 2 and oc.state &lt; 45
                </when>
                <when test="paramsDto.dispatchType == 3">
                    and oc.back_state &lt;= 1 and oc.state &lt; 99 and oc.back_type &lt; 4
                </when>
                <when test="paramsDto.dispatchType == 4">
                    and (
                        (oc.back_state >= 5 or oc.pick_type = 4)
                        and (oc.trunk_state >= 5)
                        and (oc.back_state >= 5 or oc.back_type &lt; 4)
                        )
                    or oc.state >= 100
                </when>
            </choose>
            <choose>
                <when test="paramsDto.signState == 1">
                    and oc.state &lt; 100
                </when>
                <when test="paramsDto.signState == 2">
                    and oc.state = 100
                </when>
                <otherwise>
                    and oc.state &lt;= 100
                </otherwise>
            </choose>

            <if test="paramsDto.startProvinceCode != null and paramsDto.startProvinceCode != ''">
                and o.start_province_code = #{paramsDto.startProvinceCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startCityCode != null and paramsDto.startCityCode != ''">
                and o.start_city_code = #{paramsDto.startCityCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startAreaCode != null and paramsDto.startAreaCode != ''">
                and o.start_area_code = #{paramsDto.startAreaCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startStoreId != null">
                and o.start_store_id = #{paramsDto.startStoreId,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.endProvinceCode != null and paramsDto.endProvinceCode != ''">
                and o.end_province_code = #{paramsDto.endProvinceCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endCityCode != null and paramsDto.endCityCode != ''">
                and o.end_city_code = #{paramsDto.endCityCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endAreaCode != null and paramsDto.endAreaCode != ''">
                and o.end_area_code = #{paramsDto.endAreaCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endStoreId != null">
                and o.end_store_id = #{paramsDto.endStoreId,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.orderNo != null and paramsDto.orderNo != ''">
                and oc.order_no like concat('%', #{paramsDto.orderNo,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.carNo != null and paramsDto.carNo != ''">
                and oc.no like concat('%', #{paramsDto.carNo,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.vin != null and paramsDto.vin != ''">
                and oc.vin like concat('%', #{paramsDto.vin,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.beginExpectStartDate != null">
                and o.expect_start_date &gt;= #{paramsDto.beginExpectStartDate,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.endExpectStartDate != null">
                and o.expect_start_date &lt;= #{paramsDto.endExpectStartDate,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.pickType != null">
                and o.pick_type = #{paramsDto.pickType,jdbcType=TINYINT}
            </if>
            <if test="paramsDto.pickContactName != null and paramsDto.pickContactName != ''">
                and o.pick_contact_name like concat('%', #{paramsDto.pickContactName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.pickContactPhone != null and paramsDto.pickContactPhone != ''">
                and o.pick_contact_phone like concat('%', #{paramsDto.pickContactPhone,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.backType != null">
                and o.back_type = #{paramsDto.backType,jdbcType=TINYINT}
            </if>
            <if test="paramsDto.backContactName != null and paramsDto.backContactName != ''">
                and o.back_contact_name like concat('%', #{paramsDto.backContactName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.backContactPhone != null and paramsDto.backContactPhone != ''">
                and o.back_contact_phone like concat('%', #{paramsDto.backContactPhone,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.brand != null and paramsDto.brand != ''">
                and oc.brand like concat('%', #{paramsDto.brand,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.model != null and paramsDto.model != ''">
                and oc.model like concat('%', #{paramsDto.model,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.plateNo != null and paramsDto.plateNo != ''">
                and oc.plate_no like concat('%', #{paramsDto.plateNo,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.startStoreId != null">
                and o.start_store_id = #{paramsDto.startStoreId,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.endStoreId != null">
                and o.end_store_id = #{paramsDto.endStoreId,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.fromToCityList != null and paramsDto.fromToCityList.size > 0">
                and
                <foreach collection="paramsDto.fromToCityList" index="index" item="item" open="(" separator=" or "
                         close=")">
                    (o.start_city_code = #{item.fromCityCode}
                    and o.end_city_code = #{item.toCityCode})
                </foreach>
            </if>
            <if test="paramsDto.bizScope != null and paramsDto.bizScope != ''">
                and (o.input_store_id in(#{paramsDto.bizScope})
                or o.end_belong_store_id in(#{paramsDto.bizScope})
                or oc.now_store_id in(#{paramsDto.bizScope})
                or wc.end_belong_store_id in(#{paramsDto.bizScope}))
            </if>
        </where>
        group by oc.id
        order by oc.id desc

    </select>
    <sql id="trunk_wait_dispatch_car_list">
        select *
        from (
            select
            <include refid="transport_state"/>
            (case when wmax.id is not null then wmax.end_province_code else o.start_province_code end) as dispatchStartProvinceCode,
            (case when wmax.id is not null then wmax.end_province else o.start_province end) as dispatchStartProvince,
            (case when wmax.id is not null then wmax.end_city_code else o.start_city_code end) as dispatchStartCityCode,
            (case when wmax.id is not null then wmax.end_city else o.start_city end) as dispatchStartCity,
            (case when wmax.id is not null then wmax.end_area_code else o.start_area_code end) as dispatchStartAreaCode,
            (case when wmax.id is not null then wmax.end_area else o.start_area end) as dispatchStartArea,
            o.end_province_code as dispatchEndProvinceCode,
            o.end_province as dispatchEndProvince,
            o.end_city_code as dispatchEndCityCode,
            o.end_city as dispatchEndCity,
            o.end_area_code as dispatchEndAreaCode,
            o.end_area as dispatchEndArea,

            o.customer_id as customerId,
            o.customer_name as customerName,
            o.customer_phone as customerPhone,
            o.customer_type as customerType,
            o.input_store_id as inputStoreId,
            o.input_store_name as inputStoreName,
            o.start_province as startProvince,
            o.start_province_code as startProvinceCode,
            o.start_city as startCity,
            o.start_city_code as startCityCode,
            o.start_area as startArea,
            o.start_area_code as startAreaCode,
            o.start_address as startAddress,
            o.start_lng as startLng,
            o.start_lat as startLat,
            o.start_store_id as startStoreId,
            o.start_store_name as startStoreName,
            o.start_belong_store_id as startBelongStoreId,
            o.end_province as endProvince,
            o.end_province_code as endProvinceCode,
            o.end_city as endCity,
            o.end_city_code as endCityCode,
            o.end_area as endArea,
            o.end_area_code as endAreaCode,
            o.end_address as endAddress,
            o.end_lng as endLng,
            o.end_lat as endLat,
            o.end_store_id as endStoreId,
            o.end_store_name as endStoreName,
            o.end_belong_store_id as endBelongStoreId,
            o.expect_start_date as expectStartDate,
            o.expect_end_date as expectEndDate,
            o.car_num as carNum,
            o.line_id as lineId,
            o.pick_contact_name as pickContactName,
            o.pick_contact_phone as pickContactPhone,
            o.back_contact_name as backContactName,
            o.back_contact_phone as backContactPhone,
            o.source as source,
            o.create_time as createTime,
            o.create_user_name as createUserName,
            o.create_user_id as createUserId,
            o.allot_to_user_name as allotToUserName,
            o.allot_to_user_id as allotToUserId,
            o.check_time as checkTime,
            o.check_user_name as checkUserName,
            o.check_user_id as checkUserId,
            oc.*
            from w_order o
            join w_order_car oc on oc.order_id = o.id
            left join (
                select
                wc1.id,
                wc1.end_province_code,
                wc1.end_province,
                wc1.end_city_code,
                wc1.end_city,
                wc1.end_area_code,
                wc1.end_area,
                wc1.order_car_id
                from w_waybill_car wc1
                where id in (
                    select max(wc.id)
                    from w_waybill w
                    join w_waybill_car wc on w.id = wc.waybill_id
                    where w.state &lt;= 100
                    and wc.state &lt;= 100
                    group by wc.order_car_id
                )
            ) as wmax on wmax.order_car_id = oc.id
            where o.state between 25 and 100
            and oc.trunk_state &lt; 5
        ) as shell
    </sql>
    <select id="findWaitDispatchTrunkCarList" resultType="com.cjyc.common.model.vo.web.order.OrderCarWaitDispatchVo">
        <include refid="trunk_wait_dispatch_car_list"/>
        <where>
            <if test="paramsDto.startProvinceCode != null and paramsDto.startProvinceCode != ''">
                and shell.dispatchStartProvinceCode = #{paramsDto.startProvinceCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startCityCode != null and paramsDto.startCityCode != ''">
                and shell.dispatchStartCityCode = #{paramsDto.startCityCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startAreaCode != null and paramsDto.startAreaCode != ''">
                and shell.dispatchStartAreaCode = #{paramsDto.startAreaCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endProvinceCode != null and paramsDto.endProvinceCode != ''">
                and shell.dispatchEndProvinceCode = #{paramsDto.endProvinceCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endCityCode != null and paramsDto.endCityCode != ''">
                and shell.dispatchEndCityCode = #{paramsDto.endCityCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endAreaCode != null and paramsDto.endAreaCode != ''">
                and shell.dispatchEndAreaCode = #{paramsDto.endAreaCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.orderNo != null and paramsDto.orderNo != ''">
                and shell.order_no like concat('%' #{paramsDto.orderNo,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.carNo != null and paramsDto.carNo != ''">
                and shell.no like concat('%', #{paramsDto.carNo,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paramsDto.vin != null and paramsDto.vin != ''">
                and shell.vin like concat('%', #{paramsDto.vin,jdbcType=VARCHAR}, '%')
            </if>
        </where>

    </select>
    <select id="findListByOrderId" resultType="com.cjyc.common.model.entity.OrderCar">
        select
        <include refid="Base_Column_List"/>
        from w_order_car
        where order_id = #{orderId}
    </select>
    <select id="findChangePriceDtoByOrderId" resultType="com.cjyc.common.model.dto.web.order.ChangePriceOrderCarDto">
        select
            id,
            no,
            vin,
            pick_fee as pickFee,
            trunk_fee as trunkFee,
            back_fee as backFee,
            add_insurance_fee as addInsuranceFee,
            coupon_offset_fee as couponOffsetFee,
            agency_fee as agencyFee
        FROM w_order_car
        where order_id = #{orderId}

    </select>
    <select id="findListSelective" resultType="com.cjyc.common.model.vo.web.order.ListOrderCarVo">
        <!--提：1待调度，2待提车，3待交车，5已完成，21自送待调度，23自送待交车，25自送已交付，100物流上门
        干：1待调度，2待提车，3待交车，5已完成, 100无干线
        送：1待调度，2待提车，3待交车，5已完成，21自提待调度，23自提待交车，25自提已交付，100物流上门*/-->
        select
        oc.*,
        (case
        when o.state = 0 then '预订单'
        when o.state &gt; 0 and o.state &lt; 15 then '待确认'
        when o.state = 15 then '待付款'
        when o.state = 25 then '待调度'
        when o.state = 55 then '运输中'
        when o.state = 100 then '已交付'
        when o.state = 113 then '已取消'
        when o.state = 114 then '已作废'
        end
        ) as outterState,

        <include refid="transport_state"/>
        o.source as source,
        o.customer_name as customerName,
        o.customer_phone as customerPhone,
        o.start_city as startCity,
        o.end_city as endCity,
        o.pick_contact_name as pickContactName,
        o.back_contact_name as backContactName,
        o.pick_contact_phone as pickContactPhone,
        o.back_contact_phone as backContactPhone,
        o.expect_start_date as expectStartDate,
        o.expect_end_date AS expectEndDate,
        CONCAT(o.start_province,o.start_city,o.start_area,o.start_address) as startFullAddress,
        CONCAT(o.end_province,o.end_city,o.end_area,o.end_address) as endFullAddress,
        o.remark as remark,
        o.pay_type as payType,
        o.create_time as createTime,
        o.create_user_name as createUserName,
        o.check_time as checkTime,
        o.check_user_name as checkUserName,
        o.end_store_id as endStoreId,
        o.end_store_name as endStoreName,
        o.start_store_id as startStoreId,
        o.start_store_name as startStoreName,
        ct1.parent_name as region,
        ct1.parent_code as regionCode,
        s1.detail_addr as inputStoreAddress,
        ht.contract_no as contractNo,
        ht.settle_period as settlePeriod
        from w_order o
        join w_order_car oc on oc.order_id = o.id
        left join s_store s1 on o.input_store_id = s1.id
        left join s_store s2 on o.start_store_id = s2.id
        left join s_store s3 on o.end_store_id = s3.id
        left join s_city ct1 on s1.province_code = ct1.code
        left join c_customer_contract ht on ht.id = o.customer_contract_id
        <where>
            and o.state > 0
            <choose>
                <when test="paramsDto.outterState == 1">
                    and o.state = 0
                </when>
                <when test="paramsDto.outterState == 5">
                    and o.state &lt;= 10 and o.state &gt; 0
                </when>
                <when test="paramsDto.outterState == 15">
                    and o.state = 15
                </when>
                <when test="paramsDto.outterState == 25">
                    and o.state = 25
                </when>
                <when test="paramsDto.outterState == 55">
                    and o.state &gt; 25 and o.state &lt; 100
                </when>
                <when test="paramsDto.outterState == 100">
                    and o.state = 100
                </when>
                <when test="paramsDto.outterState == 113">
                    and o.state = 113
                </when>
                <when test="paramsDto.outterState == 114">
                    and o.state = 114
                </when>
            </choose>

            <choose>
                <!--1指定提车日期，2预计到达时间，3创建时间，4确认时间，5完结时间-->
                <when test="paramsDto.timeType == 1">
                    <if test="paramsDto.beginTime != null">
                        and o.expect_start_date &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.expect_start_date &lt;= #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 2">
                    <if test="paramsDto.beginTime != null">
                        and o.expect_end_date &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.expect_end_date &lt;= #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 3">
                    <if test="paramsDto.beginTime != null">
                        and o.create_time &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.create_time &lt;= #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 4">
                    <if test="paramsDto.beginTime != null">
                        and o.check_time &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.check_time &lt;= #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 5">
                    <if test="paramsDto.beginTime != null">
                        and o.finish_time &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.finish_time &lt;= #{paramsDto.endTime}
                    </if>
                </when>
            </choose>
            <if test="paramsDto.nowStoreId != null and paramsDto.nowStoreId != ''">
                and oc.now_store_id = #{paramsDto.nowStoreId}
            </if>

            <if test="paramsDto.orderNo != null and paramsDto.orderNo != ''">
                and o.no like concat('%', #{paramsDto.orderNo},'%')
            </if>
            <if test="paramsDto.customerName != null and paramsDto.customerName != ''">
                and o.customer_name like concat('%', #{paramsDto.customerName},'%')
            </if>
            <if test="paramsDto.customerType != null and paramsDto.customerType != ''">
                and o.customer_type = #{paramsDto.customerType}
            </if>
            <if test="paramsDto.customerPhone != null and paramsDto.customerPhone != ''">
                and o.customer_phone like concat('%', #{paramsDto.customerPhone},'%')
            </if>
            <if test="paramsDto.inputStoreId != null">
                and o.input_store_id = #{paramsDto.inputStoreId}
            </if>
            <if test="paramsDto.startProvinceCode != null and paramsDto.startProvinceCode != ''">
                and o.start_province_code = #{paramsDto.startProvinceCode}
            </if>
            <if test="paramsDto.startCityCode != null and paramsDto.startCityCode != ''">
                and o.start_city_code = #{paramsDto.startCityCode}
            </if>
            <if test="paramsDto.startAreaCode != null and paramsDto.startAreaCode != ''">
                and o.start_area_code = #{paramsDto.startAreaCode}
            </if>
            <if test="paramsDto.startStoreId != null">
                and o.start_store_id = #{paramsDto.startStoreId}
            </if>
            <if test="paramsDto.endProvinceCode != null and paramsDto.endProvinceCode != ''">
                and o.end_province_code = #{paramsDto.endProvinceCode}
            </if>
            <if test="paramsDto.endCityCode != null and paramsDto.endCityCode != ''">
                and o.end_city_code = #{paramsDto.endCityCode}
            </if>
            <if test="paramsDto.endAreaCode != null and paramsDto.endAreaCode != ''">
                and o.end_area_code = #{paramsDto.endAreaCode}
            </if>
            <if test="paramsDto.endStoreId != null">
                and o.end_store_id = #{paramsDto.endStoreId}
            </if>
            <if test="paramsDto.pickContactName != null and paramsDto.pickContactName != ''">
                and o.pick_contact_name like concat('%', #{paramsDto.pickContactName},'%')
            </if>
            <if test="paramsDto.pickContactPhone != null and paramsDto.pickContactPhone != ''">
                and o.pick_contact_phone like concat('%', #{paramsDto.pickContactPhone},'%')
            </if>
            <if test="paramsDto.pickType != null">
                and o.pick_type = #{paramsDto.pickType}
            </if>
            <if test="paramsDto.backType != null">
                and o.back_type = #{paramsDto.backType}
            </if>
            <if test="paramsDto.backContactName != null and paramsDto.backContactName != ''">
                and o.back_contact_name like concat('%', #{paramsDto.backContactName},'%')
            </if>
            <if test="paramsDto.backContactPhone != null and paramsDto.backContactPhone != ''">
                and o.back_contact_phone like concat('%', #{paramsDto.backContactPhone},'%')
            </if>
            <if test="paramsDto.lineId != null">
                and o.line_id = #{paramsDto.lineId}
            </if>
            <if test="paramsDto.source != null and paramsDto.source != ''">
                and o.source = #{paramsDto.source}
            </if>
            <if test="paramsDto.createUserName != null and paramsDto.createUserName != ''">
                and o.create_user_name like concat('%', #{paramsDto.createUserName},'%')
            </if>
            <if test="paramsDto.payType != null">
                and o.pay_type = #{paramsDto.payType}
            </if>
            <if test="paramsDto.regionCode != null and paramsDto.regionCode != ''">
                and ct1.parent = #{paramsDto.regionCode}
            </if>
            <if test="paramsDto.isMove != null">
                and oc.is_move = #{paramsDto.isMove}
            </if>
            <if test="paramsDto.isNew != null">
                and oc.is_new = #{paramsDto.isNew}
            </if>
            <if test="paramsDto.carNo != null and paramsDto.carNo != ''">
                and oc.no like concat('%', #{paramsDto.carNo},'%')
            </if>
            <if test="paramsDto.brand != null and paramsDto.brand != ''">
                and oc.brand = #{paramsDto.brand}
            </if>
            <if test="paramsDto.model != null and paramsDto.model != ''">
                and oc.model = #{paramsDto.model}
            </if>
            <if test="paramsDto.plateNo != null and paramsDto.plateNo != ''">
                and oc.plate_no like concat('%', #{paramsDto.plateNo},'%')
            </if>
            <if test="paramsDto.vin != null and paramsDto.vin != ''">
                and oc.vin like concat('%', #{paramsDto.vin},'%')
            </if>
            <if test="paramsDto.bizScope != null">
                and o.input_store_id in
                <foreach collection="paramsDto.bizScope" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
        group by oc.id
        order by o.id desc
    </select>
    <select id="findListByWaybillId" resultType="com.cjyc.common.model.entity.OrderCar">
        select oc.*
        from w_waybill_car wc
        join w_order_car oc on wc.order_car_id = oc.id
        where wc.waybill_id = #{waybillId}
    </select>
    <select id="getWLTotalFee" resultType="java.math.BigDecimal">
        select
        (SUM(IFNULL(pick_fee,0)) + SUM(IFNULL(trunk_fee,0)) + SUM(IFNULL(back_fee,0)) + SUM(IFNULL(add_insurance_fee,0))) as wlTotalFee
        from w_order_car
        where order_id = #{orderId}
    </select>

    <!--根据条件查询车辆信息-->
    <select id="selectByCondition" resultType="com.cjyc.common.model.vo.customer.order.OrderCarCenterVo">
        select
            car.id as id,
            car.model as model,
            car.plate_no as plateNo,
            car.brand as brand,
            car.vin as vin,
            CONCAT('${@com.cjyc.common.system.config.LogoImgProperty@logoImg}', t.logo_img) as logoImg
        from
            w_order_car car
            left join(select brand,logo_img from s_car_series group by brand) t on car.brand=t.brand
            <where>
                <if test="orderNo != null and orderNo.trim() != ''">
                    and car.order_no = #{orderNo}
                </if>
                <if test="model != null and model.trim() != ''">
                    and car.model = #{model}
                </if>
            </where>
        limit 0,1
    </select>

    <select id="findExtraById" resultType="com.cjyc.common.model.vo.web.OrderCarVo">
        select
          o.customer_id as customerId,
          o.customer_name as customerName,
          o.customer_phone as customerPhone,
          o.customer_type as customerType,
          o.input_store_id as inputStoreId,
          o.input_store_name as inputStoreName,
          o.start_province as startProvince,
          o.start_province_code as startProvinceCode,
          o.start_city as startCity,
          o.start_city_code as startCityCode,
          o.start_area as startArea,
          o.start_area_code as startAreaCode,
          o.start_address as startAddress,
          o.start_store_id as startStoreId,
          o.start_store_name as startStoreName,
          o.end_province as endProvince,
          o.end_province_code as endProvinceCode,
          o.end_city as endCity,
          o.end_city_code as endCityCode,
          o.end_area as endArea,
          o.end_area_code as endAreaCode,
          o.end_address as endAddress,
          o.end_store_id as endStoreId,
          o.end_store_name as endStoreName,
          o.expect_start_date as expectStartDate,
          o.expect_end_date as expectEndDate,
          o.car_num as carNum,
          o.line_id as lineId,
          o.pick_type as pickType,
          o.pick_contact_name as pickContactName,
          o.pick_contact_phone as pickContactPhone,
          o.back_type as backType,
          o.back_contact_name as backContactName,
          o.back_contact_phone as backContactPhone,
          o.state as orderState,
          oc.*
        from w_order_car oc
        join w_order o on o.id = oc.order_id
        where oc.id = #{orderCarId}
    </select>
    <select id="findListByIds" resultType="com.cjyc.common.model.entity.OrderCar">
        select
        <include refid="Base_Column_List"/>
        from w_order_car
        <where>
            and id in
            <foreach collection="orderCarIdList" index="index" item = "item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </select>

    <!--查询未开发票订单列表-->
    <select id="selectUnInvoiceOrderList" resultType="com.cjyc.common.model.vo.customer.invoice.InvoiceOrderVo">
        SELECT
            o.NO AS orderNo,
            o.start_city AS startCity,
            o.end_city AS endCity,
            o.total_fee AS totalFee,
            o.car_num AS carNum,
            o.finish_time AS finishTime
        FROM
            w_order o
            LEFT JOIN (
        SELECT
            apply.customer_id,
            con.id,
            con.order_no
        FROM
            c_invoice_apply apply
            LEFT JOIN c_invoice_order_con con on apply.id = con.invoice_apply_id
            AND apply.state IN ( 1, 2 )
            ) t ON o.NO = t.order_no AND o.customer_id = t.customer_id
        WHERE
            o.customer_id = #{loginId}
            AND t.id IS NULL
            AND o.state = 100
        ORDER BY
            o.finish_time DESC
    </select>

    <!--查询发票申请信息订单明细-->
    <select id="selectInvoiceOrderList" parameterType="com.cjyc.common.model.dto.customer.invoice.InvoiceApplyQueryDto"
            resultType="com.cjyc.common.model.vo.customer.invoice.InvoiceOrderVo">
        SELECT
            o.NO AS orderNo,
            o.start_city AS startCity,
            o.end_city AS endCity,
            o.total_fee AS totalFee,
            o.car_num AS carNum,
            o.finish_time AS finishTime
        FROM
            w_order o
            LEFT JOIN c_invoice_order_con con ON o.NO = con.order_no
        WHERE
            o.customer_id = #{loginId}
            AND con.invoice_apply_id = #{invoiceApplyId}
            AND con.id IS NOT NULL
            AND o.state = 100
        ORDER BY
            o.finish_time DESC
    </select>
    <sql id="transport_state">
        (case
        when oc.pick_type = 4 then 100
        when oc.pick_type &lt;= 1 then
            (case
            when oc.state &lt;= 5 then 21
            when oc.state > 5 and oc.state &lt; 25 then 23
            when oc.state &gt;= 25 then 25 end)
        else
            (case
            when oc.state &lt;= 5 then 1
            when oc.state = 10 then 2
            when oc.state = 15 then 3
            when oc.state &gt;= 25 then 5 end)
        end ) as pickTransportState,

        (case
        when oc.state &lt;= 25 then
            (case
            when oc.trunk_state &lt;= 1 then 1
            when oc.trunk_state > 1 and oc.trunk_state &lt; 7 then 2
            when oc.trunk_state = 7 then 100 end)
        when oc.state = 35 then 2
        when oc.state > 35 and oc.state &lt; 45 then 3
        when oc.state &gt;= 45 then 5 end) as trunkTransportState,

        (case
        when oc.back_type = 4 then 100
        when oc.back_type &lt;= 1 then
            (case
            when oc.state &lt;= 45 and oc.back_state &lt;= 1 then 21
            when oc.state &lt;= 45 and oc.back_state > 1 then 23
            when oc.state > 45 and oc.state &lt; 100 then 23
            when oc.state &gt;= 100 then 25 end)
        else
            (case
            when oc.state &lt;= 45 and oc.back_state &lt;= 1 then 1
            when oc.state &lt;= 45 and oc.back_state > 1 then 2
            when oc.state > 45 and oc.state &lt;= 50 then 2
            when oc.state > 50 and oc.state &lt; 100  then 3
            when oc.state &gt;= 100 then 5 end)end ) as backTransportState,
    </sql>
    <select id="findTransportStateByOrderId"
            resultType="com.cjyc.common.model.vo.web.order.TransportInfoOrderCarVo">

        <!--提：1待调度，2待提车，3待交车，5已完成，21自送待调度，23自送待交车，25自送已交付，100物流上门
        干：1待调度，2待提车，3待交车，5已完成, 100无干线
        送：1待调度，2待提车，3待交车，5已完成，21自提待调度，23自提待交车，25自提已交付，100物流上门*/-->

        select
            <include refid="transport_state"/>
            oc.*,
            t.state,
            t.driver_id as driverId,
            CONCAT(IFNULL(t.driver_name,"")," ",IFNULL(t.driver_phone,"")," ", IFNULL(t.vehicle_plate_no,"")) as nowDriver,
            ct.parent_name as nowCity,
            s.`name` as nowStore
        from w_order_car oc
        join w_order o on o.id = oc.order_id
        left join s_store s on s.id = oc.now_store_id
        left join s_city ct on ct.`code` = oc.now_area_code
        left join (
                select
                wc.order_car_id as order_car_id,
                wc.state as state,
                t.driver_id as driver_id,
                t.driver_name as driver_name,
                t.driver_phone as driver_phone,
                t.vehicle_plate_no as vehicle_plate_no
                from w_waybill_car wc
                left join w_task_car tc on tc.waybill_car_id = wc.id
                left join w_task t on t.id = tc.task_id
                where wc.state BETWEEN 15 and 90
                ) as t on t.order_car_id = oc.id
        where oc.order_id = #{orderId}
    </select>
    <select id="findVoListByIds" resultType="com.cjyc.common.model.vo.web.OrderCarVo">
        select
        o.customer_id as customerId,
        o.customer_name as customerName,
        o.customer_phone as customerPhone,
        o.customer_type as customerType,
        o.input_store_id as inputStoreId,
        o.input_store_name as inputStoreName,
        o.start_province as startProvince,
        o.start_province_code as startProvinceCode,
        o.start_city as startCity,
        o.start_city_code as startCityCode,
        o.start_area as startArea,
        o.start_area_code as startAreaCode,
        o.start_address as startAddress,
        o.start_store_id as startStoreId,
        o.start_store_name as startStoreName,
        o.end_province as endProvince,
        o.end_province_code as endProvinceCode,
        o.end_city as endCity,
        o.end_city_code as endCityCode,
        o.end_area as endArea,
        o.end_area_code as endAreaCode,
        o.end_address as endAddress,
        o.end_store_id as endStoreId,
        o.end_store_name as endStoreName,
        o.expect_start_date as expectStartDate,
        o.expect_end_date as expectEndDate,
        o.car_num as carNum,
        o.line_id as lineId,
        o.pick_type as pickType,
        o.pick_contact_name as pickContactName,
        o.pick_contact_phone as pickContactPhone,
        o.back_type as backType,
        o.back_contact_name as backContactName,
        o.back_contact_phone as backContactPhone,
        o.state as orderState,
        oc.*
        from w_order o
        join w_order_car oc on o.id= oc.order_id
        <where>
            oc.id in
            <foreach collection="orderCarIdList" index="index" item = "item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>
    <select id="countUnFinishByOrderId" resultType="java.lang.Integer">
        select count(0)
        from w_order_car
        where order_id = #{id}
        and state &lt; 100
    </select>
    <select id="findListByNos" resultType="com.cjyc.common.model.entity.OrderCar">
        select
        <include refid="Base_Column_List"/>
        from w_order_car oc
        <where>
            and oc.no in
            <foreach collection="list" index="index" item = "item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </select>

    <select id="findStockCar" resultType="com.cjyc.common.model.vo.salesman.mine.StockCarVo"
            parameterType="com.cjyc.common.model.dto.salesman.mine.StockCarDto">
      SELECT
        woc.id AS orderCarId,
        woc.brand AS brand,
        woc.model AS model,
        wo.expect_start_date AS expectStartDate,
        woc.vin AS vin
      FROM
	    w_order_car woc
	  LEFT JOIN w_order wo ON woc.order_id = wo.id
        <where>
            <if test="vin != null and vin.trim() != ''">
                  woc.vin = #{vin}
            </if>
            <if test="startCity != null and startCity.trim() != ''">
                and wo.startCity = #{startCity}
            </if>
            <if test="endCity != null and endCity.trim() != ''">
                and wo.endCity = #{endCity}
            </if>
            <if test="startTime != null">
                and wo.expect_start_date >= #{startTime}
            </if>
            <if test="endTime != null">
                and wo.expect_start_date &lt; #{endTime}
            </if>
            <if test="storeIds != null and storeIds.trim() != ''">
                and woc.now_store_id in ( #{storeIds} )
            </if>
            and woc.state in (25,35,45,50)
            order by wo.create_time desc,wo.check_time desc
        </where>
    </select>

    <select id="findOrderCar" resultType="com.cjyc.common.model.vo.salesman.mine.StockCarDetailVo"
                            parameterType="com.cjyc.common.model.dto.salesman.BaseSalesDto">
          SELECT
            wo.start_city AS startCity,
            wo.end_city AS endCity,
            wo.pick_contact_name AS pickContactName,
            wo.pick_contact_phone AS pickContactPhone,
            wo.start_address AS startAddress,
            wo.back_contact_name AS backContactName,
            wo.back_contact_phone AS backContactPhone,
            wo.end_address AS endAddress,
            woc.brand AS brand,
            woc.model AS model,
            wo.expect_start_date AS expectStartDate,
            woc.vin AS vin
        FROM
            w_order_car woc
        LEFT JOIN w_order wo ON woc.order_id = wo.id
        WHERE woc.id = #{orderCarId}
    </select>

    <!--查询出发地相同的车辆数量-->
    <select id="selectStartCityCarCount" parameterType="java.lang.String" resultType="com.cjyc.common.model.vo.salesman.dispatch.CityCarCountVo">
        /*查询未调度的 始发城市和车辆数*/
        SELECT
            t1.startCityCode,
            t1.startCity,
            count( t1.startCityCode ) AS carCount
        FROM
            (SELECT
                o.start_city_code AS startCityCode,
                o.start_city AS startCity
            FROM
                w_order_car car
                LEFT JOIN w_order o ON car.order_id = o.id
            <where>
                car.pick_state = 1
                AND car.trunk_state = 1
                AND car.back_state =1
                <if test="storeIds != null and storeIds.trim() != ''">
                    AND o.input_store_id IN ( #{storeIds} )
                </if>
            </where>
            UNION ALL
            /*经过城市作为始发城市：查询经过城市的 始发城市和车辆数量*/
            SELECT
                billCar.end_city_code AS startCityCode,
                billCar.end_city AS startCity
            FROM
                w_order_car orderCar
                JOIN w_order o ON orderCar.order_id = o.id
                JOIN (
            SELECT
                car.order_car_id,
                car.end_city_code,
                car.end_city
            FROM
                (
            SELECT
                max( id ) AS waybill_car_id
            FROM
                w_waybill_car
            <where>
                receipt_flag = 0
                <if test="storeIds != null and storeIds.trim() != ''">
                    AND end_belong_store_id IN ( #{storeIds} )
                </if>
            </where>
            GROUP BY
                order_car_id
                ) t
                LEFT JOIN w_waybill_car car ON t.waybill_car_id = car.id
                ) billCar ON orderCar.id = billCar.order_car_id
            ) t1
        GROUP BY
            t1.startCityCode
    </select>

    <!--查询出发地与目的地相同的车辆数量-->
    <select id="selectStartAndEndCityCarCount" parameterType="java.util.Map" resultType="com.cjyc.common.model.vo.salesman.dispatch.StartAndEndCityCountVo">
        /*查询未调度的 始发城市-目的城市 车辆数量*/
        SELECT
            t1.startCityCode,
            t1.startCity,
            t1.endCityCode,
            t1.endCity,
            COUNT( startCityCode ) AS carCount
        FROM
            (SELECT
                o.start_city_code AS startCityCode,
                o.start_city AS startCity,
                o.end_city_code AS endCityCode,
                o.end_city AS endCity
            FROM
                w_order_car car
                LEFT JOIN w_order o ON car.order_id = o.id
            <where>
                car.pick_state = 1
                AND car.trunk_state = 1
                AND car.back_state =1
                AND o.start_city_code = #{startCityCode}
                <if test="storeIds != null and storeIds.trim() != ''">
                    AND o.input_store_id IN ( #{storeIds} )
                </if>
            </where>
            UNION ALL
            /*当前业务中心城市作为经过城市：查询经过城市的 始发地-目的地 车辆数量*/
            SELECT
                billCar.end_city_code AS startCityCode,
                billCar.end_city AS startCity,
                o.end_city_code AS endCityCode,
                o.end_city AS endCity
            FROM
                w_order_car orderCar
                JOIN w_order o ON orderCar.order_id = o.id
                JOIN (
            SELECT
                car.order_car_id,
                car.end_city_code,
                car.end_city
            FROM
                (
            SELECT
                max( id ) AS waybill_car_id
            FROM
                w_waybill_car
            <where>
                receipt_flag = 0
                <if test="storeIds != null and storeIds.trim() != ''">
                    AND end_belong_store_id IN ( #{storeIds} )
                </if>
            </where>
            GROUP BY
                order_car_id
                ) t
                LEFT JOIN w_waybill_car car ON t.waybill_car_id = car.id
                ) billCar ON orderCar.id = billCar.order_car_id
            WHERE
                billCar.end_city_code != o.end_city_code
                AND billCar.end_city_code = #{startCityCode}
                ) t1
        GROUP BY
            t1.startCityCode,
            t1.endCityCode
    </select>
    <select id="findVoById" resultType="com.cjyc.common.model.vo.web.OrderCarVo">
        select
        o.customer_id as customerId,
        o.customer_name as customerName,
        o.customer_phone as customerPhone,
        o.customer_type as customerType,
        o.input_store_id as inputStoreId,
        o.input_store_name as inputStoreName,
        o.start_province as startProvince,
        o.start_province_code as startProvinceCode,
        o.start_city as startCity,
        o.start_city_code as startCityCode,
        o.start_area as startArea,
        o.start_area_code as startAreaCode,
        o.start_address as startAddress,
        o.start_store_id as startStoreId,
        o.start_store_name as startStoreName,
        o.end_province as endProvince,
        o.end_province_code as endProvinceCode,
        o.end_city as endCity,
        o.end_city_code as endCityCode,
        o.end_area as endArea,
        o.end_area_code as endAreaCode,
        o.end_address as endAddress,
        o.end_store_id as endStoreId,
        o.end_store_name as endStoreName,
        o.expect_start_date as expectStartDate,
        o.expect_end_date as expectEndDate,
        o.car_num as carNum,
        o.line_id as lineId,
        o.pick_type as pickType,
        o.pick_contact_name as pickContactName,
        o.pick_contact_phone as pickContactPhone,
        o.back_type as backType,
        o.back_contact_name as backContactName,
        o.back_contact_phone as backContactPhone,
        o.state as orderState,
        oc.*
        from w_order o
        join w_order_car oc on o.id= oc.order_id
        where oc.id = #{orderCarId}
    </select>
    <select id="findWaitDispatchCarListForApp" resultType="com.cjyc.common.model.vo.salesman.dispatch.DispatchListVo">
        select * from (
            /*订单所属地提车*/
            select oc.*
            from w_order o
            join w_order_car oc on oc.order_id = o.id
            where o.state between 25 and 99
            and o.input_store_id in(2222)
            and oc.pick_state &lt;= 1

            union all
            /*订单所属地干线*/
            select oc.*
            from w_order o
            join w_order_car oc on oc.order_id = o.id
            where o.state between 25 and 99
            and o.input_store_id in(2222)
            and oc.trunk_state &lt;= 1

            union all
            /*#运单目的地干线或送车*/
            select oc.*
            from w_order o
            join w_order_car oc on oc.order_id = o.id
            where o.state between 25 and 99
            and EXISTS
            (
                select t.order_car_id
                from
                (
                select wc.order_car_id
                from w_waybill w
                join w_waybill_car wc on wc.waybill_id = w.id
                where w.state &lt;= 100
                and w.type = 2
                and wc.end_belong_store_id in (2222)
                and not EXISTS
                (select wc1.id from w_waybill_car wc1 where wc1.start_belong_store_id = wc.end_belong_store_id and wc1.state &lt;=100)
            ) as t
            where t.order_car_id = oc.id
            )

        ) as tb ORDER BY tb.order_id



<!--
        select GROUP_CONCAT(ci) as line from (
        select wc.id,GROUP_CONCAT(CONCAT(left(wc.start_city,2),"-",left(wc.end_city,2))) as ci
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where order_car_id = 197
        and w.state <= 100
        and wc.state <= 100

        union

        select wc.id,
        (case
        when wc.id is null then CONCAT(left(o.start_city,2),"-",left(o.end_city,2))
        when wc.id is not null and wc.end_city != o.end_city then CONCAT(left(wc.end_city,2),"-",left(o.end_city,2))
        else null end) as ci
        from w_order o
        join w_order_car oc on oc.order_id = o.id
        left join w_waybill_car wc on wc.order_car_id = oc.id
        and wc.id =
        (select max(wc.id)
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where order_car_id = 197
        and w.state <= 100
        and wc.state <= 100)
        where oc.id = 197
        ) as t
-->



    </select>

    <!-- 业务员端我下的订单台数/全部订单的车辆 -->
    <select id="orderCarCount" resultType="java.lang.Integer">
        SELECT
            count( woc.id )
        FROM
            w_order_car woc
            LEFT JOIN w_order wo ON wo.id = woc.order_id
        <where>
            <if test="flag != null and flag == 0">
                wo.create_user_id = #{userId}
            </if>
            <if test="flag != null and flag == 1">
                and wo.check_user_id = #{userId}
            </if>
        </where>
    </select>
    <select id="countTrunkListWaitDispatchCar" resultType="java.util.Map">
        select
        count(0) as carNum,
        IFNULL(countShell.dispatchStartCityCode, '-1') AS cityCode,
        IFNULL(countShell.dispatchStartCity, '无城市') AS cityName
        from (
          <include refid="trunk_wait_dispatch_car_list"/>
        )  as countShell
        group by countShell.dispatchStartCityCode
    </select>
    <select id="countTotalTrunkWaitDispatchCarByStartCity" resultType="java.util.Map">
        select sum(carNum) as totalCount from (
            select count(0) as carNum
            from (
              <include refid="trunk_wait_dispatch_car_list"/>
            ) as countShell
            where countShell.dispatchStartCityCode = #{paramsDto.cityCode}
            GROUP BY countShell.dispatchStartCityCode, countShell.dispatchEndCityCode
        ) as t
    </select>
    <select id="countTotalTrunkWaitDispatchCar" resultType="java.util.Map">
        select sum(carNum) as totalCount from (
            select count(0) as carNum
            from (
              <include refid="trunk_wait_dispatch_car_list"/>
            ) as countShell
            group by countShell.dispatchStartCityCode
        ) as t
    </select>
</mapper>
