<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.IOrderCarDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.OrderCar">
        <id column="id" property="id"/>
        <result column="order_id" property="orderId"/>
        <result column="order_no" property="orderNo"/>
        <result column="no" property="no"/>
        <result column="brand" property="brand"/>
        <result column="model" property="model"/>
        <result column="plate_no" property="plateNo"/>
        <result column="vin" property="vin"/>
        <result column="is_move" property="isMove"/>
        <result column="is_new" property="isNew"/>
        <result column="valuation" property="valuation"/>
        <result column="now_store_id" property="nowStoreId"/>
        <result column="now_area_code" property="nowAreaCode"/>
        <result column="state" property="state"/>
        <result column="pick_state" property="pickState"/>
        <result column="trunk_state" property="trunkState"/>
        <result column="back_state" property="backState"/>
        <result column="description" property="description"/>
        <result column="pick_fee" property="pickFee"/>
        <result column="trunk_fee" property="trunkFee"/>
        <result column="back_fee" property="backFee"/>
        <result column="add_insurance_fee" property="addInsuranceFee"/>
        <result column="add_insurance_amount" property="addInsuranceAmount"/>
        <result column="coupon_offset_fee" property="couponOffsetFee"/>
        <result column="agency_fee" property="agencyFee"/>
        <result column="total_fee" property="totalFee"/>
        <result column="wl_pay_state" property="wlPayState"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, order_id, order_no, no, brand, model, plate_no, vin, is_move, is_new, valuation, now_store_id, now_area_code, state, pick_state, trunk_state, back_state, description, pick_fee, trunk_fee, back_fee, add_insurance_fee, add_insurance_amount, coupon_offset_fee, agency_fee, total_fee, wl_pay_state
    </sql>
    <insert id="saveBatch">
        insert into w_order_car
        (order_id, order_no, no, brand, model, plate_no, vin, is_move, is_new, valuation, now_store_id,
        now_area_code, state, description, pick_fee, trunk_fee, back_fee, add_insurance_fee,
        add_insurance_amount, coupon_offset_fee, agency_fee, total_fee)
        values
        <foreach collection="orderCarlist" index="index" item="item" separator=",">
            (
            #{item.orderId},
            #{item.orderNo},
            #{item.no},
            #{item.brand},
            #{item.model},
            #{item.plateNo},
            #{item.vin},
            #{item.isMove},
            #{item.isNew},
            #{item.valuation},
            #{item.nowStoreId},
            #{item.nowAreaCode},
            #{item.state},
            #{item.description},
            #{item.pickFee},
            #{item.trunkFee},
            #{item.backFee},
            #{item.addInsuranceFee},
            #{item.addInsuranceAmount},
            #{item.couponOffsetFee},
            #{item.agencyFee},
            #{item.totalFee}
            )
        </foreach>

    </insert>
    <!--根据ID更新状态-->
    <update id="updateStateById">
        update w_order_car
        set state = #{state}
        where id = #{orderCarId}
    </update>
    <update id="updatePickStateById">
        update w_order_car
        set pick_state = #{state}
        where id = #{orderCarId}
    </update>
    <update id="updateBackStateById">
        update w_order_car
        set back_state = #{state}
        where id = #{orderCarId}
    </update>
    <update id="updateTrunkStateById">
        update w_order_car
        set trunk_state = #{state}
        where id = #{orderCarId}
    </update>
    <update id="updateStateBatchByIds">
        update w_order_car
        set state = #{state}
        <where>
            and id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </update>
    <update id="updateTrunkStateBatchByIds">
        update w_order_car
        set trunk_state = #{state}
        <where>
            trunk_state != 3
            and id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <update id="updateStateForLoad">
        update w_order_car
        set state = #{orderCarState}
        where id = #{orderCarId}
    </update>

    <delete id="deleteBatchByOrderId">
        delete from w_order_car
        where order_id = #{orderId}
    </delete>

    <!-- 通过订单编号查询车辆信息 -->
    <select id="getOrderCarByNo" resultType="com.cjyc.common.model.vo.customer.order.OrderCarCenterVo" parameterType="java.lang.String">
         select brand as brand ,model as model ,plate_no as plateNo,vin as vin from w_order_car where order_no = #{orderNo};
    </select>
    <!--按地级城市统计待调度车辆数量-->
    <select id="countListWaitDispatchCar" resultType="java.util.Map">
        select count(0) as car_num, IFNULL(o.start_city_code,'-1') as cityCode, IFNULL(o.start_city, '无城市') as cityName from w_order o
        join w_order_car c on o.id = c.order_id
        where o.state BETWEEN 25 and 100
        and c.state &lt; 5 or c.state = 25 or c.state = 45
        group by o.start_city_code
    </select>

    <select id="countTotalWaitDispatchCar" resultType="java.util.Map">
        select sum(carNum) as totalCount from (
            select count(0) as carNum
            from w_order o
            join w_order_car c on o.id = c.order_id
            where o.state BETWEEN 25 and 100
            and c.state &lt; 5 or c.state = 25 or c.state = 45
            group by o.start_city_code
        ) as t
    </select>
    <!--按线路统计待调度车辆（统计列表）-->
    <select id="findlineWaitDispatchCarCountList" resultType="java.util.Map">
        select
            count(0) as carNum,
            o.start_city_code as startCityCode,
            o.start_city as startCity,
            o.end_city_code as endCityCode,
            o.end_city as endCity,
            CONCAT(o.start_city,'-',o.end_city) as line
        from w_order o
        join w_order_car c on o.id = c.order_id
        where o.state BETWEEN 25 and 100
        and o.start_city_code = #{paramsDto.cityCode}
        and c.state &lt; 5 or c.state = 25 or c.state = 45
        group by o.line_id

    </select>
    <select id="countTotalWaitDispatchCarByStartCity" resultType="java.util.Map">
        select sum(carNum) as totalCount from (
            select count(0) as carNum
            from w_order o
            join w_order_car c on o.id = c.order_id
            where o.state BETWEEN 25 and 100
            and o.start_city_code = #{paramsDto.cityCode}
            and c.state &lt; 5 or c.state = 25 or c.state = 45
            group by o.line_id
        ) as t
    </select>

    <!-- 通过主键查询车辆信息 -->
    <select id="getOrderCarInfoById" resultType="com.cjyc.common.model.vo.customer.order.OrderCarCenterVo" parameterType="java.lang.Long">
         select valuation as valuation,add_insurance_amount as insuredAmount,add_insurance_fee as addInsuranceFee,is_move as isMove, brand as brand ,model as model ,plate_no as plateNo,vin as vin from w_order_car where id = #{orderCarId};
    </select>

    <!-- 通过筛选条件查询车辆信息 -->
    <select id="getOrderCarInfoByTerm" resultType="com.cjyc.common.model.vo.customer.order.OrderCarCenterVo" parameterType="java.lang.String">
         select brand as brand ,model as model ,plate_no as plateNo,vin as vin from w_order_car
           <where>
               <if test="storeId != null and storeId != ''">
                   and  now_store_id = #{storeId}
               </if>
               <if test="brand != null and brand != ''">
                   and  brand = #{brand}
               </if>
               <if test="model != null and model != ''">
                   and  model = #{model}
               </if>
                   and order_no = #{orderNo}
           </where>

    </select>
    <!--查询待调度车辆列表-->
    <select id="findWaitDispatchCarList" resultType="com.cjyc.common.model.vo.web.order.OrderCarWaitDispatchVo">
        select
        (case
        when oc.pick_mode = 3 then 100
        when oc.pick_mode = 2 then
        (case
        when oc.state &lt;= 5 then 21
        when oc.state = 15 then 23
        when oc.state &gt;= 25 then 25 end)
        else
        (case
        when oc.state &lt;= 5 then 1
        when oc.state = 10 then 2
        when oc.state = 15 then 3
        when oc.state &gt;= 25 then 5 end)end ) as pickTransportState,

        (case
        when oc.trunk_state = 10 then 100
        when oc.trunk_state = 5 then 5
        else (case
        when oc.state &lt;= 25 and oc.trunk_state = 1 then 1
        when oc.state &lt;= 25 and oc.trunk_state > 1 then 2
        when oc.state = 35 then 2
        when oc.state = 40 then 3
        when oc.state &gt; 40 then 5 end)end ) as trunkTransportState,

        (case
        when oc.back_mode = 3 then 100
        when oc.back_mode = 2 then (case
        when oc.state = 45 then 21
        when oc.state = 55 then 23
        when oc.state &gt;= 100 then 25 end)
        else (case
        when oc.state &lt;= 45 and oc.back_state = 1 then 1
        when oc.state &lt;= 45 and oc.back_state > 1 then 2
        when oc.state = 50 then 2
        when oc.state = 55 then 3
        when oc.state &gt;= 100 then 5 end)end ) as backTransportState,
        o.source as source,
        o.start_store_id as startStoreId,
        o.start_store_name as startStoreName,
        o.end_store_id as endStoreId,
        o.end_store_name as endStoreName,
        o.start_city as startCity,
        o.end_city as endCity,
        o.create_time as createTime,
        o.create_user_name as createUserName,
        o.create_user_id as createUserId,
        o.check_time as checkTime,
        o.check_user_name as checkUserName,
        o.check_user_id as checkUserId,
        concat(s1.province, s1.city, s1.area, s1.detail_addr) as startStoreFullAddress,
        concat(s2.province, s2.city, s2.area, s2.detail_addr) as endStoreFullAddress,
        ct1.parent_name as nowCityName,
        m.phone as checkUserPhone,
        oc.*
        from w_order o
        join w_order_car oc on oc.order_id = o.id
        LEFT JOIN s_store s1 on s1.id = o.start_store_id
        LEFT JOIN s_store s2 on s2.id = o.end_store_id
        LEFT JOIN s_city ct1 on oc.now_area_code = ct1.code
        left join b_admin m on m.id = o.check_user_id
        <where>
            and o.state >= 25
            <choose>
                <when test="paramsDto.signState == 1">
                    and o.state between 25 and 99
                </when>
                <when test="paramsDto.signState == 1">
                    and o.state = 100
                </when>
                <otherwise>
                </otherwise>
            </choose>

            <if test="paramsDto.startProvinceCode != null and paramsDto.startProvinceCode != ''">
                and o.start_province_code = #{paramsDto.startProvinceCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startCityCode != null and paramsDto.startCityCode != ''">
                and o.start_city_code = #{paramsDto.startCityCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startAreaCode != null and paramsDto.startAreaCode != ''">
                and o.start_area_code = #{paramsDto.startAreaCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startStoreId != null">
                and o.start_store_id = #{paramsDto.startStoreId,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.endProvinceCode != null and paramsDto.endProvinceCode != ''">
                and o.end_province_code = #{paramsDto.endProvinceCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endCityCode != null and paramsDto.endCityCode != ''">
                and o.end_city_code = #{paramsDto.endCityCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endAreaCode != null and paramsDto.endAreaCode != ''">
                and o.end_area_code = #{paramsDto.endAreaCode,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.endStoreId != null">
                and o.end_store_id = #{paramsDto.endStoreId,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.orderNo != null and paramsDto.orderNo != ''">
                and oc.order_no = #{paramsDto.orderNo,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.carNo != null and paramsDto.carNo != ''">
                and oc.no = #{paramsDto.carNo,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.vin != null and paramsDto.vin != ''">
                and oc.vin = #{paramsDto.vin,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.beginExpectStartDate != null">
                and o.expect_start_date &gt; #{paramsDto.beginExpectStartDate,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.endExpectStartDate != null">
                and o.expect_start_date &lt; #{paramsDto.endExpectStartDate,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.pickType != null">
                and o.pick_type = #{paramsDto.pickType,jdbcType=TINYINT}
            </if>
            <if test="paramsDto.pickContactName != null and paramsDto.pickContactName != ''">
                and o.pick_contact_name = #{paramsDto.pickContactName,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.pickContactPhone != null and paramsDto.pickContactPhone != ''">
                and o.pick_contact_phone = #{paramsDto.pickContactPhone,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.backType != null">
                and o.back_type = #{paramsDto.backType,jdbcType=TINYINT}
            </if>
            <if test="paramsDto.backContactName != null and paramsDto.backContactName != ''">
                and o.back_contact_name = #{paramsDto.backContactName,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.backContactPhone != null and paramsDto.backContactPhone != ''">
                and o.back_contact_phone = #{paramsDto.backContactPhone,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.brand != null and paramsDto.brand != ''">
                and oc.brand = #{paramsDto.brand,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.model != null and paramsDto.model != ''">
                and oc.model = #{paramsDto.model,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.plateNo != null and paramsDto.plateNo != ''">
                and oc.plate_no = #{paramsDto.plateNo,jdbcType=VARCHAR}
            </if>
            <if test="paramsDto.startStoreId != null">
                and o.start_store_id = #{paramsDto.startStoreId,jdbcType=BIGINT}
            </if>
            <if test="paramsDto.endStoreId != null">
                and o.end_store_id = #{paramsDto.endStoreId,jdbcType=BIGINT}
            </if>
            <include refid="and_bizScopeStoreIds"/>
        </where>
    </select>

    <select id="findByOrderId" resultType="com.cjyc.common.model.entity.OrderCar">
        select
        <include refid="Base_Column_List"/>
        from w_order_car
        where order_id = #{orderId}
    </select>
    <select id="findChangePriceDtoByOrderId" resultType="com.cjyc.common.model.dto.web.order.ChangePriceOrderCarDto">
        select
            id,
            no,
            vin,
            pick_fee as pickFee,
            trunk_fee as trunkFee,
            back_fee as backFee,
            add_insurance_fee as addInsuranceFee,
            coupon_offset_fee as couponOffsetFee,
            agency_fee as agencyFee
        FROM w_order_car
        where order_id = #{orderId}

    </select>
    <select id="findListSelective" resultType="com.cjyc.common.model.vo.web.order.ListOrderCarVo">
        <!--提：1待调度，2待提车，3待交车，5已完成，21自送待调度，23自送待交车，25自送已交付，100物流上门
        干：1待调度，2待提车，3待交车，5已完成, 100无干线
        送：1待调度，2待提车，3待交车，5已完成，21自提待调度，23自提待交车，25自提已交付，100物流上门*/-->
        select
        oc.*,
        (case
        when o.state = 0 then '预订单'
        when o.state &gt; 0 and o.state &lt; 15 then '待确认'
        when o.state = 15 then '待付款'
        when o.state = 25 then '待调度'
        when o.state = 55 then '运输中'
        when o.state = 100 then '已交付'
        when o.state = 113 then '已取消'
        when o.state = 114 then '已作废'
        end
        ) as outterState,

        (case
        when oc.pick_mode = 3 then 100
        when oc.pick_mode = 2 then
        (case
        when oc.state &lt;= 5 then 21
        when oc.state = 15 then 23
        when oc.state &gt;= 25 then 25 end)
        else
        (case
        when oc.state &lt;= 5 then 1
        when oc.state = 10 then 2
        when oc.state = 15 then 3
        when oc.state &gt;= 25 then 5 end)end ) as pickTransportState,

        (case
        when oc.trunk_state = 10 then 100
        when oc.trunk_state = 5 then 5
        else (case
        when oc.state &lt;= 25 and oc.trunk_state = 1 then 1
        when oc.state &lt;= 25 and oc.trunk_state > 1 then 2
        when oc.state = 35 then 2
        when oc.state = 40 then 3
        when oc.state &gt; 40 then 5 end)end ) as trunkTransportState,

        (case
        when oc.back_mode = 3 then 100
        when oc.back_mode = 2 then (case
        when oc.state = 45 then 21
        when oc.state = 55 then 23
        when oc.state &gt;= 100 then 25 end)
        else (case
        when oc.state &lt;= 45 and oc.back_state = 1 then 1
        when oc.state &lt;= 45 and oc.back_state > 1 then 2
        when oc.state = 50 then 2
        when oc.state = 55 then 3
        when oc.state &gt;= 100 then 5 end)end ) as backTransportState,

        ct1.parent_name as region,
        ct1.parent_code as regionCode,
        s1.detail_addr as inputStoreAddress,
        s2.detail_addr as startStoreAddress,
        s3.detail_addr as endStoreAddress,
        ht.contract_no as contractNo,
        ht.settle_period as settlePeriod
        from w_order o
        left join w_order_car oc on oc.order_id = o.id
        left join s_store s1 on o.input_store_id = s1.id
        left join s_store s2 on o.start_store_id = s2.id
        left join s_store s3 on o.end_store_id = s3.id
        left join s_city ct1 on s1.province_code = ct1.code
        left join c_customer_contract ht on ht.id = o.customer_contract_id
        <where>
            <choose>
                <when test="paramsDto.outterState == 1">
                    and o.state = 0
                </when>
                <when test="paramsDto.outterState == 5">
                    and o.state &lt;= 10 and o.state &gt; 0
                </when>
                <when test="paramsDto.outterState == 15">
                    and o.state = 15
                </when>
                <when test="paramsDto.outterState == 25">
                    and o.state = 25
                </when>
                <when test="paramsDto.outterState == 55">
                    and o.state &gt; 25 and o.state &lt; 100
                </when>
                <when test="paramsDto.outterState == 100">
                    and o.state = 100
                </when>
                <when test="paramsDto.outterState == 113">
                    and o.state = 113
                </when>
                <when test="paramsDto.outterState == 114">
                    and o.state = 114
                </when>
            </choose>

            <choose>
                <!--1指定提车日期，2预计到达时间，3创建时间，4确认时间，5完结时间-->
                <when test="paramsDto.timeType == 1">
                    <if test="paramsDto.beginTime != null">
                        and o.expect_start_date &gt; #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.expect_start_date &lt; #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 2">
                    <if test="paramsDto.beginTime != null">
                        and o.expect_end_date &gt; #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.expect_end_date &lt; #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 3">
                    <if test="paramsDto.beginTime != null">
                        and o.create_time &gt; #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.create_time &lt; #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 4">
                    <if test="paramsDto.beginTime != null">
                        and o.check_time &gt; #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.check_time &lt; #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 5">
                    <if test="paramsDto.beginTime != null">
                        and o.finish_time &gt; #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.finish_time &lt; #{paramsDto.endTime}
                    </if>
                </when>
            </choose>


            <if test="paramsDto.orderNo != null and paramsDto.orderNo != ''">
                and o.no = #{paramsDto.orderNo}
            </if>
            <if test="paramsDto.customerName != null and paramsDto.customerName != ''">
                and o.customer_name = #{paramsDto.customerName}
            </if>
            <if test="paramsDto.customerType != null and paramsDto.customerType != ''">
                and o.customer_type = #{paramsDto.customerType}
            </if>
            <if test="paramsDto.customerPhone != null and paramsDto.customerPhone != ''">
                and o.customer_phone = #{paramsDto.customerPhone}
            </if>
            <if test="paramsDto.inputStoreId != null">
                and o.input_store_id = #{paramsDto.inputStoreId}
            </if>
            <if test="paramsDto.startProvinceCode != null and paramsDto.startProvinceCode != ''">
                and o.start_province_code = #{paramsDto.startProvinceCode}
            </if>
            <if test="paramsDto.startCityCode != null and paramsDto.startCityCode != ''">
                and o.start_city_code = #{paramsDto.startCityCode}
            </if>
            <if test="paramsDto.startAreaCode != null and paramsDto.startAreaCode != ''">
                and o.start_area_code = #{paramsDto.startAreaCode}
            </if>
            <if test="paramsDto.startStoreId != null">
                and o.start_store_id = #{paramsDto.startStoreId}
            </if>
            <if test="paramsDto.endProvinceCode != null and paramsDto.endProvinceCode != ''">
                and o.end_province_code = #{paramsDto.endProvinceCode}
            </if>
            <if test="paramsDto.endCityCode != null and paramsDto.endCityCode != ''">
                and o.end_city_code = #{paramsDto.endCityCode}
            </if>
            <if test="paramsDto.endAreaCode != null and paramsDto.endAreaCode != ''">
                and o.end_area_code = #{paramsDto.endAreaCode}
            </if>
            <if test="paramsDto.endStoreId != null">
                and o.end_store_id = #{paramsDto.endStoreId}
            </if>

            <if test="paramsDto.pickContactName != null and paramsDto.pickContactName != ''">
                and o.pick_contact_name = #{paramsDto.pickContactName}
            </if>
            <if test="paramsDto.pickContactPhone != null and paramsDto.pickContactPhone != ''">
                and o.pick_contact_phone = #{paramsDto.pickContactPhone}
            </if>
            <if test="paramsDto.pickType != null">
                and o.pick_type = #{paramsDto.pickType}
            </if>
            <if test="paramsDto.backType != null">
                and o.back_type = #{paramsDto.backType}
            </if>
            <if test="paramsDto.backContactName != null and paramsDto.backContactName != ''">
                and o.back_contact_name = #{paramsDto.backContactName}
            </if>
            <if test="paramsDto.backContactPhone != null and paramsDto.backContactPhone != ''">
                and o.back_contact_phone = #{paramsDto.backContactPhone}
            </if>
            <if test="paramsDto.lineId != null">
                and o.line_id = #{paramsDto.lineId}
            </if>
            <if test="paramsDto.source != null and paramsDto.source != ''">
                and o.source = #{paramsDto.source}
            </if>

            <if test="paramsDto.createUserName != null and paramsDto.createUserName != ''">
                and o.create_user_name = #{paramsDto.createUserName}
            </if>
            <if test="paramsDto.payType != null">
                and o.pay_type = #{paramsDto.payType}
            </if>
            <if test="paramsDto.regionCode != null and paramsDto.regionCode != ''">
                and ct1.paren = #{paramsDto.regionCode}
            </if>


            <if test="paramsDto.isMove != null">
                and oc.is_move = #{paramsDto.isMove}
            </if>
            <if test="paramsDto.isNew != null">
                and oc.is_new = #{paramsDto.isNew}
            </if>
            <if test="paramsDto.carNo != null and paramsDto.carNo != ''">
                and oc.no = #{paramsDto.carNo}
            </if>
            <if test="paramsDto.brand != null and paramsDto.brand != ''">
                and oc.brand = #{paramsDto.brand}
            </if>
            <if test="paramsDto.model != null and paramsDto.model != ''">
                and oc.model = #{paramsDto.model}
            </if>
            <if test="paramsDto.plateNo != null and paramsDto.plateNo != ''">
                and oc.plate_no = #{paramsDto.plateNo}
            </if>
            <if test="paramsDto.vin != null and paramsDto.vin != ''">
                and oc.vin = #{paramsDto.vin}
            </if>
            <if test="paramsDto.bizScope != null">
                and (o.start_belong_store_id or o.end_belong_store_id or oc.now_store_id) in
                <foreach collection="paramsDto.bizScope" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
    </select>
    <select id="findListByWaybillId" resultType="com.cjyc.common.model.entity.OrderCar">
        select oc.*
        from w_waybill_car wc
        join w_order_car oc on wc.order_car_id = oc.id
        where wc.waybill_id = #{waybillId}
    </select>
    <select id="getWLTotalFee" resultType="java.math.BigDecimal">
        select
        (SUM(IFNULL(pick_fee,0)) + SUM(IFNULL(trunk_fee,0)) + SUM(IFNULL(back_fee,0)) + SUM(IFNULL(add_insurance_fee,0))) as wlTotalFee
        from w_order_car
        where order_id = #{orderId}
    </select>


    <!--业务范围条件-->
    <sql id="and_bizScopeStoreIds">
        <if test="bizScope != null">
            and (now_store_id or wc.end_store_id ) in
            <foreach collection="bizScope" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>

    <!--根据条件查询车辆信息-->
    <select id="selectByCondition" resultType="com.cjyc.common.model.vo.customer.order.OrderCarCenterVo">
        select
        car.model as model,
        car.plate_no as plateNo,
        car.brand as brand,
        car.vin as vin
        from
        w_order_car car
        <where>
            <if test="orderNo != null and orderNo.trim() != ''">
                and car.order_no = #{orderNo}
            </if>
            <if test="model != null and model.trim() != ''">
                and car.model = #{model}
            </if>
        </where>
        limit 0,1
    </select>

    <select id="findExtraById" resultType="com.cjyc.common.model.vo.web.OrderCarVo">
        select
          o.customer_id as customerId,
          o.customer_name as customerName,
          o.customer_phone as customerPhone,
          o.customer_type as customerType,
          o.input_store_id as inputStoreId,
          o.input_store_name as inputStoreName,
          o.start_province as startProvince,
          o.start_province_code as startProvinceCode,
          o.start_city as startCity,
          o.start_city_code as startCityCode,
          o.start_area as startArea,
          o.start_area_code as startAreaCode,
          o.start_address as startAddress,
          o.start_store_id as startStoreId,
          o.start_store_name as startStoreName,
          o.end_province as endProvince,
          o.end_province_code as endProvinceCode,
          o.end_city as endCity,
          o.end_city_code as endCityCode,
          o.end_area as endArea,
          o.end_area_code as endAreaCode,
          o.end_address as endAddress,
          o.end_store_id as endStoreId,
          o.end_store_name as endStoreName,
          o.expect_start_date as expectStartDate,
          o.expect_end_date as expectEndDate,
          o.car_num as carNum,
          o.line_id as lineId,
          o.pick_type as pickType,
          o.pick_contact_name as pickContactName,
          o.pick_contact_phone as pickContactPhone,
          o.back_type as backType,
          o.back_contact_name as backContactName,
          o.back_contact_phone as backContactPhone,
          o.state as orderState,
          oc.*
        from w_order_car oc
        join w_order o on o.id = oc.order_id
        where oc.id = #{orderCarId}
    </select>
    <select id="findByIds" resultType="com.cjyc.common.model.entity.OrderCar">
        select
        <include refid="Base_Column_List"/>
        from w_order_car
        <where>
            id in
            <foreach collection="orderCarIdList" index="index" item = "item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </select>

    <!--查询未开发票订单列表-->
    <select id="selectUnInvoiceOrderList" resultType="com.cjyc.common.model.vo.customer.invoice.InvoiceOrderVo">
        SELECT
            o.NO AS orderNo,
            o.start_city AS startCity,
            o.end_city AS endCity,
            o.total_fee AS totalFee,
            o.car_num AS carNum,
            o.finish_time AS finishTime
        FROM
            w_order o
            LEFT JOIN (
        SELECT
            apply.customer_id,
            con.id,
            con.order_no
        FROM
            c_invoice_apply apply
            LEFT JOIN c_invoice_order_con con on apply.id = con.invoice_apply_id
            AND apply.state IN ( 1, 2 )
            ) t ON o.NO = t.order_no AND o.customer_id = t.customer_id
        WHERE
            o.customer_id = #{loginId}
            AND t.id IS NULL
            AND o.invoice_flag = 1
            AND o.state = 100
        ORDER BY
            o.finish_time DESC
    </select>

    <!--查询发票申请信息订单明细-->
    <select id="selectInvoiceOrderList" parameterType="com.cjyc.common.model.dto.customer.invoice.InvoiceApplyQueryDto"
            resultType="com.cjyc.common.model.vo.customer.invoice.InvoiceOrderVo">
        SELECT
            o.NO AS orderNo,
            o.start_city AS startCity,
            o.end_city AS endCity,
            o.total_fee AS totalFee,
            o.car_num AS carNum,
            o.finish_time AS finishTime
        FROM
            w_order o
            LEFT JOIN c_invoice_order_con con ON o.NO = con.order_no
        WHERE
            o.customer_id = #{loginId}
            AND con.invoice_apply_id = #{invoiceApplyId}
            AND con.id IS NOT NULL
            AND o.invoice_flag = 1
            AND o.state = 100
        ORDER BY
            o.finish_time DESC
    </select>
    <select id="findTransportStateByOrderId"
            resultType="com.cjyc.common.model.vo.web.order.TransportInfoOrderCarVo">

        <!--提：1待调度，2待提车，3待交车，5已完成，21自送待调度，23自送待交车，25自送已交付，100物流上门
        干：1待调度，2待提车，3待交车，5已完成, 100无干线
        送：1待调度，2待提车，3待交车，5已完成，21自提待调度，23自提待交车，25自提已交付，100物流上门*/-->

        select
            (case
            when oc.pick_mode = 3 then 100
            when oc.pick_mode = 2 then
            (case
            when oc.state &lt;= 5 then 21
            when oc.state = 15 then 23
            when oc.state &gt;= 25 then 25 end)
            else
            (case
            when oc.state &lt;= 5 then 1
            when oc.state = 10 then 2
            when oc.state = 15 then 3
            when oc.state &gt;= 25 then 5 end)end ) as pickTransportState,

            (case
            when oc.trunk_state = 10 then 100
            when oc.trunk_state = 5 then 5
            else (case
            when oc.state &lt;= 25 and oc.trunk_state = 1 then 1
            when oc.state &lt;= 25 and oc.trunk_state > 1 then 2
            when oc.state = 35 then 2
            when oc.state = 40 then 3
            when oc.state &gt; 40 then 5 end)end ) as trunkTransportState,

            (case
            when oc.back_mode = 3 then 100
            when oc.back_mode = 2 then (case
            when oc.state = 45 then 21
            when oc.state = 55 then 23
            when oc.state &gt;= 100 then 25 end)
            else (case
            when oc.state &lt;= 45 and oc.back_state = 1 then 1
            when oc.state &lt;= 45 and oc.back_state > 1 then 2
            when oc.state = 50 then 2
            when oc.state = 55 then 3
            when oc.state &gt;= 100 then 5 end)end ) as backTransportState,
            oc.*,
            t.state,
            t.driver_id as driverId,
            CONCAT(t.driver_name," ",t.driver_phone," ",t.vehicle_plate_no) as nowDriver,
            s.city as nowCity
        from w_order_car oc
        left join s_store s on s.id = oc.now_store_id
        left join (
                select
                wc.order_car_id as order_car_id,
                wc.state as state,
                t.driver_id as driver_id,
                t.driver_name as driver_name,
                t.driver_phone as driver_phone,
                t.vehicle_plate_no as vehicle_plate_no
                from w_waybill_car wc
                left join w_task_car tc on tc.waybill_car_id = wc.id
                left join w_task t on t.id = tc.task_id
                where wc.state BETWEEN 15 and 90
                ) as t on t.order_car_id = oc.id
        where oc.order_id = #{orderId}
    </select>
    <select id="findVoListByIds" resultType="com.cjyc.common.model.vo.web.OrderCarVo">
        select
        o.customer_id as customerId,
        o.customer_name as customerName,
        o.customer_phone as customerPhone,
        o.customer_type as customerType,
        o.input_store_id as inputStoreId,
        o.input_store_name as inputStoreName,
        o.start_province as startProvince,
        o.start_province_code as startProvinceCode,
        o.start_city as startCity,
        o.start_city_code as startCityCode,
        o.start_area as startArea,
        o.start_area_code as startAreaCode,
        o.start_address as startAddress,
        o.start_store_id as startStoreId,
        o.start_store_name as startStoreName,
        o.end_province as endProvince,
        o.end_province_code as endProvinceCode,
        o.end_city as endCity,
        o.end_city_code as endCityCode,
        o.end_area as endArea,
        o.end_area_code as endAreaCode,
        o.end_address as endAddress,
        o.end_store_id as endStoreId,
        o.end_store_name as endStoreName,
        o.expect_start_date as expectStartDate,
        o.expect_end_date as expectEndDate,
        o.car_num as carNum,
        o.line_id as lineId,
        o.pick_type as pickType,
        o.pick_contact_name as pickContactName,
        o.pick_contact_phone as pickContactPhone,
        o.back_type as backType,
        o.back_contact_name as backContactName,
        o.back_contact_phone as backContactPhone,
        o.state as orderState,
        oc.*
        from w_order o
        join w_order_car oc on o.id= oc.order_id
        <where>
            oc.id in
            <foreach collection="orderCarIdList" index="index" item = "item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>
</mapper>
