<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.IOrderDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.Order">
        <id column="id" property="id" />
        <result column="no" property="no" />
        <result column="customer_id" property="customerId" />
        <result column="customer_name" property="customerName" />
        <result column="customer_phone" property="customerPhone" />
        <result column="customer_type" property="customerType" />
        <result column="input_store_id" property="inputStoreId" />
        <result column="input_store_name" property="inputStoreName" />
        <result column="start_province" property="startProvince" />
        <result column="start_province_code" property="startProvinceCode" />
        <result column="start_city" property="startCity" />
        <result column="start_city_code" property="startCityCode" />
        <result column="start_area" property="startArea" />
        <result column="start_area_code" property="startAreaCode" />
        <result column="start_address" property="startAddress" />
        <result column="start_lng" property="startLng" />
        <result column="start_lat" property="startLat" />
        <result column="start_store_id" property="startStoreId" />
        <result column="start_store_name" property="startStoreName" />
        <result column="start_belong_store_id" property="startBelongStoreId" />
        <result column="end_province" property="endProvince" />
        <result column="end_province_code" property="endProvinceCode" />
        <result column="end_city" property="endCity" />
        <result column="end_city_code" property="endCityCode" />
        <result column="end_area" property="endArea" />
        <result column="end_area_code" property="endAreaCode" />
        <result column="end_address" property="endAddress" />
        <result column="end_lng" property="endLng" />
        <result column="end_lat" property="endLat" />
        <result column="end_store_id" property="endStoreId" />
        <result column="end_store_name" property="endStoreName" />
        <result column="end_belong_store_id" property="endBelongStoreId" />
        <result column="expect_start_date" property="expectStartDate" />
        <result column="expect_end_date" property="expectEndDate" />
        <result column="car_num" property="carNum" />
        <result column="line_id" property="lineId" />
        <result column="pick_type" property="pickType" />
        <result column="pick_contact_name" property="pickContactName" />
        <result column="pick_contact_phone" property="pickContactPhone" />
        <result column="back_type" property="backType" />
        <result column="back_contact_name" property="backContactName" />
        <result column="back_contact_phone" property="backContactPhone" />
        <result column="hurry_days" property="hurryDays" />
        <result column="source" property="source" />
        <result column="create_time" property="createTime" />
        <result column="create_user_name" property="createUserName" />
        <result column="create_user_id" property="createUserId" />
        <result column="allot_to_user_name" property="allotToUserName" />
        <result column="allot_to_user_id" property="allotToUserId" />
        <result column="check_time" property="checkTime" />
        <result column="check_user_name" property="checkUserName" />
        <result column="check_user_id" property="checkUserId" />
        <result column="state" property="state" />
        <result column="remark" property="remark" />
        <result column="invoice_flag" property="invoiceFlag" />
        <result column="invoice_type" property="invoiceType" />
        <result column="pick_fee" property="pickFee" />
        <result column="trunk_fee" property="trunkFee" />
        <result column="back_fee" property="backFee" />
        <result column="add_insurance_fee" property="addInsuranceFee" />
        <result column="coupon_offset_fee" property="couponOffsetFee" />
        <result column="agency_fee" property="agencyFee" />
        <result column="total_fee" property="totalFee" />
        <result column="deposit_fee" property="depositFee" />
        <result column="fee_share_type" property="feeShareType" />
        <result column="customer_contract_id" property="customerContractId" />
        <result column="pay_type" property="payType" />
        <result column="wl_pay_state" property="wlPayState" />
        <result column="wl_pay_time" property="wlPayTime" />
        <result column="finish_time" property="finishTime" />
        <result column="offline_pay_flag" property="offlinePayFlag" />
        <result column="coupon_send_id" property="couponSendId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, no, customer_id, customer_name, customer_phone, customer_type, input_store_id, input_store_name, start_province, start_province_code, start_city, start_city_code, start_area, start_area_code, start_address, start_lng, start_lat, start_store_id, start_store_name, start_belong_store_id, end_province, end_province_code, end_city, end_city_code, end_area, end_area_code, end_address, end_lng, end_lat, end_store_id, end_store_name, end_belong_store_id, expect_start_date, expect_end_date, car_num, line_id, pick_type, pick_contact_name, pick_contact_phone, back_type, back_contact_name, back_contact_phone, hurry_days, source, create_time, create_user_name, create_user_id, allot_to_user_name, allot_to_user_id, check_time, check_user_name, check_user_id, state, remark, invoice_flag, invoice_type, pick_fee, trunk_fee, back_fee, add_insurance_fee, coupon_offset_fee, agency_fee, total_fee, deposit_fee, fee_share_type, customer_contract_id, pay_type, wl_pay_state, wl_pay_time, finish_time, offline_pay_flag, coupon_send_id
    </sql>



    <update id="updateStateForLoad">
        update w_order o
        set o.state = #{orderState}
        <where>
            and o.state = 25
            <if test="orderIdSet != null">
                and o.id in
                <foreach collection="orderIdSet" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>

    </update>
    <update id="updateStateById">
        update w_order
        set state = #{state}
        where id = ${id}
    </update>
    <update id="updateForReceipt">
        update w_order
        set state = 100,
        finish_time = #{currentTimeMillis}
        where id = #{id}
    </update>
    <update id="updateForFinish">
        update w_order
        set state = 100,
        finish_time = UNIX_TIMESTAMP(NOW()) * 1000
        where id = #{id}
        and state &lt; 100
        limit 1
    </update>

    <resultMap id="VinResultMap" type="com.cjyc.common.model.vo.customer.order.OrderCenterVo">
        <!--查询该订单号下的一条车辆信息-->
        <collection property="orderCarCenterVoList" column="{orderNo = no,model = model}"
                    select="com.cjyc.common.model.dao.IOrderCarDao.selectByCondition">
        </collection>
    </resultMap>

    <select id="findVoById" resultType="com.cjyc.common.model.vo.web.order.OrderVo">
        select
        s1.detail_addr as inputStoreAddress,
        s2.detail_addr as startStoreAddress,
        s3.detail_addr as endStoreAddress,
        cc.`name` as couponName,
        w.*
        from w_order w
        left join s_store s1 on s1.id = w.input_store_id
        left join s_store s2 on s2.id = w.start_store_id
        left join s_store s3 on s3.id = w.end_store_id
        left join c_coupon_send cs on cs.id = w.coupon_send_id
        left join c_coupon cc on cc.id = cs.coupon_id
        where w.id = #{orderId}
    </select>
    <select id="findListSelective" resultType="com.cjyc.common.model.vo.web.order.ListOrderVo">
        select
        o.*,
        (case
        when o.state = 0 then '预订单'
        when o.state &gt; 0 and o.state &lt; 15 then '待确认'
        when o.state = 15 then '待付款'
        when o.state = 25 then '待调度'
        when o.state = 55 then '运输中'
        when o.state = 100 then '已交付'
        when o.state = 113 then '已取消'
        when o.state = 114 then '已作废'
        end
        ) as outterState,
        CONCAT(start_province,start_city,start_area,start_address) as startFullAddress,
        CONCAT(end_province,end_city,end_area,end_address) as endFullAddress,
        (sum(IFNULL(oc.pick_fee,0)) + sum(IFNULL(oc.trunk_fee,0)) + sum(IFNULL(oc.back_fee,0)) +sum(IFNULL(oc.add_insurance_fee,0))) as wlTotalFee,
        (case when o.customer_type =3 then IFNULL(o.total_fee,0) - ((sum(IFNULL(oc.pick_fee,0)) + sum(IFNULL(oc.trunk_fee,0)) + sum(IFNULL(oc.back_fee,0)) +sum(IFNULL(oc.add_insurance_fee,0)) + IFNULL(o.coupon_offset_fee,0)))
        else 0 end
        ) as totalAgencyFee,
        ct1.parent_name as region,
        ct1.parent_code as regionCode,
        s1.detail_addr as inputStoreAddress,
        s2.detail_addr as startStoreAddress,
        s3.detail_addr as endStoreAddress,
        ht.contract_no as contractNo,
        ht.settle_period as settlePeriod
        from w_order o
        left join w_order_car oc on oc.order_id = o.id
        left join s_store s1 on o.input_store_id = s1.id
        left join s_store s2 on o.start_store_id = s2.id
        left join s_store s3 on o.end_store_id = s3.id
        left join s_city ct1 on s1.province_code = ct1.code
        left join c_customer_contract ht on ht.id = o.customer_contract_id
        <where>
            <choose>
                <when test="paramsDto.outterState == 1">
                    and o.state = 0
                    and o.create_user_id = #{paramsDto.loginId}
                </when>
                <when test="paramsDto.outterState == 5">
                    and o.state &lt;= 10 and o.state &gt; 0
                </when>
                <when test="paramsDto.outterState == 15">
                    and o.state = 15
                </when>
                <when test="paramsDto.outterState == 25">
                    and o.state = 25
                </when>
                <when test="paramsDto.outterState == 55">
                    and o.state &gt; 25 and o.state &lt; 100
                </when>
                <when test="paramsDto.outterState == 100">
                    and o.state = 100
                </when>
                <when test="paramsDto.outterState == 113">
                    and o.state = 113
                </when>
                <when test="paramsDto.outterState == 114">
                    and o.state = 114
                </when>
                <otherwise>
                    and o.state > 0
                </otherwise>
            </choose>

            <choose>
                <!--1指定提车日期，2预计到达时间，3创建时间，4确认时间，5完结时间-->
                <when test="paramsDto.timeType == 1">
                    <if test="paramsDto.beginTime != null">
                        and o.expect_start_date &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.expect_start_date &lt;= #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 2">
                    <if test="paramsDto.beginTime != null">
                        and o.expect_end_date &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.expect_end_date &lt;= #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 3">
                    <if test="paramsDto.beginTime != null">
                        and o.create_time &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.create_time &lt;= #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 4">
                    <if test="paramsDto.beginTime != null">
                        and o.check_time &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.check_time &lt;= #{paramsDto.endTime}
                    </if>
                </when>
                <when test="paramsDto.timeType == 5">
                    <if test="paramsDto.beginTime != null">
                        and o.finish_time &gt;= #{paramsDto.beginTime}
                    </if>
                    <if test="paramsDto.endTime != null">
                        and o.finish_time &lt;= #{paramsDto.endTime}
                    </if>
                </when>
            </choose>
            <if test="paramsDto.no != null and paramsDto.no != ''">
                and o.no = #{paramsDto.no}
            </if>
            <if test="paramsDto.customerName != null and paramsDto.customerName != ''">
                and o.customer_name like concat('%', #{paramsDto.customerName}, '%')
            </if>

            <if test="paramsDto.customerType != null and paramsDto.customerType != ''">
                <choose>
                    <when test="paramsDto.customerType == 1 or paramsDto.customerType == 2 or paramsDto.customerType == 3">
                        and o.customer_type = #{paramsDto.customerType}
                    </when>
                    <when test="paramsDto.customerType == 5">
                        and (o.customer_type = 2 or o.customer_type = 3)
                    </when>
                </choose>

            </if>
            <if test="paramsDto.customerPhone != null and paramsDto.customerPhone != ''">
                and o.customer_phone like concat('%', #{paramsDto.customerPhone}, '%')
            </if>
            <if test="paramsDto.inputStoreId != null">
                and o.input_store_id = #{paramsDto.inputStoreId}
            </if>
            <if test="paramsDto.startProvinceCode != null and paramsDto.startProvinceCode != ''">
                and o.start_province_code = #{paramsDto.startProvinceCode}
            </if>
            <if test="paramsDto.startCityCode != null and paramsDto.startCityCode != ''">
                and o.start_city_code = #{paramsDto.startCityCode}
            </if>
            <if test="paramsDto.startAreaCode != null and paramsDto.startAreaCode != ''">
                and o.start_area_code = #{paramsDto.startAreaCode}
            </if>
            <if test="paramsDto.startStoreId != null">
                and o.start_store_id = #{paramsDto.startStoreId}
            </if>
            <if test="paramsDto.endProvinceCode != null and paramsDto.endProvinceCode != ''">
                and o.end_province_code = #{paramsDto.endProvinceCode}
            </if>
            <if test="paramsDto.endCityCode != null and paramsDto.endCityCode != ''">
                and o.end_city_code = #{paramsDto.endCityCode}
            </if>
            <if test="paramsDto.endAreaCode != null and paramsDto.endAreaCode != ''">
                and o.end_area_code = #{paramsDto.endAreaCode}
            </if>
            <if test="paramsDto.endStoreId != null">
                and o.end_store_id = #{paramsDto.endStoreId}
            </if>
            <if test="paramsDto.pickContactName != null and paramsDto.pickContactName != ''">
                and o.pick_contact_name like concat('%', #{paramsDto.pickContactName}, '%')
            </if>
            <if test="paramsDto.pickContactPhone != null and paramsDto.pickContactPhone != ''">
                and o.pick_contact_phone like concat('%', #{paramsDto.pickContactPhone}, '%')
            </if>
            <if test="paramsDto.pickType != null">
                and o.pick_type = #{paramsDto.pickType}
            </if>
            <if test="paramsDto.backType != null">
                and o.back_type = #{paramsDto.backType}
            </if>
            <if test="paramsDto.backContactName != null and paramsDto.backContactName != ''">
                and o.back_contact_name like concat('%', #{paramsDto.backContactName}, '%')
            </if>
            <if test="paramsDto.backContactPhone != null and paramsDto.backContactPhone != ''">
                and o.back_contact_phone like concat('%', #{paramsDto.backContactPhone}, '%')
            </if>
            <if test="paramsDto.lineId != null">
                and o.line_id = #{paramsDto.lineId}
            </if>
            <if test="paramsDto.source != null and paramsDto.source != ''">
                and o.source = #{paramsDto.source}
            </if>

            <if test="paramsDto.createUserName != null and paramsDto.createUserName != ''">
                and o.create_user_name like concat('%', #{paramsDto.createUserName}, '%')
            </if>
            <if test="paramsDto.payType != null">
                and o.pay_type = #{paramsDto.payType}
            </if>
            <if test="paramsDto.regionCode != null and paramsDto.regionCode != ''">
                and ct1.parent_code = #{paramsDto.regionCode}
            </if>
            <if test="paramsDto.countByCustomer != null and paramsDto.countByCustomer == true">
                and o.customer_id = #{paramsDto.loginId}
            </if>
            <if test="paramsDto.bizScope != null">
                and o.input_store_id in
                <foreach collection="paramsDto.bizScope" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        group by o.id
        order by o.id desc
    </select>

    <select id="countForAllTab" resultType="java.util.Map">
        select
        IFNULL(sum(case when o.state &gt; 0 then 1 else 0 end ),0)  as totalCount,<!--全部订单-->
        IFNULL(sum(case when o.state = 0 and o.create_user_id = #{paramsDto.loginId} then 1 else 0 end ),0) as waitCommitCount,<!--待提交-->
        IFNULL(sum(case when o.state &gt; 0 and o.state &lt; 15 then 1 else 0 end ),0)  as waitCheckCount,<!--待确认-->
        IFNULL(sum(case when o.state = 15 then 1 else 0 end ),0)  as waitPrePayCount,<!--带预付款-->
        IFNULL(sum(case when o.state = 25 then 1 else 0 end ),0)  as waitDispatchCount,<!--待调度-->
        IFNULL(sum(case when o.state = 55 then 1 else 0 end ),0)  as transportingCount,<!--运输中-->
        IFNULL(sum(case when o.state = 100 then 1 else 0 end ),0)  as finishedCount,<!--运输中-->
        IFNULL(sum(case when o.state = 113 then 1 else 0 end ),0)  as cancelCount,<!--已取消-->
        IFNULL(sum(case when o.state = 114 then 1 else 0 end ),0)  as obsoleteCount<!--已作废-->
        from w_order o
        <where>
            <if test="paramsDto.countByCustomer != null and paramsDto.countByCustomer == true">
                and o.customer_id = #{paramsDto.loginId}
            </if>
            <if test="paramsDto.countByInputStore != null and paramsDto.countByInputStore == true">
                and o.input_store_id = #{paramsDto.inputStoreId}
            </if>
            <if test="paramsDto.bizScope != null">
                and o.input_store_id in
                <foreach collection="paramsDto.bizScope" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectPage" parameterType="com.cjyc.common.model.dto.customer.order.OrderQueryDto"
            resultMap="VinResultMap">
        select
            o.id as id,
            o.no as no,
            o.state as state,
            o.start_city as startCity,
            o.end_city as endCity,
            o.total_fee as totalFee,
            o.car_num as carNum,
            o.line_id as lineId,
            #{model} as model
        from
            w_order o
        <where>
            customer_id = #{loginId}
            /*待确认*/
            <if test="state != null and state == 0">
                and o.state between ${@com.cjyc.common.model.enums.order.OrderStateEnum@WAIT_SUBMIT.code}
                and ${@com.cjyc.common.model.enums.order.OrderStateEnum@CHECKED.code}
            </if>
            /*运输中*/
            <if test="state != null and state == 1">
                and o.state > ${@com.cjyc.common.model.enums.order.OrderStateEnum@CHECKED.code}
                and o.state &lt; ${@com.cjyc.common.model.enums.order.OrderStateEnum@FINISHED.code}
            </if>
            /*已交付*/
            <if test="state != null and state == 2">
                and o.state = ${@com.cjyc.common.model.enums.order.OrderStateEnum@FINISHED.code}
            </if>
            <if test="startCityCode != null and startCityCode.trim() != ''">
                and o.start_city_code = #{startCityCode}
            </if>
            <if test="endCityCode != null and endCityCode.trim() != ''">
                and o.end_city_code = #{endCityCode}
            </if>
            <if test="startDate != null and startDate != 0">
                and o.create_time &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != 0">
                and o.create_time &lt;= #{endDate}
            </if>
            <if test="orderNo != null and orderNo.trim() != ''">
                and o.no like concat('%',#{orderNo},'%')
            </if>
        </where>
        order by o.create_time desc
    </select>
    <select id="findByCarId" resultType="com.cjyc.common.model.entity.Order">
        select o.*
        from w_order_car oc
        join w_order o on oc.order_id = o.id
        where oc.id = #{orderCarId}
    </select>
    <select id="countUnReceipt" resultType="java.lang.Integer">
        select count(0)
        from w_order_car oc
        where order_id = #{orderId}
        and state &lt; 100
    </select>
    <select id="findListByCarIds" resultType="com.cjyc.common.model.entity.Order">
        select o.* from w_order o
        join w_order_car oc on oc.order_id = o.id
        where oc.id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        group by o.id
    </select>
    <select id="findListByCarNos" resultType="com.cjyc.common.model.entity.Order">
        select o.* from w_order o
        join w_order_car oc on oc.order_id = o.id
        where oc.no in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        group by o.id
    </select>

    <select id="findOrder" resultType="com.cjyc.common.model.vo.salesman.order.SalesOrderVo"
                parameterType="com.cjyc.common.model.dto.salesman.order.SalesOrderQueryDto">
        SELECT
            wo.id AS orderId,
            wo.no AS orderNo,
            wo.pay_type AS payType,
            wo.start_city AS startCity,
            wo.end_city AS endCity,
            wo.state AS state,
            wo.total_fee AS totalFee,
            wo.allot_to_user_name as allotToUserName,
            wo.expect_start_date AS expectStartDate,
            wo.customer_type AS customerType,
            wo.car_num AS carNum
        FROM
            w_order wo
        <where>
            <if test="flag != null and flag == 0">
                wo.state = 0
            </if>
            <if test="flag != null and flag == 1">
                 and wo.state between 2 and 15
            </if>
            <if test="flag != null and flag == 2">
                 and wo.state >= 15
            </if>
            <if test="orderNo != null and orderNo.trim() != ''">
                and wo.no like concat('%',#{orderNo},'%')
            </if>
            <if test="customerType != null">
                and wo.customer_type = #{customerType}
            </if>
            <if test="startCity != null and startCity.trim() != ''">
                and wo.start_city = #{startCity}
            </if>
            <if test="endCity != null and endCity.trim() != ''">
                and wo.end_city = #{endCity}
            </if>
            <if test="expectStartTime != null and expectStartTime != 0">
                and wo.expect_start_date &gt;= #{expectStartTime}
            </if>
            <if test="expectEndTime != null and expectEndTime != 0">
                and wo.expect_start_date &lt; #{expectEndTime}
            </if>
            <if test="createStartTime != null and createStartTime != 0">
                and wo.create_time &gt;= #{createStartTime}
            </if>
            <if test="createEndTime != null and createEndTime != 0">
                and wo.create_time &lt; #{createEndTime}
            </if>
            <if test="storeIds != null and storeIds.trim() != ''">
                and wo.input_store_id in ( #{storeIds} )
            </if>
            order by wo.create_time desc,wo.check_time desc
        </where>
    </select>

    <!--获取一天的所有订单-->
    <select id="findDayOrder" resultType="com.cjyc.common.model.entity.Order">
        select
        <include refid="Base_Column_List"/>
          from w_order
        where create_time between #{beforeStartDay} and #{beforeEndDay}
    </select>
</mapper>
