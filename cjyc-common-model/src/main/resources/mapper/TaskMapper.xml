<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.ITaskDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.Task">
        <id column="id" property="id" />
        <result column="no" property="no" />
        <result column="waybill_id" property="waybillId" />
        <result column="waybill_no" property="waybillNo" />
        <result column="guide_line" property="guideLine" />
        <result column="car_num" property="carNum" />
        <result column="state" property="state" />
        <result column="driver_name" property="driverName" />
        <result column="driver_phone" property="driverPhone" />
        <result column="driver_id" property="driverId" />
        <result column="load_car_num" property="loadCarNum" />
        <result column="unload_car_num" property="unloadCarNum" />
        <result column="vehicle_running_id" property="vehicleRunningId" />
        <result column="vehicle_plate_no" property="vehiclePlateNo" />
        <result column="remark" property="remark" />
        <result column="create_user" property="createUser" />
        <result column="create_user_id" property="createUserId" />
        <result column="create_time" property="createTime" />
        <result column="complete_time" property="completeTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, no, waybill_id, waybill_no, guide_line, car_num, state, driver_name, driver_phone, driver_id, load_car_num, unload_car_num, vehicle_running_id, vehicle_plate_no, remark, create_user, create_user_id, create_time, complete_time
    </sql>
    <update id="updateListByWaybillIds">
        update w_task
        set state = #{newState}
        <where>
            and waybill_id in
            <foreach collection="cancelWaybillIdList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <update id="updateUnloadNum">
        update w_task set unload_car_num = unload_car_num + #{count}
        where id = #{taskId}
    </update>
    <update id="updateStateById">
        update w_task
        set state = #{state}
        where id = #{taskId}
        and state &lt; 100
    </update>
    <update id="updateForLoad">
        update w_task
        set state = 55
        where id = #{id}
        and state &lt; 55
    </update>
    <update id="updateForFinish">
        update w_task
        set state = 100,
        complete_time = UNIX_TIMESTAMP(NOW()) * 1000
        where id = #{id}
        and state &lt; 100
    </update>
    <update id="updateNum">
        update w_task
        set car_num = (
            select count(0)
            from w_task_car tc
            join w_waybill_car wc on tc.waybill_car_id = wc.id
            where tc.task_id = #{taskId}
            and wc.state &lt;= 100
        )
        where id = #{taskId}
    </update>
    <update id="updateLoadNum">
        update w_task set load_car_num = load_car_num + #{count}
        where id = #{taskId}
    </update>
    <delete id="cancelBywaybillId">
        update w_task
        set state = 113
        where waybill_id = #{waybillId}
        and state &lt;= 100
    </delete>
    <delete id="deleteByWaybillId">
        delete t,tc
        from w_task t
        left join w_task_car tc on tc.task_id = t.id
        where t.waybill_id = #{waybillId}
    </delete>
    <delete id="deleteByWaybillCarId">
        delete from w_task_car
        where waybill_car_id = #{waybillCarId}
    </delete>
    <select id="findListByWaybillId" resultType="com.cjyc.common.model.vo.web.task.ListByWaybillTaskVo">
        select
        t.*,
        vr.carry_car_num,
        vr.occupied_car_num
        from w_task t
        left join d_vehicle_running vr on vr.id = t.vehicle_running_id
        where t.waybill_id = #{waybillId}
    </select>
    <select id="findVoById" resultType="com.cjyc.common.model.vo.web.task.TaskVo">
        select
        <include refid="Base_Column_List"/>
        from w_task
        where id = #{taskId}
    </select>
    <select id="findTopByWaybillId" resultType="com.cjyc.common.model.entity.Task">
        select
        t.*,
        vr.carry_car_num,
        vr.occupied_car_num
        from w_task t
        left join d_vehicle_running vr on vr.id = t.vehicle_running_id
        where t.waybill_id = #{waybillId}
        limit 1
    </select>
    <select id="findMaxNo" resultType="java.lang.String">
        select max(no) from w_task where waybill_no = #{waybillNo}
    </select>

    <!--司机端：查询提车，交车任务列表-->
    <select id="selectNoFinishTaskPage" parameterType="com.cjyc.common.model.dto.driver.task.NoFinishTaskQueryDto"
            resultType="com.cjyc.common.model.vo.driver.task.TaskBillVo">
        SELECT
            t.id AS taskId,
            t.taskCarId,
            t.waybill_id AS waybillId,
            t.no AS waybillNo,
            t.guide_line AS guideLine,
            t.car_num AS carNum,
            t.create_time AS createTime,
            w.type AS type,
            car.start_city as startCity,
            car.end_city as endCity,
            car.expect_start_time AS expectStartTime,
            sum(car.freight_fee) AS freightFee
        FROM
            ( SELECT task.id, task.waybill_id, task.no, task.guide_line, task.car_num,
                task.state,task.create_time,tc.id as taskCarId,tc.waybill_car_id
            FROM
                w_task task
                LEFT JOIN w_task_car tc ON task.id = tc.task_id
            where
                task.driver_id = #{loginId}
                AND task.state &lt; ${@com.cjyc.common.model.enums.task.TaskStateEnum@FINISHED.code}
            ) t
            LEFT JOIN w_waybill w ON t.waybill_id = w.id
            LEFT JOIN w_waybill_car car ON t.waybill_car_id = car.id
            <where>
                /*待提车*/
                <if test="taskState != null and taskState == @com.cjyc.common.model.constant.FieldConstant@PICK_CAR_TASK">
                    car.state in(${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_LOAD.code}
                    ,${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_LOAD_CONFIRM.code})
                </if>
                /*待交车*/
                <if test="taskState != null and taskState == @com.cjyc.common.model.constant.FieldConstant@GIVE_CAR_TASK">
                    car.state in(${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@LOADED.code}
                    ,${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_UNLOAD_CONFIRM.code})
                </if>
            </where>
        GROUP BY t.id
        order by t.create_time desc
    </select>

    <!--查询已交付任务列表-->
    <select id="selectFinishTaskPage" parameterType="com.cjyc.common.model.dto.driver.task.TaskQueryDto"
            resultType="com.cjyc.common.model.vo.driver.task.TaskBillVo">
        select
            t.id as taskId,
            t.waybill_id as waybillId,
            t.no as waybillNo,
            t.guide_line as guideLine,
            t.car_num as carNum,
            t.complete_time as completeTime,
            w.type as type,
            car.start_city as startCity,
            car.end_city as endCity,
            sum(car.freight_fee) as freightFee
        from
            (select task.id, task.waybill_id, task.no, task.guide_line, task.car_num,task.state,task.complete_time,tc.waybill_car_id
            from w_task task
            left join w_task_car tc on task.id = tc.task_id
            where task.driver_id = #{loginId} and task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@FINISHED.code}
            ) t
            left join w_waybill w on t.waybill_id = w.id
            left join w_waybill_car car on t.waybill_car_id = car.id
        <where>
            car.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@UNLOADED.code}
            <if test="waybillNo != null and waybillNo.trim() != ''">
                and t.no like concat('%',#{waybillNo},'%')
            </if>
            <if test="type != null and type != 0">
                and w.type = #{type}
            </if>
            <if test="expectStartDateS != null and expectStartDateS != 0">
                and car.expect_start_date >= #{expectStartDateS}
            </if>
            <if test="expectStartDateE != null and expectStartDateE != 0">
                and car.expect_start_date &lt;= #{expectStartDateE}
            </if>
            <if test="completeTimeS != null and completeTimeS != 0">
                and t.complete_time >= #{completeTimeS}
            </if>
            <if test="completeTimeE != null and completeTimeE != 0">
                and t.complete_time &lt;= #{completeTimeE}
            </if>
            <if test="lineStart != null and lineStart.trim() != ''">
                and t.guide_line like concat('%',#{lineStart},'%')
            </if>
            <if test="(lineStart != null and lineStart.trim() != '') and (lineEnd != null and lineEnd.trim() != '')">
                and t.guide_line like concat('%',#{lineEnd},'%')
            </if>
            <if test="(lineStart == null or lineStart.trim() == '') and (lineEnd != null and lineEnd.trim() != '')">
                and t.guide_line like concat('%-',#{lineEnd},'%')
            </if>
        </where>
        group by t.id
        order by t.complete_time desc
    </select>

    <!--查询历史任务记录列表-->
    <select id="selectHistoryTaskPage" parameterType="com.cjyc.common.model.dto.driver.task.TaskQueryDto"
            resultType="com.cjyc.common.model.vo.driver.task.TaskBillVo">
        select
            t.id as taskId,
            t.waybill_id as waybillId,
            t.state as taskState,
            t.no as waybillNo,
            t.guide_line as guideLine,
            t.car_num as carNum,
            t.create_time as createTime,
            t.driver_name as driverName,
            t.driver_phone as driverPhone,
            t.vehicle_plate_no as vehiclePlateNo,
            w.type as type,
            car.start_city as startCity,
            car.end_city as endCity,
            sum(car.freight_fee) as freightFee
        from
            (select task.id, task.waybill_id, task.no, task.guide_line, task.car_num,
            task.state,task.complete_time,task.create_time,task.driver_name,task.driver_phone,
            task.vehicle_plate_no,tc.waybill_car_id
            from w_task task
            left join w_task_car tc on task.id = tc.task_id
            where task.create_user_id = #{loginId}
            ) t
            left join w_waybill w on t.waybill_id = w.id
            left join w_waybill_car car on t.waybill_car_id = car.id
        <where>
            <if test="waybillNo != null and waybillNo.trim() != ''">
                and t.no like concat('%',#{waybillNo},'%')
            </if>
            <if test="type != null and type != 0">
                and w.type = #{type}
            </if>
            <if test="expectStartDateS != null and expectStartDateS != 0">
                and car.expect_start_date >= #{expectStartDateS}
            </if>
            <if test="expectStartDateE != null and expectStartDateE != 0">
                and car.expect_start_date &lt;= #{expectStartDateE}
            </if>
            <if test="completeTimeS != null and completeTimeS != 0">
                and t.complete_time >= #{completeTimeS}
            </if>
            <if test="completeTimeE != null and completeTimeE != 0">
                and t.complete_time &lt;= #{completeTimeE}
            </if>
            <if test="lineStart != null and lineStart.trim() != ''">
                and t.guide_line like concat('%',#{lineStart},'%')
            </if>
            <if test="(lineStart != null and lineStart.trim() != '') and (lineEnd != null and lineEnd.trim() != '')">
                and t.guide_line like concat('%',#{lineEnd},'%')
            </if>
            <if test="(lineStart == null or lineStart.trim() == '') and (lineEnd != null and lineEnd.trim() != '')">
                and t.guide_line like concat('%-',#{lineEnd},'%')
            </if>
        </where>
        group by t.id
        order by t.create_time desc
    </select>
    <sql id="task_inner_state">
        (case t.state
        when 0 then '待运输'
        when 5 then '待运输'
        when 55 then '运输中'
        when 100 then '已完成'
        when 113 then '已取消'
        end ) as outterState
    </sql>
    <select id="findListForMineCarrier" resultType="com.cjyc.common.model.vo.web.task.CrTaskVo">
        select
        <include refid="task_inner_state"/>,
        w.carrier_name as carrierName,
        w.car_num as waybillCarNum,
        w.type as waybillType,
        vr.occupied_car_num as occupiedCarNum,
        vr.carry_car_num as carryCarNum,
        t.*
        from w_waybill w
        JOIN w_task t on w.id = t.waybill_id
        left join d_vehicle_running vr on vr.id = t.vehicle_running_id
        <where>
            w.carrier_id = #{paramsDto.carrierId}
            <if test="paramsDto.waybillNo != null and paramsDto.waybillNo != ''">
                and w.no = #{paramsDto.waybillNo}
            </if>
            <if test="paramsDto.taskNo != null and paramsDto.taskNo != ''">
                and t.no = #{paramsDto.taskNo}
            </if>
            <if test="paramsDto.driverName != null and paramsDto.driverName != ''">
                and t.driver_name  = #{paramsDto.driverName}
            </if>
            <if test="paramsDto.driverPhone != null and paramsDto.driverPhone != ''">
                and t.driver_phone  = #{paramsDto.driverPhone}
            </if>
            <if test="paramsDto.vehiclePlateNo != null and paramsDto.vehiclePlateNo != ''">
                and t.vehicle_plate_no  = #{paramsDto.vehiclePlateNo}
            </if>
        </where>
        order by t.id desc
    </select>
    <select id="countByTaskIdAndWaybillCarId" resultType="java.lang.Integer">
        select count(0)
        from w_task_car
        where task_id = #{taskId}
        and waybill_car_id = #{waybillCarId}
    </select>
    <select id="findByWaybillCarId" resultType="com.cjyc.common.model.entity.Task">
        select t.*
        from w_task t
        join w_task_car tc on tc.task_id = t.id
        where tc.waybill_car_id = #{waybillCarId}
        and t.state &lt;= 100
    </select>
    <select id="findListByWaybillCarIds" resultType="com.cjyc.common.model.entity.Task">
        select t.*
        from w_task t
        join w_task_car tc on tc.task_id = t.id
        where t.state &lt;= 100
        and tc.waybill_car_id in
        <foreach collection="collection" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--业务员端：查询待提车，待交车列表-->
    <select id="selectCarryList" parameterType="com.cjyc.common.model.dto.salesman.task.TaskWaybillQueryDto"
            resultType="com.cjyc.common.model.vo.salesman.task.TaskWaybillVo">
        SELECT
            t.id AS taskId,
            t.task_car_id AS taskCarId,
            t.waybill_id AS waybillId,
            t.no AS waybillNo,
            t.guide_line AS guideLine,
            t.car_num AS carNum,
            t.create_time AS createTime,
            t.complete_time AS completeTime,
            t.state AS taskState,
            w.type AS type,
            sum(car.freight_fee) AS freightFee
        FROM
            ( SELECT task.id, task.waybill_id, task.no, task.guide_line,
            task.car_num,task.state,task.create_time,task.complete_time,tc.id as task_car_id,tc.waybill_car_id
            FROM w_task task
            LEFT JOIN w_task_car tc ON task.id = tc.task_id
            <where>
                task.driver_id = #{loginId}
                <if test="creatTime != null and creatTime != 0">
                    AND task.create_time = #{creatTime}
                </if>
                <if test="waybillNo != null and waybillNo.trim() != ''">
                    AND task.no like concat('%',#{waybillNo},'%')
                </if>
                <if test="taskState != null and taskState == @com.cjyc.common.model.constant.FieldConstant@WAIT_PICK_CAR">
                    AND task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@WAIT_LOAD.code}
                </if>
                <if test="taskState != null and taskState == @com.cjyc.common.model.constant.FieldConstant@WAIT_GIVE_CAR">
                    AND task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@TRANSPORTING.code}
                </if>
                <if test="taskState != null and taskState == @com.cjyc.common.model.constant.FieldConstant@ALL_TASK">
                    AND (task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@WAIT_LOAD.code}
                    OR task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@TRANSPORTING.code})
                </if>
                <if test="taskState != null and taskState == @com.cjyc.common.model.constant.FieldConstant@FINISH">
                    AND task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@FINISHED.code}
                </if>
                <if test="startAddress != null and startAddress.trim() != ''">
                    and task.guide_line like concat('%',#{startAddress},'%')
                </if>
                <if test="(startAddress != null and startAddress.trim() != '') and (endAddress != null and endAddress.trim() != '')">
                    and task.guide_line like concat('%',#{endAddress},'%')
                </if>
                <if test="(startAddress == null or startAddress.trim() == '') and (endAddress != null and endAddress.trim() != '')">
                    and task.guide_line like concat('%-',#{endAddress},'%')
                </if>
                <if test="completeTimeS != null and completeTimeS != 0">
                    and task.complete_time >= #{completeTimeS}
                </if>
                <if test="completeTimeE != null and completeTimeE != 0">
                    and task.complete_time &lt;= #{completeTimeE}
                </if>
            </where>
        ) t
        LEFT JOIN w_waybill w ON t.waybill_id = w.id
        LEFT JOIN w_waybill_car car ON t.waybill_car_id = car.id
        GROUP BY t.id
    </select>

    <select id="findListStockTask" resultType="com.cjyc.common.model.vo.salesman.mine.StockTaskVo"
                parameterType="com.cjyc.common.model.dto.salesman.BaseSalesDto">
        SELECT
            wt.NO AS taskNo,
            ww.type AS type,
            wwc.start_city AS startCity,
            wwc.end_city AS endCity,
            ww.carrier_name AS carrierName,
            wt.driver_name AS driverName,
            wt.driver_phone AS driverPhone,
            wt.vehicle_plate_no AS vehiclePlateNo,
            wwc.load_link_name AS loadLinkName,
            wwc.load_link_phone AS loadLinkPhone,
            wwc.start_address AS startAddress,
            wwc.unload_link_name AS unloadLinkName,
            wwc.unload_link_phone AS unloadLinkPhone,
            wwc.end_address AS endAddress
      FROM
	    w_task wt
    LEFT JOIN w_task_car wtc ON wt.id = wtc.task_id
    LEFT JOIN w_waybill_car wwc ON wtc.waybill_car_id = wwc.id
    LEFT JOIN w_waybill ww ON wwc.waybill_id = ww.id
    WHERE wwc.order_car_id = #{orderCarId}
    GROUP BY wt.no
    </select>

    <!--业务员端：查询出入库,出入库历史记录列表-->
    <select id="selectOutAndInStorageList" parameterType="com.cjyc.common.model.dto.salesman.task.OutAndInStorageQueryDto"
            resultType="com.cjyc.common.model.vo.salesman.task.TaskWaybillVo">
        SELECT
            t.id AS taskId,
            t.task_car_id AS taskCarId,
            t.waybill_id AS waybillId,
            t.no AS waybillNo,
            t.guide_line AS guideLine,
            t.car_num AS carNum,
            t.create_time AS createTime,
            t.complete_time AS completeTime,
            t.state AS taskState,
            w.type AS type,
            car.unload_time AS unloadTime,
            car.load_time AS loadTime,
            sum(car.freight_fee) AS freightFee
        FROM
            ( SELECT
                task.id, task.waybill_id, task.no, task.guide_line,
                task.car_num,task.state,task.create_time,task.complete_time,tc.id as task_car_id,tc.waybill_car_id
            FROM w_task task
                LEFT JOIN w_task_car tc ON task.id = tc.task_id
                <where>
                    <if test="creatTime != null and creatTime != 0">
                        AND task.create_time = #{creatTime}
                    </if>
                    <if test="waybillNo != null and waybillNo.trim() != ''">
                        AND task.no like concat('%',#{waybillNo},'%')
                    </if>
                    <if test="startAddress != null and startAddress.trim() != ''">
                        and task.guide_line like concat('%',#{startAddress},'%')
                    </if>
                    <if test="(startAddress != null and startAddress.trim() != '') and (endAddress != null and endAddress.trim() != '')">
                        and task.guide_line like concat('%',#{endAddress},'%')
                    </if>
                    <if test="(startAddress == null or startAddress.trim() == '') and (endAddress != null and endAddress.trim() != '')">
                        and task.guide_line like concat('%-',#{endAddress},'%')
                    </if>
                </where>
                ) t
            LEFT JOIN w_waybill w ON t.waybill_id = w.id
            LEFT JOIN w_waybill_car car ON t.waybill_car_id = car.id
        <where>
            /*库存状态：0全部*/
            1=1
            <if test="storeId != null and storeId != '' and storageState == @com.cjyc.common.model.constant.FieldConstant@ALL_TASK">
                AND (
                (car.start_belong_store_id in(#{storeId})
                and car.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_LOAD_CONFIRM.code})
                or (car.end_belong_store_id in(#{storeId})
                and car.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_UNLOAD_CONFIRM.code})
                )
            </if>
            /*库存状态：1待入库*/
            <if test="storeId != null and storeId != '' and storageState == @com.cjyc.common.model.constant.FieldConstant@WAIT_PICK_CAR">
                AND car.end_belong_store_id in(#{storeId})
                and car.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_UNLOAD_CONFIRM.code}
            </if>
            /*库存状态：2待出库*/
            <if test="storeId != null and storeId != '' and storageState == @com.cjyc.common.model.constant.FieldConstant@WAIT_GIVE_CAR">
                AND car.start_belong_store_id in(#{storeId})
                and car.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_LOAD_CONFIRM.code}
            </if>
            /*库存状态：3已入库，已出库*/
            <if test="storeId != null and storeId != '' and storageState == @com.cjyc.common.model.constant.FieldConstant@FINISH">
                AND (
                (car.start_belong_store_id in(#{storeId})
                and car.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@LOADED.code})
                or (car.end_belong_store_id in(#{storeId})
                and car.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@UNLOADED.code})
                )
            </if>
            <if test="inStorageTimeS != null and inStorageTimeS != 0">
                and car.unload_time >= #{inStorageTimeS}
            </if>
            <if test="inStorageTimeE != null and inStorageTimeE != 0">
                and car.unload_time &lt;= #{inStorageTimeE}
            </if>
            <if test="outStorageTimeS != null and outStorageTimeS != 0">
                and car.load_time >= #{outStorageTimeS}
            </if>
            <if test="outStorageTimeE != null and outStorageTimeE != 0">
                and car.load_time &lt;= #{outStorageTimeE}
            </if>
        </where>
        GROUP BY t.id
    </select>

    <!--司机完成运车统计-->
    <select id="findDriverCarCount" resultType="com.cjyc.common.model.vo.web.task.DriverCarCountVo">
          SELECT
            wt.id,
            wt.driver_id,
            wwc.order_car_id
        FROM
            w_task wt
            LEFT JOIN w_task_car wtc ON wtc.task_id = wt.id
            LEFT JOIN w_waybill_car wwc ON wwc.id = wtc.waybill_car_id
            LEFT JOIN w_waybill ww ON ww.id = wwc.waybill_id
        WHERE
            wt.state = 100
            AND ( wt.create_time BETWEEN #{beforeStartDay} AND #{beforeEndDay} )
            AND ww.carrier_type IN ( 1, 2, 4, 5 )
    </select>

    <!--web端：查询我的任务列表-->
    <select id="selectMyTaskList" parameterType="com.cjyc.common.model.dto.web.task.TaskPageDto"
            resultType="com.cjyc.common.model.vo.web.task.TaskPageVo">
        select
            t1.taskId,
            t1.taskCarId,
            t1.waybillCarState,
            t1.taskNo as taskNo,
            w.type,
            w.carrier_type as carrierType,
            oc.order_no as orderNo,
            oc.no as orderCarNo,
            oc.vin as vin,
            t1.waybillCarId
        from
        (SELECT
            t.id as taskId,
            t.taskNo,
            t.task_car_id AS taskCarId,
            wc.state as waybillCarState,
            wc.order_car_id as orderCarId,
            wc.waybill_id as waybillId,
            wc.id as waybillCarId
        FROM
        ( SELECT task.id,task.no as taskNo,tc.id as task_car_id,tc.waybill_car_id
        FROM w_task task
        LEFT JOIN w_task_car tc ON task.id = tc.task_id
            <where>
                <if test="taskNo != null and taskNo.trim() != ''">
                    AND task.no like concat('%',#{taskNo},'%')
                </if>
            </where>
        ) t
        LEFT JOIN w_waybill_car wc ON t.waybill_car_id = wc.id
        <where>
            <choose>
                <when test="storeId != null and storageState == 1">
                    wc.end_belong_store_id = #{storeId}
                    and wc.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_UNLOAD_CONFIRM.code}
                </when>
                <when test="storeId != null and storageState == 2">
                    wc.start_belong_store_id = #{storeId}
                    and wc.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_LOAD_CONFIRM.code}
                </when>
                <otherwise>
                    ((wc.start_belong_store_id = #{storeId} and wc.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_LOAD_CONFIRM.code})
                    or
                    (wc.end_belong_store_id = #{storeId} and wc.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_UNLOAD_CONFIRM.code}))
                </otherwise>
            </choose>
        </where>) t1
        left join w_waybill w on t1.waybillId=w.id
        left join w_order_car oc on t1.orderCarId=oc.id
        <where>
            <if test="orderNo != null and orderNo.trim() != ''">
                AND oc.order_no like concat('%',#{orderNo},'%')
            </if>
            <if test="orderCarNo != null and orderCarNo.trim() != ''">
                AND oc.no like concat('%',#{orderCarNo},'%')
            </if>
            <if test="vin != null and vin.trim() != ''">
                AND oc.vin like concat('%',#{vin},'%')
            </if>
        </where>
        GROUP BY t1.waybillCarId
    </select>

</mapper>
