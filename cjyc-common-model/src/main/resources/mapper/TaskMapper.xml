<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.ITaskDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.Task">
        <id column="id" property="id" />
        <result column="no" property="no" />
        <result column="waybill_id" property="waybillId" />
        <result column="waybill_no" property="waybillNo" />
        <result column="guide_line" property="guideLine" />
        <result column="car_num" property="carNum" />
        <result column="state" property="state" />
        <result column="driver_name" property="driverName" />
        <result column="driver_phone" property="driverPhone" />
        <result column="driver_id" property="driverId" />
        <result column="load_car_num" property="loadCarNum" />
        <result column="unload_car_num" property="unloadCarNum" />
        <result column="vehicle_running_id" property="vehicleRunningId" />
        <result column="vehicle_plate_no" property="vehiclePlateNo" />
        <result column="remark" property="remark" />
        <result column="create_user" property="createUser" />
        <result column="create_user_id" property="createUserId" />
        <result column="create_time" property="createTime" />
        <result column="complete_time" property="completeTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, no, waybill_id, waybill_no, guide_line, car_num, state, driver_name, driver_phone, driver_id, load_car_num, unload_car_num, vehicle_running_id, vehicle_plate_no, remark, create_user, create_user_id, create_time, complete_time
    </sql>
    <update id="updateListByWaybillIds">
        update w_task
        set state = #{newState}
        <where>
            and waybill_id in
            <foreach collection="cancelWaybillIdList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <delete id="cancelBywaybillId">
        update w_task
        set state = #{newState}
        <where>
            <choose>
                <when test="waybillId != null">
                    waybill_id = #{waybillId}
                </when>
                <otherwise>
                    1 != 1
                </otherwise>
            </choose>
        </where>
    </delete>
    <delete id="deleteByWaybillId">
        delete t,tc
        from w_task t
        left join w_task_car tc on tc.task_id = t.id
        where t.waybill_id = #{waybillId}
    </delete>
    <delete id="deleteByWaybillCarId">
        delete from w_task_car
        where waybill_car_id = #{waybillCarId}
    </delete>
    <select id="findListByWaybillId" resultType="com.cjyc.common.model.vo.web.task.ListByWaybillTaskVo">
        select
        t.*,
        vr.carry_car_num,
        vr.occupied_car_num
        from w_task t
        left join d_vehicle_running vr on vr.id = t.vehicle_running_id
        where t.waybill_id = #{waybillId}
    </select>
    <select id="findVoById" resultType="com.cjyc.common.model.vo.web.task.TaskVo">
        select
        <include refid="Base_Column_List"/>
        from w_task
        where id = #{taskId}
    </select>
    <select id="findTopByWaybillId" resultType="com.cjyc.common.model.entity.Task">
        select
        t.*,
        vr.carry_car_num,
        vr.occupied_car_num
        from w_task t
        left join d_vehicle_running vr on vr.id = t.vehicle_running_id
        where t.waybill_id = #{waybillId}
        limit 1
    </select>
    <select id="findMaxNo" resultType="java.lang.String">
        select max(no) from w_task where waybill_no = #{waybillNo}
    </select>

    <!--查询提车，交车任务列表-->
    <select id="selectNoFinishTaskPage" parameterType="com.cjyc.common.model.dto.driver.task.NoFinishTaskQueryDto"
            resultType="com.cjyc.common.model.vo.driver.task.WaybillTaskVo">
        SELECT
            t.id AS taskId,
            t.waybill_id AS waybillId,
            t.waybill_no AS waybillNo,
            t.guide_line AS guideLine,
            t.car_num AS carNum,
            w.type AS type,
            car.expect_start_time AS expectStartTime,
            sum(car.freight_fee) AS freightFee
        FROM
            ( SELECT task.id, task.waybill_id, task.waybill_no, task.guide_line, task.car_num,task.state,tc.waybill_car_id
            FROM w_task task
            LEFT JOIN w_task_car tc ON task.id = tc.task_id
            <where>
                task.driver_id = #{loginId}
                <if test="taskState != null and taskState == @com.cjyc.common.model.constant.FieldConstant@PICK_CAR_TASK">
                    AND task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@WAIT_LOAD.code}
                </if>
                <if test="taskState != null and taskState == @com.cjyc.common.model.constant.FieldConstant@GIVE_CAR_TASK">
                    AND task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@TRANSPORTING.code}
                </if>
            </where>
            ) t
            LEFT JOIN w_waybill w ON t.waybill_id = w.id
            LEFT JOIN w_waybill_car car ON t.waybill_car_id = car.id
        GROUP BY t.id
    </select>

    <!--查询已交付任务列表-->
    <select id="selectFinishTaskPage" parameterType="com.cjyc.common.model.dto.driver.task.TaskQueryDto"
            resultType="com.cjyc.common.model.vo.driver.task.WaybillTaskVo">
        select
            t.id as taskId,
            t.waybill_id as waybillId,
            t.waybill_no as waybillNo,
            t.guide_line as guideLine,
            t.car_num as carNum,
            t.complete_time as completeTime,
            w.type as type,
            sum(car.freight_fee) as freightFee
        from
            (select task.id, task.waybill_id, task.waybill_no, task.guide_line, task.car_num,task.state,task.complete_time,tc.waybill_car_id
            from w_task task
            left join w_task_car tc on task.id = tc.task_id
            where task.driver_id = #{loginId} and task.state = ${@com.cjyc.common.model.enums.task.TaskStateEnum@FINISHED.code}
            ) t
            left join w_waybill w on t.waybill_id = w.id
            left join w_waybill_car car on t.waybill_car_id = car.id
        <where>
            <if test="waybillNo != null and waybillNo.trim() != ''">
                and t.waybill_no like concat('%',#{waybillNo},'%')
            </if>
            <if test="type != null and type != 0">
                and w.type = #{type}
            </if>
            <if test="expectStartDateS != null and expectStartDateS != 0">
                and car.expect_start_date >= #{expectStartDateS}
            </if>
            <if test="expectStartDateE != null and expectStartDateE != 0">
                and car.expect_start_date &lt;= #{expectStartDateE}
            </if>
            <if test="completeTimeS != null and completeTimeS != 0">
                and t.complete_time >= #{completeTimeS}
            </if>
            <if test="completeTimeE != null and completeTimeE != 0">
                and t.complete_time &lt;= #{completeTimeE}
            </if>
            <if test="lineStart != null and lineStart.trim() != ''">
                and t.guide_line like concat('%',#{lineStart},'%')
            </if>
            <if test="(lineStart != null and lineStart.trim() != '') and (lineEnd != null and lineEnd.trim() != '')">
                and t.guide_line like concat('%',#{lineEnd},'%')
            </if>
            <if test="(lineStart == null or lineStart.trim() == '') and (lineEnd != null and lineEnd.trim() != '')">
                and t.guide_line like concat('%-',#{lineEnd},'%')
            </if>
        </where>
        group by t.id
        order by t.complete_time desc
    </select>

    <!--查询历史任务记录列表-->
    <select id="selectHistoryTaskPage" parameterType="com.cjyc.common.model.dto.driver.task.TaskQueryDto"
            resultType="com.cjyc.common.model.vo.driver.task.WaybillTaskVo">
        select
            t.id as taskId,
            t.waybill_id as waybillId,
            t.waybill_no as waybillNo,
            t.guide_line as guideLine,
            t.car_num as carNum,
            t.complete_time as completeTime,
            t.driver_name as driverName,
            t.driver_phone as driverPhone,
            t.vehicle_plate_no as vehiclePlateNo,
            w.type as type,
            car.expect_start_time as expectStartTime,
            sum(car.freight_fee) as freightFee
        from
            (select task.id, task.waybill_id, task.waybill_no, task.guide_line, task.car_num,
            task.state,task.complete_time,task.driver_name,task.driver_phone,task.vehicle_plate_no,tc.waybill_car_id
            from w_task task
            left join w_task_car tc on task.id = tc.task_id
            where task.create_user_id = #{loginId}
            ) t
            left join w_waybill w on t.waybill_id = w.id
            left join w_waybill_car car on t.waybill_car_id = car.id
        <where>
            <if test="waybillNo != null and waybillNo.trim() != ''">
                and t.waybill_no like concat('%',#{waybillNo},'%')
            </if>
            <if test="type != null and type != 0">
                and w.type = #{type}
            </if>
            <if test="expectStartDateS != null and expectStartDateS != 0">
                and car.expect_start_date >= #{expectStartDateS}
            </if>
            <if test="expectStartDateE != null and expectStartDateE != 0">
                and car.expect_start_date &lt;= #{expectStartDateE}
            </if>
            <if test="completeTimeS != null and completeTimeS != 0">
                and t.complete_time >= #{completeTimeS}
            </if>
            <if test="completeTimeE != null and completeTimeE != 0">
                and t.complete_time &lt;= #{completeTimeE}
            </if>
            <if test="lineStart != null and lineStart.trim() != ''">
                and t.guide_line like concat('%',#{lineStart},'%')
            </if>
            <if test="(lineStart != null and lineStart.trim() != '') and (lineEnd != null and lineEnd.trim() != '')">
                and t.guide_line like concat('%',#{lineEnd},'%')
            </if>
            <if test="(lineStart == null or lineStart.trim() == '') and (lineEnd != null and lineEnd.trim() != '')">
                and t.guide_line like concat('%-',#{lineEnd},'%')
            </if>
        </where>
        group by t.id
        order by t.complete_time desc
    </select>

</mapper>
