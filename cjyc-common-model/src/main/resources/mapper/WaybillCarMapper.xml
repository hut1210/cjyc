<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.IWaybillCarDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.WaybillCar">
        <id column="id" property="id"/>
        <result column="waybill_id" property="waybillId"/>
        <result column="waybill_no" property="waybillNo"/>
        <result column="order_car_id" property="orderCarId"/>
        <result column="order_car_no" property="orderCarNo"/>
        <result column="freight_fee" property="freightFee"/>
        <result column="start_province" property="startProvinselectWaybillCarce"/>
        <result column="start_province_code" property="startProvinceCode"/>
        <result column="start_city" property="startCity"/>
        <result column="start_city_code" property="startCityCode"/>
        <result column="start_area" property="startArea"/>
        <result column="start_area_code" property="startAreaCode"/>
        <result column="start_address" property="startAddress"/>
        <result column="start_store_name" property="startStoreName"/>
        <result column="start_store_id" property="startStoreId"/>
        <result column="start_belong_store_id" property="startBelongStoreId"/>
        <result column="end_province" property="endProvince"/>
        <result column="end_province_code" property="endProvinceCode"/>
        <result column="end_city" property="endCity"/>
        <result column="end_city_code" property="endCityCode"/>
        <result column="end_area" property="endArea"/>
        <result column="end_area_code" property="endAreaCode"/>
        <result column="end_address" property="endAddress"/>
        <result column="end_store_name" property="endStoreName"/>
        <result column="end_store_id" property="endStoreId"/>
        <result column="end_belong_store_id" property="endBelongStoreId"/>
        <result column="line_id" property="lineId"/>
        <result column="state" property="state"/>
        <result column="expect_start_time" property="expectStartTime"/>
        <result column="expect_end_time" property="expectEndTime"/>
        <result column="load_link_name" property="loadLinkName"/>
        <result column="load_link_user_id" property="loadLinkUserId"/>
        <result column="load_link_phone" property="loadLinkPhone"/>
        <result column="load_photo_img" property="loadPhotoImg"/>
        <result column="load_time" property="loadTime"/>
        <result column="unload_link_name" property="unloadLinkName"/>
        <result column="unload_link_user_id" property="unloadLinkUserId"/>
        <result column="unload_link_phone" property="unloadLinkPhone"/>
        <result column="unload_photo_img" property="unloadPhotoImg"/>
        <result column="unload_time" property="unloadTime"/>
        <result column="receipt_flag" property="receiptFlag" />
        <result column="create_time" property="createTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, waybill_id, waybill_no, order_car_id, order_car_no, freight_fee, start_province, start_province_code, start_city, start_city_code, start_area, start_area_code, start_address, start_store_name, start_store_id, start_belong_store_id, end_province, end_province_code, end_city, end_city_code, end_area, end_area_code, end_address, end_store_name, end_store_id, end_belong_store_id, line_id, state, expect_start_time, expect_end_time, load_link_name, load_link_user_id, load_link_phone, load_photo_img, load_time, unload_link_name, unload_link_user_id, unload_link_phone, unload_photo_img, unload_time, receipt_flag, create_time
    </sql>

    <update id="updateByIdForNull" parameterType="com.cjyc.common.model.entity.WaybillCar" >
    update w_waybill_car
    set waybill_id = #{waybillId,jdbcType=BIGINT},
      waybill_no = #{waybillNo,jdbcType=VARCHAR},
      order_car_id = #{orderCarId,jdbcType=BIGINT},
      order_car_no = #{orderCarNo,jdbcType=VARCHAR},
      freight_fee = #{freightFee,jdbcType=DECIMAL},
      start_province = #{startProvince,jdbcType=VARCHAR},
      start_province_code = #{startProvinceCode,jdbcType=VARCHAR},
      start_city = #{startCity,jdbcType=VARCHAR},
      start_city_code = #{startCityCode,jdbcType=VARCHAR},
      start_area = #{startArea,jdbcType=VARCHAR},
      start_area_code = #{startAreaCode,jdbcType=VARCHAR},
      start_address = #{startAddress,jdbcType=VARCHAR},
      start_store_name = #{startStoreName,jdbcType=VARCHAR},
      start_store_id = #{startStoreId,jdbcType=BIGINT},
      start_belong_store_id = #{startBelongStoreId,jdbcType=BIGINT},
      end_province = #{endProvince,jdbcType=VARCHAR},
      end_province_code = #{endProvinceCode,jdbcType=VARCHAR},
      end_city = #{endCity,jdbcType=VARCHAR},
      end_city_code = #{endCityCode,jdbcType=VARCHAR},
      end_area = #{endArea,jdbcType=VARCHAR},
      end_area_code = #{endAreaCode,jdbcType=VARCHAR},
      end_address = #{endAddress,jdbcType=VARCHAR},
      end_store_name = #{endStoreName,jdbcType=VARCHAR},
      end_store_id = #{endStoreId,jdbcType=BIGINT},
      end_belong_store_id = #{endBelongStoreId,jdbcType=BIGINT},
      line_id = #{lineId,jdbcType=BIGINT},
      state = #{state,jdbcType=TINYINT},
      expect_start_time = #{expectStartTime,jdbcType=BIGINT},
      expect_end_time = #{expectEndTime,jdbcType=BIGINT},
      load_link_name = #{loadLinkName,jdbcType=VARCHAR},
      load_link_user_id = #{loadLinkUserId,jdbcType=BIGINT},
      load_link_phone = #{loadLinkPhone,jdbcType=VARCHAR},
      load_photo_img = #{loadPhotoImg,jdbcType=VARCHAR},
      load_time = #{loadTime,jdbcType=BIGINT},
      unload_link_name = #{unloadLinkName,jdbcType=VARCHAR},
      unload_link_user_id = #{unloadLinkUserId,jdbcType=BIGINT},
      unload_link_phone = #{unloadLinkPhone,jdbcType=VARCHAR},
      unload_photo_img = #{unloadPhotoImg,jdbcType=VARCHAR},
      unload_time = #{unloadTime,jdbcType=BIGINT},
      receipt_flag = #{receiptFlag,jdbcType=BIT},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByIdSelectiveForNull" parameterType="com.cjyc.common.model.entity.WaybillCar" >
        update w_waybill_car
        <set >
            <if test="waybillId != null" >
                waybill_id = #{waybillId,jdbcType=BIGINT},
            </if>
            <if test="waybillNo != null" >
                waybill_no = #{waybillNo,jdbcType=VARCHAR},
            </if>
            <if test="orderCarId != null" >
                order_car_id = #{orderCarId,jdbcType=BIGINT},
            </if>
            <if test="orderCarNo != null" >
                order_car_no = #{orderCarNo,jdbcType=VARCHAR},
            </if>
            <if test="freightFee != null" >
                freight_fee = #{freightFee,jdbcType=DECIMAL},
            </if>
            <if test="startProvince != null" >
                start_province = #{startProvince,jdbcType=VARCHAR},
            </if>
            <if test="startProvinceCode != null" >
                start_province_code = #{startProvinceCode,jdbcType=VARCHAR},
            </if>
            <if test="startCity != null" >
                start_city = #{startCity,jdbcType=VARCHAR},
            </if>
            <if test="startCityCode != null" >
                start_city_code = #{startCityCode,jdbcType=VARCHAR},
            </if>
            <if test="startArea != null" >
                start_area = #{startArea,jdbcType=VARCHAR},
            </if>
            <if test="startAreaCode != null" >
                start_area_code = #{startAreaCode,jdbcType=VARCHAR},
            </if>
            <if test="startAddress != null" >
                start_address = #{startAddress,jdbcType=VARCHAR},
            </if>
            <if test="startStoreName != null" >
                start_store_name = #{startStoreName,jdbcType=VARCHAR},
            </if>
            <if test="startStoreId != null" >
                start_store_id = #{startStoreId,jdbcType=BIGINT},
            </if>
            <if test="startBelongStoreId != null" >
                start_belong_store_id = #{startBelongStoreId,jdbcType=BIGINT},
            </if>
            <if test="endProvince != null" >
                end_province = #{endProvince,jdbcType=VARCHAR},
            </if>
            <if test="endProvinceCode != null" >
                end_province_code = #{endProvinceCode,jdbcType=VARCHAR},
            </if>
            <if test="endCity != null" >
                end_city = #{endCity,jdbcType=VARCHAR},
            </if>
            <if test="endCityCode != null" >
                end_city_code = #{endCityCode,jdbcType=VARCHAR},
            </if>
            <if test="endArea != null" >
                end_area = #{endArea,jdbcType=VARCHAR},
            </if>
            <if test="endAreaCode != null" >
                end_area_code = #{endAreaCode,jdbcType=VARCHAR},
            </if>
            <if test="endAddress != null" >
                end_address = #{endAddress,jdbcType=VARCHAR},
            </if>
            <if test="endStoreName != null" >
                end_store_name = #{endStoreName,jdbcType=VARCHAR},
            </if>
            <if test="endStoreId != null" >
                end_store_id = #{endStoreId,jdbcType=BIGINT},
            </if>
            <if test="endBelongStoreId != null" >
                end_belong_store_id = #{endBelongStoreId,jdbcType=BIGINT},
            </if>
            <if test="lineId != null" >
                line_id = #{lineId,jdbcType=BIGINT},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="expectStartTime != null" >
                expect_start_time = #{expectStartTime,jdbcType=BIGINT},
            </if>
            <if test="expectEndTime != null" >
                expect_end_time = #{expectEndTime,jdbcType=BIGINT},
            </if>
            load_link_name = #{loadLinkName,jdbcType=VARCHAR},
            load_link_user_id = #{loadLinkUserId,jdbcType=BIGINT},
            load_link_phone = #{loadLinkPhone,jdbcType=VARCHAR},
            <if test="loadPhotoImg != null" >
                load_photo_img = #{loadPhotoImg,jdbcType=VARCHAR},
            </if>
            <if test="loadTime != null" >
                load_time = #{loadTime,jdbcType=BIGINT},
            </if>
            unload_link_name = #{unloadLinkName,jdbcType=VARCHAR},
            unload_link_user_id = #{unloadLinkUserId,jdbcType=BIGINT},
            unload_link_phone = #{unloadLinkPhone,jdbcType=VARCHAR},
            <if test="unloadPhotoImg != null" >
                unload_photo_img = #{unloadPhotoImg,jdbcType=VARCHAR},
            </if>
            <if test="unloadTime != null" >
                unload_time = #{unloadTime,jdbcType=BIGINT},
            </if>
            <if test="receiptFlag != null" >
                receipt_flag = #{receiptFlag,jdbcType=BIT},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="saveBatch">
        insert into w_waybill_car
        (waybill_id, waybill_no, order_car_id, freight_fee, start_province, start_province_code, start_city,
        start_city_code, start_area, start_area_code, start_address,start_store_name, start_store_id, end_province,
        end_province_code, end_city,end_city_code, end_area, end_area_code, end_address,end_store_name,
        end_store_id, line_id, state, expect_start_time, expect_end_time, load_link_name,
        load_link_user_id, load_link_phone, unload_link_name, unload_link_user_id, unload_link_phone,
        create_time)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.waybill_id},
            #{item.waybill_no},
            #{item.order_car_id},
            #{item.freight_fee},
            #{item.start_province},
            #{item.start_province_code},
            #{item.start_city},
            #{item.start_city_code},
            #{item.start_area},
            #{item.start_area_code},
            #{item.start_address},
            #{item.start_store_name},
            #{item.start_store_id},
            #{item.end_province},
            #{item.end_province_code},
            #{item.end_city},
            #{item.end_city_code},
            #{item.end_area},
            #{item.end_area_code},
            #{item.end_address},
            #{item.end_store_name},
            #{item.end_store_id},
            #{item.line_id},
            #{item.state},
            #{item.expect_start_time},
            #{item.expect_end_time},
            #{item.load_link_name},
            #{item.load_link_user_id},
            #{item.load_link_phone},
            #{item.unload_link_name},
            #{item.unload_link_user_id},
            #{item.unload_link_phone},
            #{item.create_time},
            )
        </foreach>

    </insert>
    <delete id="deleteByWaybillId">
        delete from w_waybill_car where waybill_id = #{waybillId}
    </delete>
    <delete id="deleteWaybillCarAndTaskCar">
        delete wc,tc from w_waybill_car wc left join w_task_car tc on tc.waybill_car_id = wc.id
        <where>
            and wc.waybill_id = #{waybillId}
            and wc.id not in
            <foreach collection="unDeleteWaybillCarId" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </delete>



    <select id="getWayBillCarrier" parameterType="com.cjyc.common.model.vo.web.WayBillCarrierVo"
            resultType="com.cjyc.common.model.dto.web.WayBillCarrierDto">
        select ww.waybill_no as waybillNo,ww.state as state,ww.type as type,woc.no as carNo,woc.vin as vin,woc.brand as
        brand,
        woc.model as model,wwc.freight_fee as freightFee,wo.pick_type as pickType,wo.back_type as backType,dc.id as
        carrierId,
        dc.name as carrierName,wo.expect_start_date as expectStartDate, wtc.load_time as loadTime,wtc.unload_time as
        unLoadTime,
        wt.driver_name as driverName,wt.driver_id as driverId, dd.phone as phone,dvr.vehicle_no as vehicleNo,dd.id_card
        as idCard,
        wo.start_address as startAddress,wo.end_address as endAddress,wo.no as orderNo,wo.pick_contact_name as
        pickContactName,
        wo.pick_contact_phone as pickContactPhone,wo.back_contact_name as backContactName,wo.back_contact_phone as
        backContactPhone
        from w_waybill_car wwc
        left join w_waybill ww on wwc.waybill_id=ww.id
        left join w_order_car woc on wwc.order_car_id=woc.id
        left join d_carrier dc on ww.carrier_id = dc.id
        left join w_order wo on woc.order_id = wo.id
        left join w_task_car wtc on wwc.id = wtc.waybill_car_id
        left join w_task wt on wt.waybill_id = wwc.waybill_id
        left join d_driver dd on dd.id =wt.driver_id
        left join d_vehicle_running dvr on dvr.id = wt.vehicle_running_id
        where 1=1
        <if test="wayBillNo != null and wayBillNo != ''">
            ww.waybill_no = #{wayBillNo}
        </if>
        <if test="carNo != null and carNo != ''">
            and woc.no = #{carNo}
        </if>
        <if test="vin != null  and vin != ''">
            and woc.vin = #{vin}
        </if>
        <if test="brand != null  and brand != ''">
            and woc.brand = #{brand}
        </if>
        <if test="model != null  and model != ''">
            and woc.model = #{model}
        </if>
        <if test="dispatchType != null ">
            and ww.type = #{dispatchType}
        </if>
        <!--<if test="deliveryWay != null ">
            and  wo.deliveryWay = #{deliveryWay}
        </if>-->

        <if test="carrierName != null  and carrierName != ''">
            and dc.name = #{model}
        </if>
    </select>
    <select id="findVoByIds" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        <include refid="Base_Column_List"/>
        from w_waybill_car wc
        <where>
            and wc.id in
            <foreach collection="waybillCarIdList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>
    <select id="findListByWaybillId" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        <include refid="Base_Column_List"/>
        from w_waybill_car
        where waybill_id = #{waybillId}
        and state &lt;= 100
    </select>
    <select id="findNextDispatch" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        <include refid="Base_Column_List"/>
        where order_car_id = #{orderCarId}
        and state &lt; 100
        and start_store_id = #{endStoreId}
    </select>
    <update id="updateForCancelDispatch">
        update w_waybill_car
        set state = #{state}
        where order_car_id = #{orderCarId}
        and state &lt; 100
        and start_store_id = #{endStoreId}
    </update>

    <update id="updateBatchForLoad">
        update w_waybill_car
        set state = #{state},
        load_time = #{currentTimeMillis}
        <where>
            and state &lt; #{state}
            and id in
            <foreach collection="set" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <update id="updateForAllotDriver">
        update w_waybill_car
        set state = 5
        where id =#{id}
        and state &lt; 5
    </update>
    <update id="updateBatchForUnload">
        update w_waybill_car
        set state = #{state}
        <where>
            and state &lt; #{state}
            and id in
            <foreach collection="set" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <update id="updateStateBatchByIds">
        update w_waybill_car
        set state = #{state}
        <where>
            and state &lt; #{state}
            <choose>
                <when test="set != null and set.size > 0">
                    and id in
                    <foreach collection="set" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    and 1 != 1
                </otherwise>
            </choose>
        </where>
    </update>
    <update id="updateStateById">
        update w_waybill_car
        set state = #{state}
        <where>
            and state &lt; #{state}
            and id = #{id}
        </where>

    </update>
    <update id="updateForLoadReplenishInfo">
        update w_waybill_car
        set load_photo_img = #{loadPhotoImg}
        where id = #{id}
        limit 1
    </update>
    <update id="updateForUnloadReplenishInfo">
        update w_waybill_car
        set unload_photo_img = #{unloadPhotoImg}
        where id = #{id}
        limit 1
    </update>
    <update id="updateForPaySuccess">
        update w_waybill_car
        set state = 100
        where id = #{id}
        and receipt_flag = 1
        and state &lt; 100
        limit 1
    </update>
    <update id="updateForLoad">
        update w_waybill_car
        set state = #{state},
        load_time = #{currentTimeMillis}
        where state &lt; #{state}
        and id = #{id}
        limit 1
    </update>
    <update id="updateForInStore">
        update w_waybill_car
        set state = 100,
        unload_time = unix_timestamp(now()) * 1000
        where id = #{id}

    </update>
    <update id="updateForFinish">
        update w_waybill_car
        set state = 100,
        unload_time = unix_timestamp(now()) * 1000
        where id = #{id}
        and state &lt; 100
        limit 1
    </update>
    <update id="updateSelfCarryForFinish">
        update w_waybill_car
        set state = 100,
        load_time = unix_timestamp(now()) * 1000,
        unload_time = unix_timestamp(now()) * 1000
        where id = #{id}
        and state &lt; 100
        limit 1
    </update>
    <update id="updateLoadImgsNull">
        update set load_photo_img = '' where id = #{id}
    </update>


    <select id="findByTaskCarId" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill_car wc
        join w_task_car tc on tc.waybill_car_id = wc.id
        where tc.id = #{taskCarId}
    </select>
    <select id="findByStartStoreAndOrderCar" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        <include refid="Base_Column_List"/>
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where w.state &lt; 100
        and wc.state &lt;= 5
        and wc.order_car_id = #{orderCarId}
        and wc.start_store_id = #{inStoreId}

    </select>
    <select id="countByStartCityAndOrderCar" resultType="java.lang.Integer">
        select
        count(0)
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where w.state &lt;= 100
        and wc.state &lt;= 100
        and wc.state &lt;= 5
        and wc.start_store_id = #{inStoreId}
        and wc.start_city = #{cityCode}
    </select>
    <select id="findUnConnectCar" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        <include refid="Base_Column_List"/>
        from w_waybill_car
        where start_city_code = #{cityCode}
        and state = 105
    </select>
    <select id="findLastTrunkWaybillCar" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where w.state &lt;= 100
        and order_car_id = #{orderCarId}
        and type = 2
        and wc.end_city_code = #{cityCode}
        order by wc.id desc
        limit 1

    </select>
    <select id="findLastPrevByArea" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_id = #{orderCarId}
        and w.state &lt;= 100
        and wc.end_area_code in
        <foreach collection="areaList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by w.id, wc.id desc
        limit 1

    </select>
    <select id="findLastNextByArea" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_id = #{orderCarId}
        and w.state &lt;= 100
        and wc.end_area_code in
        <foreach collection="areaList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by wc.id desc
        limit 1
    </select>
    <select id="countForValidateRepeatTrunkDisPatch" resultType="java.lang.Integer">
        select
        count(0)
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where w.state &lt; 100
        and wc.start_area_code in
        <foreach collection="areaList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <sql id="waybill_car_inner_state">
        (case
        when wc.state = 0 then '待指派'
        when wc.state = 5 then '待装车'
        when wc.state = 15 then '待出库'
        when wc.state = 45 then '已装车'
        when wc.state = 70 then '已卸车'
        when wc.state = 90 then '待入库'
        when wc.state = 100 then '已交付'
        when wc.state = 113 then '已取消'
        end
        ) as outterState
    </sql>
    <sql id="waybill_car_outter_state">
        (case
        when wc.state &lt;= 15 then '待运输' <!-- 待提车 -->
        when wc.state &gt; 15 and wc.state &lt; 100 then '运输中' <!-- 已提车 -->
        when wc.state = 100 then '已交付' <!-- 已交付 -->
        when wc.state = 113 then '已取消'
        end
        ) as outterState
    </sql>
    <select id="findListLocal" resultType="com.cjyc.common.model.vo.web.waybill.LocalListWaybillCarVo">
        select
        <include refid="waybill_car_inner_state"/>,
        w.carrier_id as carrierId,
        w.carrier_type as carrierType,
        w.carrier_name as carrierName,
        w.create_time as createTime,
        w.create_user as createUser,
        w.create_user_id as createUserId,
        w.type,
        (
        case when w.type = 1 then wc.end_store_name
        when w.type = 3 then wc.start_store_name
        end
        ) as localStoreName,
        oc.order_no as orderNo,
        oc.brand as brand,
        oc.model as model,
        oc.plate_no as plateNo,
        oc.vin as vin,
        oc.order_no as orderNo,
        tb.driver_name as driverName,
        tb.driver_phone as driverPhone,
        tb.driver_id as driverId,
        tb.vehicle_plate_no as vehiclePlateNo,
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        join w_order_car oc on wc.order_car_id = oc.id
        left join (
            select t.*,tc.waybill_car_id
            from w_task t
            join w_task_car tc on t.id = tc.task_id
            where t.state &lt;= 100
        ) as tb on tb.waybill_car_id = wc.id
        <where>
            w.type != 2
            <if test="paramsDto.bizScope != null">
                and (w.create_user_id = #{paramsDto.loginId}
                or w.input_store_id in
                <foreach collection="paramsDto.bizScope" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>)
            </if>
            <if test="paramsDto.carrierName != null and paramsDto.carrierName.trim() != ''">
                and w.carrier_name like concat('%', #{paramsDto.carrierName},'%')
            </if>
            <if test="paramsDto.driverName != null and paramsDto.driverName.trim() != ''">
                and tb.driver_name like concat('%', #{paramsDto.driverName},'%')
            </if>
            <if test="paramsDto.driverPhone != null and paramsDto.driverPhone.trim() != ''">
                and tb.driver_phone  like concat('%', #{paramsDto.driverPhone},'%')
            </if>
            <if test="paramsDto.vehiclePlateNo != null and paramsDto.vehiclePlateNo.trim() != ''">
                and tb.vehicle_plate_no  like concat('%', #{paramsDto.vehiclePlateNo},'%')
            </if>
            <if test="paramsDto.state != null">
                and wc.state = #{paramsDto.state}
            </if>
            <if test="paramsDto.brand != null and paramsDto.brand.trim() != ''">
                and oc.brand like concat('%', #{paramsDto.brand}, '%')
            </if>
            <if test="paramsDto.model != null and paramsDto.model.trim() != ''">
                and oc.model like concat('%', #{paramsDto.model}, '%')
            </if>
            <if test="paramsDto.plateNo != null and paramsDto.plateNo.trim() != ''">
                and oc.plate_no like concat('%', #{paramsDto.plateNo}, '%')
            </if>
            <if test="paramsDto.vin != null and paramsDto.vin.trim() != ''">
                and oc.vin like concat('%', #{paramsDto.vin}, '%')
            </if>
            <if test="paramsDto.type != null and paramsDto.type != 0">
                and w.type = #{paramsDto.type}
            </if>
            <if test="paramsDto.carrierType != null">
                and w.carrier_type = #{paramsDto.carrierType}
            </if>
            <if test="paramsDto.waybillNo != null and paramsDto.waybillNo != ''">
                and wc.waybill_no like concat('%', #{paramsDto.waybillNo}, '%')
            </if>
            <if test="paramsDto.orderCarNo != null and paramsDto.orderCarNo != ''">
                and wc.order_car_no like concat('%', #{paramsDto.orderCarNo}, '%')
            </if>
            <if test="paramsDto.startProvinceCode != null and paramsDto.startProvinceCode != ''">
                and wc.start_province_code = #{paramsDto.startProvinceCode}
            </if>
            <if test="paramsDto.startCityCode != null and paramsDto.startCityCode != ''">
                and wc.start_city_code = #{paramsDto.startCityCode}
            </if>
            <if test="paramsDto.startAreaCode != null and paramsDto.startAreaCode != ''">
                and wc.start_area_code = #{paramsDto.startAreaCode}
            </if>
            <if test="paramsDto.endProvinceCode != null and paramsDto.endProvinceCode != ''">
                and wc.end_province_code = #{paramsDto.endProvinceCode}
            </if>
            <if test="paramsDto.endCityCode != null and paramsDto.endCityCode != ''">
                and wc.end_city_code = #{paramsDto.endCityCode}
            </if>
            <if test="paramsDto.endAreaCode != null and paramsDto.endAreaCode != ''">
                and wc.end_area_code = #{paramsDto.endAreaCode}
            </if>
            <if test="paramsDto.storeId != null">
                and (wc.end_store_id = #{paramsDto.storeId} or wc.start_store_id = #{paramsDto.storeId})
            </if>
            <if test="paramsDto.beginExpectStartTime != null">
                and wc.expect_start_time &gt;= #{paramsDto.beginExpectStartTime}
            </if>
            <if test="paramsDto.endExpectStartTime != null">
                and wc.expect_start_time &lt; #{paramsDto.endExpectStartTime}
            </if>
            <if test="paramsDto.loadLinkName != null and paramsDto.loadLinkName != ''">
                and wc.load_link_name = #{paramsDto.loadLinkName}
            </if>
            <if test="paramsDto.loadLinkUserId != null and paramsDto.loadLinkUserId != ''">
                and wc.load_link_user_id = #{paramsDto.loadLinkUserId}
            </if>
            <if test="paramsDto.loadLinkPhone != null and paramsDto.loadLinkPhone != ''">
                and wc.load_link_phone = #{paramsDto.loadLinkPhone}
            </if>
            <if test="paramsDto.beginLoadTime != null">
                and wc.load_time &gt;= #{paramsDto.beginLoadTime}
            </if>
            <if test="paramsDto.endLoadTime != null">
                and wc.load_time &lt; #{paramsDto.endLoadTime}
            </if>
            <if test="paramsDto.unloadLinkName != null and paramsDto.unloadLinkName != ''">
                and wc.unload_link_name = #{paramsDto.unloadLinkName}
            </if>
            <if test="paramsDto.unloadLinkUserId != null and paramsDto.unloadLinkUserId != ''">
                and wc.unload_link_user_id = #{paramsDto.unloadLinkUserId}
            </if>
            <if test="paramsDto.unloadLinkPhone != null and paramsDto.unloadLinkPhone != ''">
                and wc.unload_link_phone = #{paramsDto.unloadLinkPhone}
            </if>
            <if test="paramsDto.beginUnloadTime != null">
                and wc.unload_Time &gt;= #{paramsDto.beginUnloadTime}
            </if>
            <if test="paramsDto.endUnloadTime != null">
                and wc.unload_time &lt;= #{paramsDto.endUnloadTime}
            </if>
            <if test="paramsDto.orderNo != null and paramsDto.orderNo.trim() != ''">
                and oc.order_no like concat('%', #{paramsDto.orderNo}, '%')
            </if>
            <if test="paramsDto.orderCarNo != null and paramsDto.orderCarNo.trim() != ''">
                and oc.no like concat('%', #{paramsDto.orderCarNo}, '%')
            </if>
        </where>
        order by w.create_time desc
    </select>

    <select id="findVoByType" resultType="com.cjyc.common.model.vo.web.waybill.WaybillCarTransportVo">
        select
            (case
            when wc.state &lt;= 15 then '未运输'
            when wc.state &gt; 15 and wc.state &lt; 100 then '运输中'
            when wc.state = 100 then '已交付'
            when wc.state = 113 then '已取消'
            end
            ) as outterState,
            w.carrier_id as carrierId,
            w.carrier_type as carrierType,
            w.carrier_name as carrierName,
            w.create_user as createUser,
            w.create_user_id as createUserId,
            tb.driver_name as driverName,
            tb.driver_phone as driverPhone,
            tb.driver_id as driverId,
            tb.vehicle_plate_no as vehiclePlateNo,
            wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        join w_order_car oc on wc.order_car_id = oc.id
        left join (
            select t.*,tc.waybill_car_id
            from w_task t
            join w_task_car tc on t.id = tc.task_id
            where t.state &lt;= 100
        ) as tb on tb.waybill_car_id = wc.id
        where wc.order_car_id = #{orderCarId}
        and w.type = #{waybillType}
    </select>
    <select id="findVoByWaybillId" resultType="com.cjyc.common.model.vo.web.waybill.WaybillCarVo">
        select
        wc.*,
        <include refid="waybill_car_inner_state"/>,
        (
            select
            CONCAT_WS(',',GROUP_CONCAT(wcsub.load_photo_img),GROUP_CONCAT(wcsub.unload_photo_img))
            from w_waybill wsub
            join w_waybill_car wcsub on wsub.id = wcsub.waybill_id
            where wcsub.order_car_id = oc.id
            and wsub.state &lt;= 100
            and wcsub.state &lt;= 100
        ) as historyPhotoImg,
        oc.brand as brand,
        oc.model as model,
        oc.plate_no as plateNo,
        oc.vin as vin,
        l.default_freight_fee as lineFreightFee,
        l.kilometer as km,
        (case when l.id > 0 then true else false end) as hasLine
        from w_waybill_car wc
        join w_order_car oc on oc.id= wc.order_car_id
        left join s_line l on l.from_code = wc.start_city_code and l.to_code = wc.end_city_code
        where wc.waybill_id = #{waybillId}
        and wc.state &lt;= 100;
    </select>
    <select id="findTrunkCarList" resultType="com.cjyc.common.model.vo.web.waybill.TrunkCarListWaybillCarVo">
        select
        <include refid="waybill_car_inner_state"/>,
        w.carrier_id as carrierId,
        w.carrier_type as carrierType,
        w.carrier_name as carrierName,
        w.create_time as createTime,
        w.create_user as createUser,
        w.create_user_id as createUserId,
        oc.brand as brand,
        oc.model as model,
        oc.plate_no as plateNo,
        oc.vin as vin,
        o.no as orderNo,
        tb.no as taskNo,
        tb.driver_name as driverName,
        tb.driver_phone as driverPhone,
        tb.driver_id as driverId,
        tb.vehicle_plate_no as vehiclePlateNo,
        (case when tb.no is null or tb.no = '' then w.no else tb.no end) as parentNo,
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        join w_order_car oc on wc.order_car_id = oc.id
        join w_order o on o.id = oc.order_id
        left join (
            select t.*,tc.waybill_car_id
            from w_task t
            join w_task_car tc on t.id = tc.task_id
            where t.state &lt;= 100
        ) as tb on tb.waybill_car_id = wc.id
        <where>
            <if test="paramsDto.bizScope != null">
                exists (
                    select wc.id
                    from w_waybill_car wc
                    <where>
                        and wc.start_belong_store_id in
                        <foreach collection="paramsDto.bizScope" index="index" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                        and wc.waybill_id = w.id
                    </where>
                )
            </if>
            and w.type = 2
            <if test="paramsDto.state != null">
                and wc.state = #{paramsDto.state}
            </if>
            <if test="paramsDto.orderStartProvinceCode != null and paramsDto.orderStartProvinceCode != ''">
                and o.start_province_code = #{paramsDto.orderStartProvinceCode}
            </if>
            <if test="paramsDto.orderStartCityCode != null and paramsDto.orderStartCityCode != ''">
                and o.start_city_code = #{paramsDto.orderStartCityCode}
            </if>
            <if test="paramsDto.orderStartAreaCode != null and paramsDto.orderStartAreaCode != ''">
                and o.start_area_code = #{paramsDto.orderStartAreaCode}
            </if>
            <if test="paramsDto.orderEndProvinceCode != null and paramsDto.orderEndProvinceCode != ''">
                and o.end_province_code = #{paramsDto.orderEndProvinceCode}
            </if>
            <if test="paramsDto.orderEndCityCode != null and paramsDto.orderEndCityCode != ''">
                and o.end_city_code = #{paramsDto.orderEndCityCode}
            </if>
            <if test="paramsDto.orderEndAreaCode != null and paramsDto.orderEndAreaCode != ''">
                and o.end_area_code = #{paramsDto.orderEndAreaCode}
            </if>
            <if test="paramsDto.orderNo != null and paramsDto.orderNo.trim() != ''">
                and o.no like concat('%', #{paramsDto.orderNo}, '%')
            </if>
            <if test="paramsDto.orderSource != null and paramsDto.orderSource != ''">
                and o.source = #{paramsDto.orderSource}
            </if>
            <if test="paramsDto.brand != null and paramsDto.brand.trim() != ''">
                and oc.brand = #{paramsDto.brand}
            </if>
            <if test="paramsDto.model != null and paramsDto.model.trim() != ''">
                and oc.model = #{paramsDto.model}
            </if>
            <if test="paramsDto.plateNo != null and paramsDto.plateNo.trim() != ''">
                and oc.plate_no like concat('%', #{paramsDto.plateNo}, '%')
            </if>
            <if test="paramsDto.vin != null and paramsDto.vin.trim() != ''">
                and oc.vin like concat('%', #{paramsDto.vin}, '%')
            </if>
            <if test="paramsDto.carrierName != null and paramsDto.carrierName.trim() != ''">
                and w.carrier_name like concat('%', #{paramsDto.carrierName}, '%')
            </if>
            <if test="paramsDto.createUser != null and paramsDto.createUser.trim() != ''">
                and w.create_user like concat('%', #{paramsDto.createUser},'%')
            </if>
            <if test="paramsDto.driverName != null and paramsDto.driverName.trim() != ''">
                and tb.driver_name like concat('%', #{paramsDto.driverName}, '%')
            </if>
            <if test="paramsDto.driverPhone != null and paramsDto.driverPhone.trim() != ''">
                and tb.driver_phone like concat('%', #{paramsDto.driverPhone}, '%')
            </if>
            <if test="paramsDto.vehiclePlateNo != null and paramsDto.vehiclePlateNo.trim() != ''">
                and tb.vehicle_plate_no like concat('%', #{paramsDto.vehiclePlateNo}, '%')
            </if>
   <!--         <if test="paramsDto.outterState != null and paramsDto.outterState != ''">
                and wc.outter_state = #{paramsDto.outterState}
            </if>-->
            <if test="paramsDto.waybillNo != null and paramsDto.waybillNo.trim() != ''">
                and wc.waybill_no like concat('%', #{paramsDto.waybillNo}, '%')
            </if>
            <if test="paramsDto.orderCarNo != null and paramsDto.orderCarNo != ''">
                and wc.order_car_no like concat('%', #{paramsDto.orderCarNo}, '%')
            </if>
            <if test="paramsDto.startProvinceCode != null and paramsDto.startProvinceCode != ''">
                and wc.start_province_code = #{paramsDto.startProvinceCode}
            </if>
            <if test="paramsDto.startCityCode != null and paramsDto.startCityCode != ''">
                and wc.start_city_code = #{paramsDto.startCityCode}
            </if>
            <if test="paramsDto.startAreaCode != null and paramsDto.startAreaCode != ''">
                and wc.start_area_code = #{paramsDto.startAreaCode}
            </if>
            <if test="paramsDto.startAddress != null and paramsDto.startAddress != ''">
                and wc.start_address = #{paramsDto.startAddress}
            </if>
            <if test="paramsDto.startStoreId != null and paramsDto.startStoreId != ''">
                and wc.start_store_id = #{paramsDto.startStoreId}
            </if>
            <if test="paramsDto.endProvinceCode != null and paramsDto.endProvinceCode != ''">
                and wc.end_province_code = #{paramsDto.endProvinceCode}
            </if>
            <if test="paramsDto.endCityCode != null and paramsDto.endCityCode != ''">
                and wc.end_city_code = #{paramsDto.endCityCode}
            </if>
            <if test="paramsDto.endAreaCode != null and paramsDto.endAreaCode != ''">
                and wc.end_area_code = #{paramsDto.endAreaCode}
            </if>
            <if test="paramsDto.endAddress != null and paramsDto.endAddress != ''">
                and wc.end_address = #{paramsDto.endAddress}
            </if>
            <if test="paramsDto.endStoreId != null and paramsDto.endStoreId != ''">
                and wc.end_store_id = #{paramsDto.endStoreId}
            </if>
            <if test="paramsDto.beginExpectStartTime != null and paramsDto.beginExpectStartTime != ''">
                and wc.expect_start_time &gt;= #{paramsDto.beginExpectStartTime}
            </if>
            <if test="paramsDto.endExpectStartTime != null and paramsDto.endExpectStartTime != ''">
                and wc.expect_start_time &lt; #{paramsDto.endExpectStartTime}
            </if>
            <if test="paramsDto.beginExpectEndTime != null">
                and wc.expect_end_time &gt;= #{paramsDto.beginExpectEndTime}
            </if>
            <if test="paramsDto.endExpectEndTime != null and paramsDto.endExpectEndTime != ''">
                and wc.expect_end_time &lt; #{paramsDto.endExpectEndTime}
            </if>
            <if test="paramsDto.loadLinkName != null and paramsDto.loadLinkName != ''">
                and wc.load_link_name = #{paramsDto.loadLinkName}
            </if>
            <if test="paramsDto.loadLinkPhone != null and paramsDto.loadLinkPhone != ''">
                and wc.load_link_phone = #{paramsDto.loadLinkPhone}
            </if>
            <if test="paramsDto.beginLoadTime != null">
                and wc.load_time &gt;= #{paramsDto.beginLoadTime}
            </if>
            <if test="paramsDto.endLoadTime != null">
                and wc.load_time &lt; #{paramsDto.endLoadTime}
            </if>
            <if test="paramsDto.unloadLinkName != null and paramsDto.unloadLinkName != ''">
                and wc.unload_link_name = #{paramsDto.unloadLinkName}
            </if>
            <if test="paramsDto.unloadLinkUserId != null">
                and wc.unload_link_user_id = #{paramsDto.unloadLinkUserId}
            </if>
            <if test="paramsDto.unloadLinkPhone != null and paramsDto.unloadLinkPhone != ''">
                and wc.unload_link_phone = #{paramsDto.unloadLinkPhone}
            </if>
            <if test="paramsDto.beginUnloadTime != null">
                and wc.unload_time &gt;= #{paramsDto.beginUnloadTime}
            </if>
            <if test="paramsDto.endUnloadTime != null">
                and wc.unload_time &lt; #{paramsDto.endUnloadTime}
            </if>
            <if test="paramsDto.beginCreateTime != null">
                and wc.create_time &gt;= #{paramsDto.beginCreateTime}
            </if>
            <if test="paramsDto.endCreateTime != null">
                and wc.create_time &lt; #{paramsDto.endCreateTime}
            </if>
            <if test="paramsDto.nowStoreId != null">
                and wc.now_store_id &lt;= #{paramsDto.nowStoreId}
            </if>
        </where>
        group by wc.id
        order by w.create_time desc
    </select>
    <select id="findVoByTaskId" resultType="com.cjyc.common.model.vo.web.waybill.WaybillCarVo">
        select
        wc.*,
        oc.brand as brand,
        oc.model as model,
        oc.plate_no as plateNo,
        oc.vin as vin
        from w_task_car tc
        join w_waybill_car wc on tc.waybill_car_id = wc.id
        join w_order_car oc on wc.order_car_id = oc.id
        where tc.id = #{taskId}
    </select>
    <select id="findLastPrevByBelongStoreId" resultType="com.cjyc.common.model.entity.defined.FullWaybillCar">
        select
        wc.*,
        concat(s1.province, s1.city, s1.area,s1.detail_addr) as startStoreFullAddress,
        concat(s2.province, s2.city, s2.area,s2.detail_addr) as endStoreFullAddress
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        left join s_store s1 on s1.id = wc.start_store_id
        left join s_store s2 on s2.id = wc.end_store_id
        where wc.order_car_id = #{orderCarId}
        and w.state &lt;= 100
        and wc.end_belong_store_id = #{storeId}
        order by w.id, wc.id desc
        limit 1
    </select>
    <select id="findLastNextByBelongStoreId" resultType="com.cjyc.common.model.entity.defined.FullWaybillCar">
        select
        wc.*,
        concat(s1.province, s1.city, s1.area,s1.detail_addr) as startStoreFullAddress,
        concat(s2.province, s2.city, s2.area,s2.detail_addr) as endStoreFullAddress
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        left join s_store s1 on s1.id = wc.start_store_id
        left join s_store s2 on s2.id = wc.end_store_id
        where wc.order_car_id = #{orderCarId}
        and w.state &lt;= 100
        and wc.start_belong_store_id = #{storeId}
        order by w.id, wc.id desc
        limit 1
    </select>
    <select id="countUnAllFinish" resultType="java.lang.Integer">
        select
        count(0)
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.waybill_id = #{waybillId}
        and w.state &lt; 100
    </select>
    <select id="countUnFinishByWaybillId" resultType="java.lang.Integer">
        select count(0)
        from w_waybill_car
        where waybill_id = #{waybillId}
        and state &lt; 100
    </select>
    <select id="findVo" resultType="com.cjyc.common.model.vo.web.waybill.WaybillCarVo">
        select
        wc.*,
        <include refid="waybill_car_inner_state"/>,
        oc.brand as brand,
        oc.model as model,
        oc.plate_no as plateNo,
        oc.vin as vin,
        l.default_freight_fee as lineFreightFee,
        l.kilometer as km,
        (case when l.id > 0 then true else false end) as hasLine,
        (
            select
            CONCAT_WS(',',GROUP_CONCAT(wcsub.load_photo_img),GROUP_CONCAT(wcsub.unload_photo_img))
            from w_waybill wsub
            join w_waybill_car wcsub on wsub.id = wcsub.waybill_id
            where wcsub.order_car_id = oc.id
            and wsub.state &lt;= 100
            and wcsub.state &lt;= 100
        ) as historyPhotoImg
        from w_waybill_car wc
        join w_order_car oc on oc.id= wc.order_car_id
        left join s_line l on l.from_code = wc.start_city_code and l.to_code = wc.end_city_code
        where wc.waybill_id = #{waybillId}
        <if test="state != null">
            <if test="state == 1">
                and wc.state = 0
            </if>
            <if test="state == 9">
                and wc.state &lt;= 100
            </if>
        </if>
    </select>
    <select id="findWaitReceiptListByOrderCarId" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_id = #{orderId}
        and wc.state = 90
        and w.state &lt; 100
        and w.type = 3 or wc.end_address = #{endAddress}
    </select>
    <select id="findWaitReceiptWaybill" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_id = #{orderCarId}
        and w.state &lt;= 100
        and (wc.state between 45 and 100 or (wc.state between 15 and 100 and w.carrier_type = 6))
        and wc.receipt_flag = 1
        limit 1
    </select>

    <!-- 调度列表信息 -->
    <select id="getDispatchList" resultType="com.cjyc.common.model.vo.salesman.dispatch.DispatchListVo">
        SELECT c.* FROM (SELECT
        b.orderCarId,
        b.orderCarNo,
        b.brand, b.model, b.orderNo, b.carNo, b.pickDate, b.orderStartCity, b.orderEndCity, b.wayBillId,
        b.wayBillNo, b.liftCarMode,
        (CASE WHEN ISNULL(b.trunkMode) = 1 THEN CONCAT(b.orderStartCity,'-',b.orderEndCity)
        WHEN INSTR(b.trunkMode, b.orderEndCity) > 0 THEN b.trunkMode
        WHEN INSTR(b.trunkMode, b.orderEndCity) &lt;= 0 THEN CONCAT(b.trunkMode, ',', SUBSTRING_INDEX(b.trunkMode,'-', -1), '-', b.orderEndCity) END) trunkMode,
        b.deliveryMode, b.liftCarState,
        (CASE
        WHEN ISNULL(b.trunkMode) = 1 THEN 0
        WHEN INSTR(b.trunkMode, b.orderEndCity) > 0 THEN b.trunkState
        WHEN INSTR(b.trunkMode, b.orderEndCity) &lt;= 0 THEN CONCAT(b.trunkState, ',', 0)
        END) trunkState,
        b.deliveryState,
        (CASE
        WHEN ISNULL(b.trunkMode) = 1 THEN b.orderStartCity
        WHEN INSTR(b.trunkMode, b.orderEndCity) > 0 THEN ''
        WHEN INSTR(b.trunkMode, b.orderEndCity) &lt;= 0 THEN SUBSTRING_INDEX(b.trunkMode,'-', -1)
        END) stUnTrunk,
        (CASE
        WHEN ISNULL(b.trunkMode) = 1 THEN b.orderEndCity
        WHEN INSTR(b.trunkMode, b.orderEndCity) > 0 THEN ''
        WHEN INSTR(b.trunkMode, b.orderEndCity) &lt;= 0 THEN b.orderEndCity
        END) edUnTrunk,
        b.vin
        FROM
        (
        SELECT
        a.orderCarId,
        a.orderCarNo,
        a.brand,
        a.model,
        a.order_no AS orderNo,
        a.woc_no AS carNo,
        a.expect_start_date AS pickDate,
        a.wo_start_city AS orderStartCity,
        a.wo_end_city AS orderEndCity,
        a.ww_id AS wayBillId,
        a.ww_no AS wayBillNo,
        a.pickType AS liftCarMode,
        GROUP_CONCAT(
        a.trunkType
        ORDER BY
        a.waybill_id ASC SEPARATOR ','
        ) trunkMode,
        a.backType AS deliveryMode,
        a.pickState AS liftCarState,
        GROUP_CONCAT(
        a.trunkState
        ORDER BY
        a.waybill_id ASC SEPARATOR ','
        ) trunkState,
        a.backState AS deliveryState,
        a.vin
        FROM
        (
        SELECT
        woc.id as orderCarId,
        woc.no as orderCarNo,
        woc.brand,
        woc.model,
        woc.order_no,
        woc.`no` woc_no,
        wo.expect_start_date,
        wwc.waybill_id,
        wo.id,
        wo.start_city wo_start_city,
        wo.end_city wo_end_city,
        ww.id ww_id,
        ww.`no` ww_no,
        ww.type,
        (
        CASE
        WHEN wo.start_address = (
        SELECT DISTINCT
        wwci.start_address
        FROM
        w_waybill_car wwci
        LEFT JOIN w_waybill wwi ON wwci.waybill_id = wwi.id
        WHERE
        wwi.type = 2
        AND wwi.state &lt;= 100
        AND wwci.state &lt;= 100
        AND wwc.order_car_no = wwci.order_car_no
        GROUP BY
        wwci.order_car_no
        ) THEN
        '物流上门'
        WHEN (
        SELECT
        COUNT(wbi.id)
        FROM
        w_waybill wbi
        JOIN w_waybill_car wci ON wbi.id = wci.waybill_id
        WHERE
        wci.order_car_no = wwc.order_car_no
        AND type = 1
        AND wbi.state &lt;= 100
        AND wci.state &lt;= 100
        ) > 0 THEN
        (
        CASE (
        SELECT
        wbi.carrier_type
        FROM
        w_waybill wbi
        JOIN w_waybill_car wci ON wbi.id = wci.waybill_id
        WHERE
        wci.order_car_no = wwc.order_car_no
        AND type = 1
        AND wbi.state &lt;= 100
        AND wci.state &lt;= 100
        )
        WHEN 3 THEN
        '同城-业务员'
        WHEN 4 THEN
        '同城-代驾'
        WHEN 5 THEN
        '同城-拖车'
        WHEN 6 THEN
        '客户自己'
        ELSE
        '未知'
        END
        )
        ELSE
        (
        CASE wo.pick_type
        WHEN 1 THEN
        '自送'
        WHEN 2 THEN
        '代驾上门'
        WHEN 3 THEN
        '拖车上门'
        WHEN 4 THEN
        '物流上门'
        ELSE
        '未知'
        END
        )
        END
        ) pickType,
        (
        CASE ww.type
        WHEN 2 THEN
        CONCAT(
        wwc.start_city,
        '-',
        wwc.end_city
        )
        ELSE
        NULL
        END
        ) trunkType,
        (
        CASE
        WHEN wo.end_address = (
        SELECT
        wwci.end_address
        FROM
        w_waybill_car wwci
        LEFT JOIN w_waybill wwi ON wwci.waybill_id = wwi.id
        WHERE
        wwi.type = 2
        AND wwi.state &lt;= 100
        AND wwci.state &lt;= 100
        AND wwc.order_car_no = wwci.order_car_no
        ORDER BY
        wwci.id DESC
        LIMIT 0,
        1
        ) THEN
        '物流上门'
        WHEN (
        SELECT
        COUNT(wbi.id)
        FROM
        w_waybill wbi
        JOIN w_waybill_car wci ON wbi.id = wci.waybill_id
        WHERE
        wci.order_car_no = wwc.order_car_no
        AND type = 3
        AND wbi.state &lt;= 100
        AND wci.state &lt;= 100
        ) > 0 THEN
        (
        CASE (
        SELECT
        wbi.carrier_type
        FROM
        w_waybill wbi
        JOIN w_waybill_car wci ON wbi.id = wci.waybill_id
        WHERE
        wci.order_car_no = wwc.order_car_no
        AND type = 3
        AND wbi.state &lt;= 100
        AND wci.state &lt;= 100
        )
        WHEN 3 THEN
        '同城-业务员'
        WHEN 4 THEN
        '同城-代驾'
        WHEN 5 THEN
        '同城-拖车'
        WHEN 6 THEN
        '客户自己'
        ELSE
        '未知'
        END
        )
        ELSE
        (
        CASE wo.back_type
        WHEN 1 THEN
        '自提'
        WHEN 2 THEN
        '代驾上门'
        WHEN 3 THEN
        '拖车上门'
        WHEN 4 THEN
        '物流上门'
        ELSE
        '未知'
        END
        )
        END
        ) backType,
        (
        CASE
        WHEN wo.start_address = (
        SELECT
        wwci.start_address
        FROM
        w_waybill_car wwci
        LEFT JOIN w_waybill wwi ON wwci.waybill_id = wwi.id
        WHERE
        wwi.type = 2
        AND wwi.state &lt;= 100
        AND wwci.state &lt;= 100
        AND wwc.order_car_no = wwci.order_car_no
        GROUP BY
        wwci.order_car_no
        ) THEN
        1
        WHEN (
        SELECT
        COUNT(wbi.id)
        FROM
        w_waybill wbi
        JOIN w_waybill_car wci ON wbi.id = wci.waybill_id
        WHERE
        wci.order_car_no = wwc.order_car_no
        AND type = 1
        AND wbi.state &lt;= 100
        AND wci.state &lt;= 100
        ) > 0 THEN
        1
        ELSE
        0
        END
        ) pickState,
        (
        CASE ww.type
        WHEN 2 THEN
        1
        ELSE
        NULL
        END
        ) trunkState,
        (
        CASE
        WHEN wo.end_address = (
        SELECT
        wwci.end_address
        FROM
        w_waybill_car wwci
        LEFT JOIN w_waybill wwi ON wwci.waybill_id = wwi.id
        WHERE
        wwi.type = 2
        AND wwi.state &lt;= 100
        AND wwci.state &lt;= 100
        AND wwc.order_car_no = wwci.order_car_no
        ORDER BY
        wwci.id DESC
        LIMIT 0,
        1
        ) THEN
        1
        WHEN (
        SELECT
        COUNT(wbi.id)
        FROM
        w_waybill wbi
        JOIN w_waybill_car wci ON wbi.id = wci.waybill_id
        WHERE
        wci.order_car_no = wwc.order_car_no
        AND type = 3
        AND wbi.state &lt;= 100
        AND wci.state &lt;= 100
        ) > 0 THEN
        1
        ELSE
        0
        END
        ) backState,
        woc.vin
        FROM
        w_order_car woc
        LEFT JOIN w_order wo ON wo.id = woc.order_id
        LEFT JOIN w_waybill_car wwc ON wwc.order_car_no = woc.`no`
        LEFT JOIN w_waybill ww ON ww.id = wwc.waybill_id
        WHERE
        wo.state IN (25, 55, 88)
        AND wwc.state &lt;= 100
        AND ww.state &lt;= 100
        <if test="param.bizStoreIds != null">
            and wo.input_store_id IN <foreach collection="param.bizStoreIds" item="item" index="index" open="(" close=")" separator=",">
                                        #{item}
                                    </foreach>
        </if>
        ) a
        GROUP BY
        a.woc_no
        ) b) c
        <where>
            <if test="param.searchValue != null and param.searchValue != ''">
                and (c.vin LIKE CONCAT('%',#{param.searchValue},'%') or
                c.orderNo LIKE CONCAT('%',#{param.searchValue},'%') or
                c.wayBillNo LIKE CONCAT('%',#{param.searchValue},'%'))
            </if>
            <if test="param.pickDateSt != null and param.pickDateSt > 0">
                and c.pickDate &gt;= #{param.pickDateSt}
            </if>
            <if test="param.pickDateEd != null and param.pickDateEd > 0">
                and c.pickDate &lt; #{param.pickDateEd}
            </if>
            <if test="param.brand != null and param.brand !=''">
                and c.brand LIKE CONCAT('%',#{param.brand},'%')
            </if>
            <if test="param.model != null and param.model != ''">
                and c.model LIKE CONCAT('%',#{param.model},'%')
            </if>
            <if test="param.dispatchType != null">
                <choose>
                    <when test="param.dispatchType == 1">
                        and c.liftCarMode IN
                        ('自送', '代驾上门', '拖车上门', '同城-业务员', '同城-代驾',
                        '同城-拖车', '客户自己')
                    </when>
                    <when test="param.dispatchType == 2">
                        and (c.liftCarMode = '物流上门' AND c.deliveryMode = '物流上门')
                    </when>
                    <when test="param.dispatchType == 3">
                        and c.deliveryMode IN ('自提', '代驾上门', '拖车上门', '同城-业务员',
                        '同城-代驾', '同城-拖车', '客户自己')
                    </when>
                </choose>
            </if>
            <if test="param.startCity != null and param.startCity != ''">
                and c.stUnTrunk like CONCAT('%',#{param.startCity},'%')
            </if>
            <if test="param.endCity != null and param.endCity != ''">
                and c.edUnTrunk like CONCAT('%',#{param.endCity},'%')
            </if>
        </where>
        <if test="param.pickDateSort != null">
            <choose>
                <when test="param.pickDateSort == 1">
                    ORDER BY c.pickDate ASC
                </when>
                <when test="param.pickDateSort == 2">
                    ORDER BY c.pickDate DESC
                </when>
            </choose>
        </if>
    </select>

    <select id="selectWaybillRecordList" parameterType="java.lang.Long"
            resultType="com.cjyc.common.model.vo.salesman.dispatch.DispatchRecordVo">
        select
            w.carrier_id as carrierId,
            w.type as type,
            /*(case w.type when 1 then concat(car.start_city,'-',car.end_city)
                         when 3 then concat(car.start_city,'-',car.end_city) else w.guide_line end) AS guideLine,*/
                         concat(car.start_city,'-',car.end_city) AS guideLine,
            w.no as waybillNo,
            w.carrier_name as carrierName,
            w.carrier_type as carrierType,
            car.load_link_name as loadLinkName,
            car.load_link_phone as loadLinkPhone,
            concat(car.start_city,car.start_area,car.start_address) as startAddress,
            car.unload_link_name as unloadLinkName,
            car.unload_link_phone as unloadLinkPhone,
            concat(car.end_city,car.end_area,car.end_address) as endAddress
        from
            w_waybill_car car
            left join w_waybill w on car.waybill_id=w.id
        where
            car.order_car_id=#{id} and car.state &lt; 113
    </select>
    <select id="findLastByOderCarId" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_id = #{orderCarId}
        and wc.state &lt;= 100
        order by w.type desc, wc.id desc
        limit 1
    </select>
    <select id="findFirstTrunkWaybillCar" resultType="com.cjyc.common.model.entity.WaybillCar">
        select * from w_waybill where type = 2 and state &lt;= 100 limit 1
    </select>
    <select id="countPrevTrunk" resultType="java.lang.Integer">
        select count(0) from w_waybill_car wc
        join w_waybill w on w.id = wc.waybill_id
        where order_car_id = (select order_car_no from w_waybill_car where id = #{id})
        and w.state &lt;= 100
        and wc.state &lt;= 100
        and wc.id &lt; #{id}
        and w.type = 2
    </select>
    <select id="findCarIdsByWaybillId" resultType="java.lang.Long">
        select id from w_waybill_car
        where waybill_id = #{waybillId}
        and state &lt;= 100;
    </select>
    <select id="findListByIds" resultType="com.cjyc.common.model.entity.WaybillCar">
        select *
        from w_waybill_car
        <where>
            id in
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </select>
    <select id="findWaitCancelListByUnCancelIds" resultType="com.cjyc.common.model.entity.WaybillCar">
        select *
        from w_waybill_car
        <where>
            and waybill_id = #{waybillId}
            and state &lt; 45
            and id not in
            <foreach collection="set" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </select>
    <select id="countTrunkWaybillCar" resultType="java.lang.Integer">
        select count(0)
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_no = #{orderCarNo}
        and w.state &lt;= 100
        and w.type = 2
    </select>

    <!--业务员端提车完成台数-->
    <select id="waybillCarPickCount" resultType="java.lang.Integer"
            parameterType="com.cjyc.common.model.dto.salesman.mine.SalesAchieveDto">
       SELECT
            count( wwc.id )
        FROM
            w_task wt
		LEFT JOIN w_task_car wtc ON wtc.task_id = wt.id
		LEFT JOIN w_waybill_car wwc ON wwc.id = wtc.waybill_car_id
		LEFT JOIN w_waybill ww ON ww.id = wwc.waybill_id
        <where>
            <if test="driverId != null">
                wt.driver_id = #{driverId}
            </if>
            <if test="thisMonthTime != null and thisMonthTime != 0 and nextMonthTime != null and nextMonthTime != 0">
                and wt.complete_time > #{thisMonthTime} and wt.complete_time &lt; #{nextMonthTime}
            </if>
            AND ww.type = 1
            AND wt.state = 100
        </where>
    </select>

    <!--业务员端送车完成台数-->
    <select id="waybillCarBackCount" resultType="java.lang.Integer"
            parameterType="com.cjyc.common.model.dto.salesman.mine.SalesAchieveDto">
        SELECT
        count( wwc.id )
        FROM
        w_task wt
        LEFT JOIN w_task_car wtc ON wtc.task_id = wt.id
        LEFT JOIN w_waybill_car wwc ON wwc.id = wtc.waybill_car_id
        LEFT JOIN w_waybill ww ON ww.id = wwc.waybill_id
        <where>
            <if test="driverId != null">
                wt.driver_id = #{driverId}
            </if>
            <if test="thisMonthTime != null and thisMonthTime != 0 and nextMonthTime != null and nextMonthTime != 0">
                and wt.complete_time > #{thisMonthTime} and wt.complete_time &lt; #{nextMonthTime}
            </if>
            AND ww.type = 3
            AND wt.state = 100
        </where>
    </select>

    <!--业务员端我确认/下单我送车任务交付客户-->
    <select id="deliveredCarCount" resultType="java.lang.Integer"
            parameterType="com.cjyc.common.model.dto.salesman.mine.SalesAchieveDto">
        SELECT
            count( wwc.id )
        FROM
            w_task wt
		LEFT JOIN w_task_car wtc ON wtc.task_id = wt.id
		LEFT JOIN w_waybill_car wwc ON wwc.id = wtc.waybill_car_id
		LEFT JOIN w_waybill ww ON ww.id = wwc.waybill_id
        <where>
            <if test="driverId != null">
                AND wt.driver_id = #{driverId}
            </if>
            <if test="thisMonthTime != null and thisMonthTime != 0 and nextMonthTime != null and nextMonthTime != 0">
                AND wt.complete_time > #{thisMonthTime} and wt.complete_time &lt; #{nextMonthTime}
            </if>
            AND ww.type = 3
            AND wt.state = 100
            AND wwc.order_car_id IN (
              SELECT
                woc.id
              FROM
                w_order_car woc
            LEFT JOIN w_order wo ON wo.id = woc.order_id
            WHERE
                wo.check_user_id = #{userId}
                OR wo.create_user_id = #{userId}
            )
        </where>
    </select>

    <!--分页查询在库列表-->
    <select id="selectStorageCarPage" parameterType="com.cjyc.common.model.dto.web.mineStore.StorageCarQueryDto"
            resultType="com.cjyc.common.model.vo.web.mineStore.StorageCarVo">
        select
            oc.no AS carNo,
            oc.brand AS brand,
            oc.model AS model,
            oc.plate_no AS plateNo,
            oc.vin AS vin,
            oc.order_no AS orderNo,
            oc.is_new AS isNew,
            oc.add_insurance_fee AS addInsuranceFee,
            oc.add_insurance_amount AS addInsuranceAmount,
            oc.valuation AS valuation
        from w_order o
        join w_order_car oc on o.id = oc.order_id
        <where>
            oc.state in (25,35,45,50)
            and oc.now_store_id = #{nowStoreId}
            <if test="isNew != null">
                and oc.is_new=#{isNew}
            </if>
            <if test="orderNo != null and orderNo.trim() != ''">
                and oc.order_no like concat('%',#{orderNo},'%')
            </if>
            <if test="carNo != null and carNo.trim() != ''">
                and oc.no like concat('%',#{carNo},'%')
            </if>
            <if test="plateNo != null and plateNo.trim() != ''">
                and oc.plate_no like concat('%',#{plateNo},'%')
            </if>
            <if test="vin != null and vin.trim() != ''">
                and oc.vin like concat('%',#{vin},'%')
            </if>
            <if test="brand != null and brand.trim() != ''">
                and oc.brand=#{brand}
            </if>
            <if test="model != null and model.trim() != ''">
                and oc.model=#{model}
            </if>
            order by oc.now_update_time desc
        </where>
    </select>

    <!--查询在库车辆数量-->
    <select id="selectStorageCount" resultType="java.lang.Integer">
        SELECT
            count(*) as count
        from w_order o
        join w_order_car oc on o.id = oc.order_id
        where oc.now_store_id = #{nowStoreId}
        and oc.state in (25,35,45,50)
    </select>
    <select id="findLastByOderCarIdAndId" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_id = #{orderCarId}
        and wc.id &lt; #{id}
        and wc.state &lt;= 100
        order by w.type desc, wc.id desc
        limit 1
    </select>
    <select id="findUnAllotListByWaybillId" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        <include refid="Base_Column_List"/>
        from w_waybill_car
        where waybill_id = #{waybillId}
        and state = 0
    </select>
    <select id="findAfterWaybillCar" resultType="com.cjyc.common.model.entity.WaybillCar">
        select wc.*
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_no = #{orderCarNo}
        and w.type >= 2
        and wc.id > #{waybillCarId}
        and wc.state &lt; 100
    </select>
    <select id="findNextWaybillCar" resultType="com.cjyc.common.model.entity.WaybillCar">
        select wc.*
        from w_waybill_car wc
        where wc.order_car_no = #{orderCarNo}
        and wc.id > #{waybillCarId}
        and wc.state &lt; 100
        limit 1
    </select>
    <select id="findFirst" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on w.id = wc.waybill_id
        where w.state &lt;= 100
        and wc.state &lt;= 100
        and wc.order_car_id = #{orderCarId}
        order by w.type, wc.id
        limit 1
    </select>
    <select id="findListByOrderCarIds" resultType="com.cjyc.common.model.entity.WaybillCar">
        select
        wc.*
        from w_waybill w
        join w_waybill_car wc on w.id = wc.waybill_id
        where w.state &lt;= 100
        and wc.state &lt;= 100
        <if test="list != null and list.size() != 0">
            and wc.order_car_id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="findBackWaybill" resultType="com.cjyc.common.model.entity.WaybillCar">
        select wc.*
        from w_waybill w
        join w_waybill_car wc on w.id = wc.waybill_id
        where w.state &lt;= 100
        and wc.order_car_id = #{orderCarId}
        and w.type = 3
        and w.carrier_type = 6
        and wc.state &lt; 15
    </select>
    <select id="countByStartAddress" resultType="java.lang.Integer">
         select
        count(0)
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where w.state &lt;= 100
        and wc.state &lt;= 5
        and wc.order_car_id = #{orderCarId}
        and wc.start_area_code = #{areaCode}
        and wc.start_address = #{address}
    </select>
    <select id="findUploadPhoto" resultType="java.lang.String">
        select
        CONCAT_WS(',',GROUP_CONCAT(wc.load_photo_img),GROUP_CONCAT(wc.unload_photo_img))
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where w.state &lt;= 100
        and wc.state &lt;= 100
        and wc.order_car_id = #{orderCarId}
    </select>

    <delete id="cancelAfterWaybillCar">
        update w_waybill_car wc
        set wc.state = 113
        where wc.order_car_no = #{orderCarNo}
        and wc.id > #{waybillCarId}
        and wc.state &lt; 100
    </delete>
    <delete id="cancelBatch">
        update w_waybill_car wc
        set wc.state = 113
        where wc.state &lt; 100
        and wc.id in
        <foreach collection="collect" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="selectWaybillCar" parameterType="com.cjyc.common.model.dto.driver.task.DetailQueryDto"
            resultType="com.cjyc.common.model.entity.WaybillCar">
        select
            <include refid="Base_Column_List"/>
        from
            w_waybill_car
        <where>
            id = #{waybillCarId}
            /*待提车*/
            <if test="detailState == 1">
                and state in(5,15)
            </if>
            <if test="storeIds != null and detailState == 1">
                and (start_belong_store_id in <foreach collection="storeIds" item="item" index="index" open="(" close=")" separator=",">
                                                #{item}
                                            </foreach>
                or (ISNULL(start_belong_store_id) or LENGTH(trim(start_belong_store_id)) &lt; 1 or start_belong_store_id = 0))
            </if>
            /*待交车*/
            <if test="detailState == 2">
                and state in(45,90)
            </if>
            <if test="storeIds != null and detailState == 2">
                and (end_belong_store_id in <foreach collection="storeIds" item="item" index="index" open="(" close=")" separator=",">
                                            #{item}
                                        </foreach>
                or (ISNULL(end_belong_store_id) or LENGTH(trim(end_belong_store_id)) &lt; 1 or end_belong_store_id = 0))
            </if>
            /*已交付 已入库*/
            <if test="detailState == 3 or detailState == 5">
                and state =100
            </if>
            <if test="storeIds != null and (detailState == 3 or detailState == 5)">
                and (end_belong_store_id in <foreach collection="storeIds" item="item" index="index" open="(" close=")" separator=",">
                                                #{item}
                                            </foreach>
                or (ISNULL(end_belong_store_id) or LENGTH(trim(end_belong_store_id)) &lt; 1 or end_belong_store_id = 0))
            </if>
            /*待入库*/
            <if test="detailState == 4">
                and state =90
            </if>
            <if test="storeIds != null and detailState == 4">
                and (end_belong_store_id in <foreach collection="storeIds" item="item" index="index" open="(" close=")" separator=",">
                                            #{item}
                                        </foreach>
                or (ISNULL(end_belong_store_id) or LENGTH(trim(end_belong_store_id)) &lt; 1 or end_belong_store_id = 0))
            </if>
            /*待出库*/
            <if test="detailState == 6">
                and state =15
            </if>
            <if test="storeIds != null and detailState == 6">
                and (start_belong_store_id in <foreach collection="storeIds" item="item" index="index" open="(" close=")" separator=",">
                                                #{item}
                                            </foreach>
                or (ISNULL(start_belong_store_id) or LENGTH(trim(start_belong_store_id)) &lt; 1 or start_belong_store_id = 0))
            </if>
            /*已出库*/
            <if test="detailState == 7">
                and state > 15
            </if>
            <if test="storeIds != null and detailState == 7">
                and (start_belong_store_id in <foreach collection="storeIds" item="item" index="index" open="(" close=")" separator=",">
                                                #{item}
                                            </foreach>
                or (ISNULL(start_belong_store_id) or LENGTH(trim(start_belong_store_id)) &lt; 1 or start_belong_store_id = 0))
            </if>
        </where>
    </select>
    <select id="countOrderDispatchState" resultType="com.cjyc.common.model.entity.defined.DispatchNum">
        select
        IFNULL(sum(case when w.type = 1 then 1 else 0 end),0) as pickNum,
        IFNULL(sum(case when w.type = 2 then 1 else 0 end),0) as trunkNum,
        IFNULL(sum(case when w.type = 3 then 1 else 0 end),0) as backNum
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where wc.order_car_id = #{orderCarId}
        and wc.state &lt;= 100

    </select>

    <select id="selectWaybillCarList" parameterType="java.util.Map" resultType="com.cjyc.common.model.entity.WaybillCar">
        SELECT
        car.id,car.state,car.load_photo_img as loadPhotoImg,
            car.unload_photo_img as unloadPhotoImg
        FROM
            w_waybill_car car
        left join w_waybill w on car.waybill_id=w.id
        <where>
            car.order_car_id=#{orderCarId}
            <if test="waybillType != null and waybillType==1">
                and car.id &lt; #{waybillCarId}
            </if>
            <if test="waybillType != null and waybillType==2">
                and (car.id &lt; #{waybillCarId} or w.type=1)
            </if>
            <if test="waybillType != null and waybillType==3">
                and (car.id &lt; #{waybillCarId} or w.type in(1,2))
            </if>
        </where>

    </select>
    <select id="countUnFinishForState" resultType="com.cjyc.common.model.entity.defined.BillCarNum">
        select
        count(0) as totalCarNum,
        IFNULL(sum(case when state = 113 then 1 else 0 end), 0) as cancelCarNum,
        IFNULL(sum(case when state &lt; 100 then 1 else 0 end), 0) as unFinishCarNum
        from w_waybill_car
        where waybill_id = #{waybillId}
    </select>
    <select id="countActiveWaybill" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM w_waybill w
        join w_waybill_car wc on w.id = wc.waybill_id
        WHERE wc.order_car_id = #{orderCarId}
        AND wc.state &lt;= 100
        and w.state &lt;= 100
        AND w.type =#{type}
    </select>

</mapper>
