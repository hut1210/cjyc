<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjyc.common.model.dao.IWaybillDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.cjyc.common.model.entity.Waybill">
        <id column="id" property="id" />
        <result column="no" property="no" />
        <result column="type" property="type" />
        <result column="source" property="source" />
        <result column="guide_line" property="guideLine" />
        <result column="recommend_line" property="recommendLine" />
        <result column="carrier_id" property="carrierId" />
        <result column="carrier_type" property="carrierType" />
        <result column="carrier_name" property="carrierName" />
        <result column="car_num" property="carNum" />
        <result column="state" property="state" />
        <result column="freight_fee" property="freightFee" />
        <result column="freight_pay_state" property="freightPayState" />
        <result column="freight_pay_time" property="freightPayTime" />
        <result column="freight_pay_billno" property="freightPayBillno" />
        <result column="fixed_freight_fee" property="fixedFreightFee" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="create_user" property="createUser" />
        <result column="create_user_id" property="createUserId" />
        <result column="input_store_id" property="inputStoreId" />
    </resultMap>
    <resultMap id="TrunkListResultMap" type="com.cjyc.common.model.vo.web.waybill.TrunkListWaybillVo">
        <id column="id" property="id" />
        <result column="no" property="no" />
        <result column="type" property="type" />
        <result column="source" property="source" />
        <result column="guide_line" property="guideLine" />
        <result column="recommend_line" property="recommendLine" />
        <result column="carrier_id" property="carrierId" />
        <result column="carrier_type" property="carrierType" />
        <result column="carrier_name" property="carrierName" />
        <result column="car_num" property="carNum" />
        <result column="state" property="state" />
        <result column="freight_fee" property="freightFee" />
        <result column="freight_pay_state" property="freightPayState" />
        <result column="freight_pay_time" property="freightPayTime" />
        <result column="freight_pay_billno" property="freightPayBillno" />
        <result column="fixed_freight_fee" property="fixedFreightFee" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="create_user" property="createUser" />
        <result column="create_user_id" property="createUserId" />
        <result column="input_store_id" property="inputStoreId" />
        <collection property="child" ofType="com.cjyc.common.model.vo.web.waybill.TrunkListTaskVo" javaType="java.util.List">
            <id column="id" property="id" />
            <result column="no" property="no" />
            <result column="waybill_id" property="waybillId" />
            <result column="waybill_no" property="waybillNo" />
            <result column="car_num" property="carNum" />
            <result column="state" property="state" />
            <result column="driver_name" property="driverName" />
            <result column="driver_phone" property="driverPhone" />
            <result column="driver_id" property="driverId" />
            <result column="load_car_num" property="loadCarNum" />
            <result column="unload_car_num" property="unloadCarNum" />
            <result column="vehicle_running_id" property="vehicleRunningId" />
            <result column="vehicle_plate_no" property="vehiclePlateNo" />
            <result column="remark" property="remark" />
            <result column="create_user" property="createUser" />
            <result column="create_user_id" property="createUserId" />
            <result column="create_time" property="createTime" />
            <result column="carry_car_num" property="carryCarNum" />
            <result column="empty_car_num" property="emptyCarNum" />
            <result column="complete_time" property="completeTime" />
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, no, type, source, guide_line, recommend_line, carrier_id, carrier_type, carrier_name, car_num, state, freight_fee, freight_pay_state, freight_pay_time, freight_pay_billno, fixed_freight_fee, remark, create_time, create_user, create_user_id, input_store_id, complete_time
    </sql>
    <sql id="Base_Car_Column_List_Rename_id">
        wc.id as waybill_car_id,
        wc.waybill_id,
        wc.waybill_no,
        wc.order_car_id,
        wc.order_car_no,
        wc.freight_fee as car_freight_fee,
        wc.start_province,
        wc.start_province_code,
        wc.start_city,
        wc.start_city_code,
        wc.start_area,
        wc.start_area_code,
        wc.start_address,
        wc.start_store_name,
        wc.start_store_id,
        wc.start_belong_store_id,
        wc.end_province,
        wc.end_province_code,
        wc.end_city,
        wc.end_city_code,
        wc.end_area,
        wc.end_area_code,
        wc.end_address,
        wc.end_store_name,
        wc.end_store_id,
        wc.end_belong_store_id,
        wc.line_id,
        wc.state as car_state,
        wc.expect_start_time,
        wc.expect_end_time,
        wc.load_link_name,
        wc.load_link_user_id,
        wc.load_link_phone,
        wc.load_photo_img,
        wc.load_time,
        wc.unload_link_name,
        wc.unload_link_user_id,
        wc.unload_link_phone,
        wc.unload_photo_img,
        wc.unload_time,
        wc.receipt_flag,
        wc.create_time as car_create_time

        </sql>

    <update id="updateByIdForNull" parameterType="com.cjyc.common.model.entity.Waybill" >
    update w_waybill
    set no = #{no,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      source = #{source,jdbcType=TINYINT},
      guide_line = #{guideLine,jdbcType=VARCHAR},
      recommend_line = #{recommendLine,jdbcType=VARCHAR},
      carrier_id = #{carrierId,jdbcType=BIGINT},
      carrier_type = #{carrierType,jdbcType=TINYINT},
      carrier_name = #{carrierName,jdbcType=VARCHAR},
      car_num = #{carNum,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT},
      freight_fee = #{freightFee,jdbcType=DECIMAL},
      freight_pay_state = #{freightPayState,jdbcType=TINYINT},
      freight_pay_time = #{freightPayTime,jdbcType=CHAR},
      freight_pay_billno = #{freightPayBillno,jdbcType=CHAR},
      fixed_freight_fee = #{fixedFreightFee,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      input_store_id = #{inputStoreId,jdbcType=BIGINT},
      complete_time = #{completeTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <!--<update id="updateByIdSelectiveForNull" parameterType="com.cjyc.common.model.entity.Waybill">
        update w_waybill
        <set>
            carrier_id = #{carrierId,jdbcType=BIGINT},
            <if test="no != null">
                no = #{no,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=TINYINT},
            </if>
            <if test="guideLine != null">
                guide_line = #{guideLine,jdbcType=VARCHAR},
            </if>
            <if test="recommendLine != null">
                recommend_line = #{recommendLine,jdbcType=VARCHAR},
            </if>

            <if test="carrierType != null">
                carrier_type = #{carrierType,jdbcType=TINYINT},
            </if>
            <if test="carrierName != null">
                carrier_name = #{carrierName,jdbcType=VARCHAR},
            </if>
            <if test="carNum != null">
                car_num = #{carNum,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="freightFee != null">
                freight_fee = #{freightFee,jdbcType=DECIMAL},
            </if>
            <if test="freightPayState != null">
                freight_pay_state = #{freightPayState,jdbcType=TINYINT},
            </if>
            <if test="freightPayTime != null">
                freight_pay_time = #{freightPayTime,jdbcType=CHAR},
            </if>
            <if test="freightPayBillno != null">
                freight_pay_billno = #{freightPayBillno,jdbcType=CHAR},
            </if>
            <if test="fixedFreightFee != null">
                fixed_freight_fee = #{fixedFreightFee,jdbcType=BIT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="inputStoreId != null">
                input_store_id = #{inputStoreId,jdbcType=BIGINT},
            </if>
            <if test="completeTime != null">
                complete_time = #{completeTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>-->

    <update id="updateStateBatchByNos">
        update w_waybill
        set state = #{state}
        <where>
            and state &lt; 15
            and no in
            <foreach collection="waybillNoList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </update>
    <update id="updateStateBatchByIds">
        update w_waybill
        set state = #{state}
        <where>
            and state &lt; 15
            and id in
            <foreach collection="waybillIdList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <update id="updateStateById">
        update w_waybill
        set state = #{state}
        where state &lt; 100
        and id = #{waybillId}
    </update>
    <update id="updateForAllotDriver">
        update w_waybill
        set state = 55
        where id = #{waybillId} and state = 20
    </update>
    <update id="updateForReceipt">
        update w_waybill
        set state = 100,
        complete_time = #{currentTimeMillis}
        where id = #{id}
        and state &lt; 100
    </update>
    <update id="updateForOutStore">
        update w_waybill
        set state = 55
        where id = #{id}
        and state &lt; 55
    </update>
    <update id="updateForFinish">
        update w_waybill
        set state = 100,
        complete_time = UNIX_TIMESTAMP(NOW()) * 1000
        where id = #{id}
        and state &lt; 100
    </update>
    <update id="updateNum">
        update w_waybill
        set car_num = (
            select count(0)
            from w_waybill_car
            where waybill_id = #{waybillId}
            and state &lt;= 100
        )
        where id = #{waybillId}
    </update>
    <update id="updateFreightFee">
        update w_waybill w
        set freight_fee = (
            select sum(IFNULL(wc.freight_fee,0))
            from w_waybill_car wc
            where wc.waybill_id = #{id}
            and wc.state &lt;= 100
        )
        where w.id = #{id}
        limit 1
    </update>
    <update id="updateNumAndFreightFee">
        update w_waybill
        set car_num = (
            select count(0)
            from w_waybill_car
            where waybill_id = #{waybillId}
            and state &lt;= 100
        ),
        freight_fee = (
            select sum(IFNULL(wc.freight_fee,0))
            from w_waybill_car wc
            where wc.waybill_id = #{waybillId}
            and wc.state &lt;= 100
        )
        where id = #{waybillId}
    </update>
    <update id="updateForOver">
        update w_waybill
        set state = #{state},
        complete_time = UNIX_TIMESTAMP(NOW()) * 1000
        where id = #{id}
        and state &lt; 100
    </update>
    <select id="findByNo" resultType="com.cjyc.common.model.entity.Waybill">
        select
        <include refid="Base_Column_List"/>
        from w_waybill
        where no = #{waybillNo}
    </select>
    <select id="findListByNos" resultType="com.cjyc.common.model.entity.Waybill">
        select
        <include refid="Base_Column_List"/>
        from w_waybill
        <where>
            no in
            <foreach collection="waybillNoList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>
    <select id="findListByIds" resultType="com.cjyc.common.model.entity.Waybill">
        select
        <include refid="Base_Column_List"/>
        from w_waybill
        <where>
            id in
            <foreach collection="waybillIdList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>
    <select id="findHistoryList" resultType="com.cjyc.common.model.vo.web.waybill.HistoryListWaybillVo">
        select
            w.type as type,
            wc.waybill_no as waybillNo,
            wc.start_city_code as startCityCode,
            wc.start_city_name as startCityName,
            wc.end_city_code as endCityCode,
            wc.end_city_name as endCityName,
            wc.start_address as startAddress,
            wc.end_address as endAddress,
            w.carrier_id as carrierId,
            w.carrier_name as carrierName,
            t.driver_id as driverId,
            t.driver_name as driverName,
            t.driver_phone as driverPhone,
            wc.pick_contact_name as pickContactName,
            wc.pick_contact_phone as pickContactPhone,
            wc.expect_start_time as expectStartTime,
            wc.expect_end_time as expectEndTime,
            tc.load_time as loadTime,
            tc.unload_time as unloadTime
        from w_order_car oc
        left join w_waybill_car wc on wc.order_car_id = oc.id
        left join w_waybill w on wc.waybill_id = w.id
        left join w_task_car tc on tc.waybill_car_id = wc.id
        left join w_task t on t.id = tc.task_id
        <where>
            wc.order_car_id = #{paramsDto.orderCarId}
            and w.type = #{paramsDto.type}
        </where>
    </select>
    <select id="findByOrderCarId" resultType="com.cjyc.common.model.entity.Waybill">
        select
        <include refid="Base_Column_List"/>
        from w_waybill_car wc
        join w_waybill w on wc.waybill_id = w.id
        where wc.order_car_id = 1
        GROUP BY w.id

    </select>
    <select id="findTrunkStateListByOrderCarId" resultType="java.lang.Integer">
        select
        w.state
        from w_waybill_car wc
        join w_waybill w on wc.waybill_id = w.id
        where wc.order_car_id = #{orderCarId}
        and w.type = 3
        and w.state &lt;= 100
        GROUP BY w.id
    </select>

    <select id="countWaybill" resultType="java.lang.Integer">
        select
        count(0)
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where w.state &lt;= 100
        and wc.state &lt;= 100
        and wc.order_car_id = #{orderCarId}
        and w.type = #{waybillType}
    </select>

    <select id="findListTrunk" resultMap="TrunkListResultMap">
        select
        w.*,
        t.*,
        vr.carry_car_num as carryCarNum,
        vr.occupied_car_num as occupiedCarNum
        from w_waybill w
        join w_task t on t.waybill_id = w.id
        left join d_vehicle_running vr on vr.id = t.vehicle_running_id
    </select>
    <select id="findLeftListTrunk" resultType="com.cjyc.common.model.vo.web.waybill.TrunkListWaybillVo">
         select
        w.*,
        t.*,
        vr.carry_car_num as carryCarNum,
        vr.occupied_car_num as occupiedCarNum
        from w_waybill w
        left join w_task t on t.waybill_id = w.id
        left join d_vehicle_running vr on vr.id = t.vehicle_running_id
    </select>


    <select id="findVoById" resultType="com.cjyc.common.model.vo.web.waybill.WaybillVo">
        select
            w.*,
            (case w.carrier_type
            when 1 then '个人司机'
            when 2 then w.carrier_name
            when 3 then '业务员'
            when 4 then '代驾'
            when 5 then '拖车'
            when 6 then '自提/自送'
            else null end) as carrier,
            (case when w.carrier_type != 2 then dr.id else null end) as driverId,
            (case when w.carrier_type != 2 then dr.name else null end) as driverName,
            (case when w.carrier_type != 2 then dr.phone else null end) as driverPhone,
            (case when w.carrier_type != 2 then dr.id_card else null end) as idCard,
            (case when w.carrier_type != 2 then vr.plate_no else null end) as vehiclePlateNo
        from w_waybill w
        LEFT JOIN w_task t on t.waybill_id = w.id and t.state &lt;= 100
        LEFT JOIN d_driver dr on dr.id = t.driver_id
        left join d_vehicle_running vr on vr.driver_id = t.driver_id
        where w.id = #{id}
        group by w.id
    </select>
    <sql id="waybill_inner_state">
        (case w.state
        when 0 then '待承接'
        when 20 then '待运输'
        when 55 then '运输中'
        when 100 then '已完成'
        when 113 then '已取消'
        end ) as outterState
    </sql>
    <select id="findMainListTrunk" resultType="com.cjyc.common.model.vo.web.waybill.TrunkMainListWaybillVo">
        select
        w.*,
        <include refid="waybill_inner_state"/>,
        w.no as wtNo,
        (case when w.carrier_type != 2 then tb.driver_id end) as driverId,
        (case when w.carrier_type != 2 then tb.driver_name end) as driverName,
        (case when w.carrier_type != 2 then tb.driver_phone end) as driverPhone,
        (case when w.carrier_type != 2 then tb.plate_no end) as vehiclePlateNo,
        (case when w.carrier_type != 2 then tb.carry_car_num end) as carryCarNum,
        (case when w.carrier_type != 2 then tb.occupied_car_num end) as occupiedCarNum
        from w_waybill w
        left join (
            select t.*,vr.carry_car_num,vr.plate_no,vr.occupied_car_num
            from w_task t
            left join d_vehicle_running vr on vr.driver_id = t.driver_id
            where t.state &lt;= 100
            group by t.id
        ) as tb on tb.waybill_id = w.id
        <where>
            w.type = 2
            <if test="paramsDto.loginId != null">
                and w.create_user_id = #{paramsDto.loginId}
            </if>
            <if test="paramsDto.state != null">
                and w.state = #{paramsDto.state}
            </if>
            <if test="paramsDto.waybillNo != null and paramsDto.waybillNo.trim() != ''">
                and w.no like concat('%', #{paramsDto.waybillNo}, '%')
            </if>
            <if test="paramsDto.guideLine != null and paramsDto.guideLine != ''">
                and w.guide_line  like concat('%', #{paramsDto.guideLine}, '%')
            </if>
            <if test="paramsDto.carrierName != null and paramsDto.carrierName != ''">
                and w.carrier_name like concat('%', #{paramsDto.carrierName}, '%')
            </if>
            <if test="paramsDto.beginCreateTime != null">
                and w.create_time  &gt; #{paramsDto.beginCreateTime}
            </if>
            <if test="paramsDto.endCreateTime != null">
                and w.create_time  &lt;= #{paramsDto.endCreateTime}
            </if>
        </where>
        group by w.id
        order by w.create_time desc
    </select>
    <sql id="task_inner_state">
        (case t.state
        when 0 then '待运输'
        when 5 then '待运输'
        when 55 then '运输中'
        when 100 then '已完成'
        when 113 then '已取消'
        end ) as outterState
    </sql>
    <select id="findSubListTrunk" resultType="com.cjyc.common.model.vo.web.waybill.TrunkSubListWaybillVo">
        select
        <include refid="task_inner_state"/>,
        w.carrier_name as carrierName,
        t.no as wtNo,
        t.car_num as carNum,
        t.guide_line as guideLine,
        t.car_num as taskCarNum,
        t.driver_id as driverId,
        t.driver_name as driverName,
        t.driver_phone as driverPhone,
        t.vehicle_plate_no as vehiclePlateNo,
        t.remark as remark,
        t.create_time as createTime,
        t.create_user as createUser,
        vr.carry_car_num as carryCarNum,
        vr.occupied_car_num as occupiedCarNum
        from w_waybill w
        JOIN w_task t on w.id = t.waybill_id
        left join d_vehicle_running vr on vr.driver_id = t.driver_id
        <where>
            w.type = 2
            <if test="paramsDto.state != null">
                and t.state = #{paramsDto.state}
            </if>
            <if test="paramsDto.loginId != null">
                and w.create_user_id = #{paramsDto.loginId}
            </if>
            <if test="paramsDto.waybillNo != null and paramsDto.waybillNo.trim() != ''">
                and w.no like concat('%', #{paramsDto.waybillNo}, '%')
            </if>
            <if test="paramsDto.guideLine != null and paramsDto.guideLine.trim() != ''">
                and w.guide_line like concat('%', #{paramsDto.guideLine}, '%')
            </if>
            <if test="paramsDto.carrierName != null and paramsDto.carrierName.trim() != ''">
                and w.carrier_name like concat('%', #{paramsDto.carrierName}, '%')
            </if>
            <if test="paramsDto.driverName != null and paramsDto.driverName.trim() != ''">
                and t.driver_name  like concat('%', #{paramsDto.driverName}, '%')
            </if>
            <if test="paramsDto.driverPhone != null and paramsDto.driverPhone.trim() != ''">
                and t.driver_phone like concat('%', #{paramsDto.driverPhone}, '%')
            </if>
            <if test="paramsDto.vehiclePlateNo != null and paramsDto.vehiclePlateNo.trim() != ''">
                and t.vehicle_plate_no like concat('%', #{paramsDto.vehiclePlateNo}, '%')
            </if>
            <if test="paramsDto.beginCreateTime != null">
                and t.create_time  &gt; #{paramsDto.beginCreateTime}
            </if>
            <if test="paramsDto.endCreateTime != null">
                and t.create_time  &lt;= #{paramsDto.endCreateTime}
            </if>
        </where>
        group by t.id
        order by w.create_time desc
    </select>
    <select id="findCrListForMineCarrier" resultType="com.cjyc.common.model.vo.web.waybill.CrWaybillVo">
        select
            <include refid="waybill_inner_state"/>,
            w.no as waybillNo,
            w.id as waybillId,
            w.type as waybillType,
            w.carrier_id as carrierId,
            w.guide_line as guideLine,
            w.carrier_name as carrierName,
            w.state as state,
            w.remark as remark,
            w.create_time as createTime,
            w.car_num as carNum,
            w.create_user as createUser,
        (select IFNULL(sum(car_num),0) from w_task where state &lt;= 100 and waybill_id = w.id) as hasAllottedNum
        from w_waybill w
        <where>
            w.carrier_id = #{paramsDto.carrierId}
            <if test="paramsDto.waybillNo != null and paramsDto.waybillNo.trim() != ''">
                and w.no like concat('%',#{paramsDto.waybillNo},'%')
            </if>
            <if test="paramsDto.waybillType != null and paramsDto.waybillType != ''">
                and w.type = #{paramsDto.waybillType}
            </if>
            <if test="paramsDto.createUser != null and paramsDto.createUser != ''">
                and w.create_user = #{paramsDto.createUser}
            </if>
        </where>
        order by w.id desc
    </select>


    <!-- 查询该承运商下运单 -->
    <select id="findByCarrierId" resultType="com.cjyc.common.model.vo.web.mineCarrier.MyWaybillVo"
                parameterType="com.cjyc.common.model.dto.web.mineCarrier.MyWaybillDto">
          SELECT
            ww.id AS billId,
            ww.no AS billNo,
            ww.guide_line AS guideLine,
            ww.car_num AS totalCarNum,
            IFNULL( ( ww.car_num - sum( wt.car_num ) ), 0 ) AS allocateCarNum,
            dc.name AS carrierName,
            ww.remark AS remark,
            ww.create_time AS createTime,
            ww.create_user AS createUser
        FROM
            w_waybill ww
        LEFT JOIN w_task wt ON wt.waybill_id = ww.id
        LEFT JOIN d_carrier dc ON dc.id = ww.carrier_id
        <where>
            <if test="billNo != null and billNo.trim() != ''">
                  ww.no = #{billNo}
            </if>
            <if test="carrierId != null ">
                and dc.id = #{carrierId}
            </if>
            and dc.type = 2
            and dc.business_state = 0
            and dc.state = 2
            group by wt.id
        </where>
    </select>
    <select id="findCrListByCarrierId" resultType="java.util.List">

    </select>
    <select id="findWaitAllotListByCarrierIds"
            resultType="com.cjyc.common.model.vo.driver.waybill.WaitAllotVo">
        select
            w.id as waybillId,
            w.no as waybillNo,
            w.type as waybillType,
            w.guide_line as guideLine,
            w.carrier_id as carrierId,
            w.carrier_type as carrierType,
            w.carrier_name as carrierName,
            w.car_num as carNum,
            sum(IFNULL(t.car_num,0)) as allottedCarNum,
            w.freight_fee as freightFee,
            w.fixed_freight_fee as fixedFreightFee,
            w.remark as remark,
            w.create_time as createTime,
            w.create_user as createUser,
            w.create_user_id as createUserId
        from w_waybill w
        left join w_task t on t.waybill_id = w.id
        <where>
<!--           <if test="carrierIds != null">
               w.carrier_id in
               <foreach collection=""
           </if>-->
        </where>
        GROUP BY w.id
    </select>

    <!--查询待分配运单列表-->
    <select id="selectWaitHandleTaskPage" parameterType="com.cjyc.common.model.dto.driver.BaseDriverDto"
            resultType="com.cjyc.common.model.vo.driver.task.TaskBillVo">
        select
            w.id as waybillId,
            w.no as waybillNo,
            w.car_num as carNum,
            w.type as type,
            w.freight_fee as freightFee,
            w.create_time as createTime,
            (case w.type when 1 then concat(wcar.start_city,'-',wcar.end_city)
                         when 3 then concat(wcar.start_city,'-',wcar.end_city) else w.guide_line end) AS guideLine,
            wcar.start_city as startCity,
            wcar.end_city as endCity
        from
            w_waybill_car wcar
            left join w_waybill w on wcar.waybill_id = w.id
        where
            w.carrier_id in (select dept_id
                            from s_user_role_dept
                            where user_id = #{loginId} and
                            state = ${@com.cjyc.common.model.enums.CommonStateEnum@CHECKED.code}
                            )
            and wcar.state = ${@com.cjyc.common.model.enums.waybill.WaybillCarStateEnum@WAIT_ALLOT.code}
        group by w.id
        order by w.create_time desc
    </select>

    <!--查询历史调度记录列表分页-->
    <select id="selectHistoryDispatchRecord" parameterType="com.cjyc.common.model.dto.salesman.dispatch.HistoryDispatchRecordDto"
            resultType="com.cjyc.common.model.vo.salesman.dispatch.HistoryDispatchRecordVo">
        select
            w.id as waybillId,
            w.no as waybillNo,
            w.type as waybillType,
           (case w.type when 1 then concat(car.start_city,'-',car.end_city)
                         when 3 then concat(car.start_city,'-',car.end_city) else w.guide_line end) AS guideLine,
            w.car_num as carNum,
            w.freight_fee as freightFee,
            w.create_time as createTime,
            w.carrier_type as carrierType,
            carrier.linkman as linkMan,
            carrier.linkman_phone as linkmanPhone,
            car.order_car_id as orderCarId,
            w.carrier_id as carrierId
        from
            w_waybill w
            left join d_carrier carrier on w.carrier_id=carrier.id
            left join w_waybill_car car on w.id=car.waybill_id
        <where>
            <if test="bizStoreIds != null">
                and (w.input_store_id in <foreach collection="bizStoreIds" item="item" index="index" open="(" close=")" separator=",">
                                        #{item}
                                    </foreach>
                or w.create_user_id=#{loginId})
            </if>
            <if test="key != null and key.trim() != ''">
                and (carrier.linkman_phone like CONCAT('%',#{key},'%') or w.no like CONCAT('%',#{key},'%'))
            </if>
            <if test="type != null and type.trim() != 0">
                and w.type=#{type}
            </if>
            <if test="createTimeS != null and createTimeS != 0">
                and w.create_time >= #{createTimeS}
            </if>
            <if test="createTimeE != null and createTimeE != 0">
                and w.create_time &lt;= #{createTimeE}
            </if>
            <if test="startCity != null and startCity.trim() != ''">
                and w.guide_line like concat('%',#{startCity},'%')
            </if>
            <if test="(startCity != null and startCity.trim() != '') and (endCity != null and endCity.trim() != '')">
                and w.guide_line like concat('%',#{endCity},'%')
            </if>
            <if test="(startCity == null or startCity.trim() == '') and (endCity != null and endCity.trim() != '')">
                and w.guide_line like concat('%-',#{endCity},'%')
            </if>
        </where>
        group by w.id
        order by w.id desc
    </select>

    <select id="getSettlementDetail" parameterType="com.cjyc.common.model.dto.web.mineCarrier.SettlementDetailQueryDto"
            resultType="com.cjyc.common.model.vo.web.mineCarrier.SettlementDetailVo">
        select ww.no,wt.car_num,wt.complete_time,dc.settle_type,ww.freight_pay_time,
        ww.freight_pay_state,ww.freight_fee,ww.type,wt.guide_line,ww.carrier_name,
        wt.driver_name,wt.driver_phone
        from w_task wt
        left join w_waybill ww on wt.waybill_no = ww.no
        left join d_carrier dc on ww.carrier_id = dc.id
        left join d_driver dd on dd.id = wt.driver_id

        where dc.id = #{carrierId}

    </select>
    <select id="findListByWaybillCarIds" resultType="com.cjyc.common.model.entity.Waybill">
        select w.*
        from w_waybill w
        join w_waybill_car wc on w.id = wc.waybill_id
        where wc.id in
        <foreach collection="collection" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="countMultiStepUnpassStore" resultType="java.lang.Integer">
        select count(0)
        from w_waybill w
        join w_waybill_car wc on wc.waybill_id = w.id
        where w.id = #{waybillId}
        and wc.receipt_flag != 1
        and (wc.end_store_id is null or wc.end_store_id = 0)

    </select>

</mapper>
